From 08e58cd0382fba74a93449d4c4906d120de2096a Mon Sep 17 00:00:00 2001
From: Nico Schwab <nico.schwab@bluewin.ch>
Date: Mon, 1 Feb 2021 14:20:58 +0100
Subject: [PATCH] Enabled all round 3 sigs

---
 configure.ac              |  38 +--
 oqs-template/generate.yml | 108 +++---
 oqs-test/test_openssh.py  |   4 +-
 oqs-utils.h               | 276 ++++++++++++++--
 pathnames.h               | 248 +++++++++++++-
 readconf.c                | 124 ++++++-
 servconf.c                | 238 +++++++++++++-
 ssh-add.c                 | 124 ++++++-
 ssh-keygen.c              | 424 +++++++++++++++++++++++-
 ssh-keyscan.c             | 672 ++++++++++++++++++++++++++++++++++----
 ssh-keysign.c             | 126 ++++++-
 ssh-oqs.c                 | 178 +++++++++-
 ssh.c                     | 184 +++++++++--
 sshconnect.c              | 124 ++++++-
 sshkey.c                  | 124 ++++++-
 sshkey.h                  | 124 ++++++-
 16 files changed, 2839 insertions(+), 277 deletions(-)

diff --git a/configure.ac b/configure.ac
index 93347a7b..1a75e19c 100644
--- a/configure.ac
+++ b/configure.ac
@@ -3732,7 +3732,7 @@ if test "x$with_liboqs" = "xyes" ; then
 	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 				#include <oqs/oqs.h>
 			]], [[
-					#if defined(OQS_ENABLE_SIG_DILITHIUM) || (defined(OQS_ENABLE_SIG_dilithium_2))
+					#if defined(OQS_ENABLE_SIG_DILITHIUM) || (defined(OQS_ENABLE_SIG_dilithium_2) && defined(OQS_ENABLE_SIG_dilithium_3) && defined(OQS_ENABLE_SIG_dilithium_4))
 					#else
 					#error "DILITHIUM is not supported"
 					#endif
@@ -3746,7 +3746,7 @@ if test "x$with_liboqs" = "xyes" ; then
 	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 				#include <oqs/oqs.h>
 			]], [[
-					#if defined(OQS_ENABLE_SIG_FALCON) || (defined(OQS_ENABLE_SIG_falcon_512))
+					#if defined(OQS_ENABLE_SIG_FALCON) || (defined(OQS_ENABLE_SIG_falcon_512) && defined(OQS_ENABLE_SIG_falcon_1024))
 					#else
 					#error "FALCON is not supported"
 					#endif
@@ -3756,25 +3756,11 @@ if test "x$with_liboqs" = "xyes" ; then
 			], [AC_MSG_RESULT([no])
 	])
 
-	AC_MSG_CHECKING([for libOQS MQDSS support])
-	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-				#include <oqs/oqs.h>
-			]], [[
-					#if defined(OQS_ENABLE_SIG_MQDSS) || (defined(OQS_ENABLE_SIG_mqdss_31_48))
-					#else
-					#error "MQDSS is not supported"
-					#endif
-			]])],
-			[ AC_MSG_RESULT([yes])
-				AC_DEFINE([HAVE_MQDSS], [1], [Define to 1 if LibOQS library is compiled with support for MQDSS])
-			], [AC_MSG_RESULT([no])
-	])
-
 	AC_MSG_CHECKING([for libOQS PICNIC support])
 	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 				#include <oqs/oqs.h>
 			]], [[
-					#if defined(OQS_ENABLE_SIG_PICNIC) || (defined(OQS_ENABLE_SIG_picnic_L1_FS) && defined(OQS_ENABLE_SIG_picnic3_L1))
+					#if defined(OQS_ENABLE_SIG_PICNIC) || (defined(OQS_ENABLE_SIG_picnic_L1_FS) && defined(OQS_ENABLE_SIG_picnic_L1_UR) && defined(OQS_ENABLE_SIG_picnic_L1_full) && defined(OQS_ENABLE_SIG_picnic_L3_FS) && defined(OQS_ENABLE_SIG_picnic_L3_UR) && defined(OQS_ENABLE_SIG_picnic_L3_full) && defined(OQS_ENABLE_SIG_picnic_L5_FS) && defined(OQS_ENABLE_SIG_picnic_L5_UR) && defined(OQS_ENABLE_SIG_picnic_L5_full) && defined(OQS_ENABLE_SIG_picnic3_L1) && defined(OQS_ENABLE_SIG_picnic3_L3) && defined(OQS_ENABLE_SIG_picnic3_L5))
 					#else
 					#error "PICNIC is not supported"
 					#endif
@@ -3784,25 +3770,11 @@ if test "x$with_liboqs" = "xyes" ; then
 			], [AC_MSG_RESULT([no])
 	])
 
-	AC_MSG_CHECKING([for libOQS QTESLA support])
-	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-				#include <oqs/oqs.h>
-			]], [[
-					#if defined(OQS_ENABLE_SIG_QTESLA) || (defined(OQS_ENABLE_SIG_qTesla_p_I))
-					#else
-					#error "QTESLA is not supported"
-					#endif
-			]])],
-			[ AC_MSG_RESULT([yes])
-				AC_DEFINE([HAVE_QTESLA], [1], [Define to 1 if LibOQS library is compiled with support for QTESLA])
-			], [AC_MSG_RESULT([no])
-	])
-
 	AC_MSG_CHECKING([for libOQS RAINBOW support])
 	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 				#include <oqs/oqs.h>
 			]], [[
-					#if defined(OQS_ENABLE_SIG_RAINBOW) || (defined(OQS_ENABLE_SIG_rainbow_Ia_classic) && defined(OQS_ENABLE_SIG_rainbow_IIIc_classic) && defined(OQS_ENABLE_SIG_rainbow_Vc_classic))
+					#if defined(OQS_ENABLE_SIG_RAINBOW) || (defined(OQS_ENABLE_SIG_rainbow_Ia_classic) && defined(OQS_ENABLE_SIG_rainbow_Ia_cyclic) && defined(OQS_ENABLE_SIG_rainbow_Ia_cyclic_compressed) && defined(OQS_ENABLE_SIG_rainbow_IIIc_classic) && defined(OQS_ENABLE_SIG_rainbow_IIIc_cyclic) && defined(OQS_ENABLE_SIG_rainbow_IIIc_cyclic_compressed) && defined(OQS_ENABLE_SIG_rainbow_Vc_classic) && defined(OQS_ENABLE_SIG_rainbow_Vc_cyclic) && defined(OQS_ENABLE_SIG_rainbow_Vc_cyclic_compressed))
 					#else
 					#error "RAINBOW is not supported"
 					#endif
@@ -3816,7 +3788,7 @@ if test "x$with_liboqs" = "xyes" ; then
 	AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 				#include <oqs/oqs.h>
 			]], [[
-					#if defined(OQS_ENABLE_SIG_SPHINCS) || (defined(OQS_ENABLE_SIG_sphincs_haraka_128f_robust) && defined(OQS_ENABLE_SIG_sphincs_sha256_128f_robust) && defined(OQS_ENABLE_SIG_sphincs_shake256_128f_robust))
+					#if defined(OQS_ENABLE_SIG_SPHINCS) || (defined(OQS_ENABLE_SIG_sphincs_haraka_128f_robust) && defined(OQS_ENABLE_SIG_sphincs_haraka_128f_simple) && defined(OQS_ENABLE_SIG_sphincs_haraka_128s_robust) && defined(OQS_ENABLE_SIG_sphincs_haraka_128s_simple) && defined(OQS_ENABLE_SIG_sphincs_haraka_192f_robust) && defined(OQS_ENABLE_SIG_sphincs_haraka_192f_simple) && defined(OQS_ENABLE_SIG_sphincs_haraka_192s_robust) && defined(OQS_ENABLE_SIG_sphincs_haraka_192s_simple) && defined(OQS_ENABLE_SIG_sphincs_haraka_256f_robust) && defined(OQS_ENABLE_SIG_sphincs_haraka_256f_simple) && defined(OQS_ENABLE_SIG_sphincs_haraka_256s_robust) && defined(OQS_ENABLE_SIG_sphincs_haraka_256s_simple) && defined(OQS_ENABLE_SIG_sphincs_sha256_128f_robust) && defined(OQS_ENABLE_SIG_sphincs_sha256_128f_simple) && defined(OQS_ENABLE_SIG_sphincs_sha256_128s_robust) && defined(OQS_ENABLE_SIG_sphincs_sha256_128s_simple) && defined(OQS_ENABLE_SIG_sphincs_sha256_192f_robust) && defined(OQS_ENABLE_SIG_sphincs_sha256_192f_simple) && defined(OQS_ENABLE_SIG_sphincs_sha256_192s_robust) && defined(OQS_ENABLE_SIG_sphincs_sha256_192s_simple) && defined(OQS_ENABLE_SIG_sphincs_sha256_256f_robust) && defined(OQS_ENABLE_SIG_sphincs_sha256_256f_simple) && defined(OQS_ENABLE_SIG_sphincs_sha256_256s_robust) && defined(OQS_ENABLE_SIG_sphincs_sha256_256s_simple) && defined(OQS_ENABLE_SIG_sphincs_shake256_128f_robust) && defined(OQS_ENABLE_SIG_sphincs_shake256_128f_simple) && defined(OQS_ENABLE_SIG_sphincs_shake256_128s_robust) && defined(OQS_ENABLE_SIG_sphincs_shake256_128s_simple) && defined(OQS_ENABLE_SIG_sphincs_shake256_192f_robust) && defined(OQS_ENABLE_SIG_sphincs_shake256_192f_simple) && defined(OQS_ENABLE_SIG_sphincs_shake256_192s_robust) && defined(OQS_ENABLE_SIG_sphincs_shake256_192s_simple) && defined(OQS_ENABLE_SIG_sphincs_shake256_256f_robust) && defined(OQS_ENABLE_SIG_sphincs_shake256_256f_simple) && defined(OQS_ENABLE_SIG_sphincs_shake256_256s_robust) && defined(OQS_ENABLE_SIG_sphincs_shake256_256s_simple))
 					#else
 					#error "SPHINCS is not supported"
 					#endif
diff --git a/oqs-template/generate.yml b/oqs-template/generate.yml
index 0da0646c..c407982c 100644
--- a/oqs-template/generate.yml
+++ b/oqs-template/generate.yml
@@ -20,13 +20,13 @@ sigs:
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "DILITHIUM_3"
         oqs_meth: "OQS_SIG_alg_dilithium_3"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "DILITHIUM_4"
         oqs_meth: "OQS_SIG_alg_dilithium_4"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
@@ -40,7 +40,7 @@ sigs:
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "FALCON_1024"
         oqs_meth: "OQS_SIG_alg_falcon_1024"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
@@ -48,7 +48,7 @@ sigs:
     family: "MQDSS"
     variants:
       -
-        enable: true
+        enable: false
         name: "MQDSS_31_48"
         oqs_meth: "OQS_SIG_alg_mqdss_31_48"
         mix_with: [{'name':'rsa3072'},
@@ -68,44 +68,44 @@ sigs:
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "PICNIC_L1UR"
         oqs_meth: "OQS_SIG_alg_picnic_L1_UR"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "PICNIC_L1FULL"
         oqs_meth: "OQS_SIG_alg_picnic_L1_full"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "PICNIC_L3FS"
         oqs_meth: "OQS_SIG_alg_picnic_L3_FS"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "PICNIC_L3UR"
         oqs_meth: "OQS_SIG_alg_picnic_L3_UR"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "PICNIC_L3FULL"
         oqs_meth: "OQS_SIG_alg_picnic_L3_full"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "PICNIC_L5FS"
         oqs_meth: "OQS_SIG_alg_picnic_L5_FS"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "PICNIC_L5UR"
         oqs_meth: "OQS_SIG_alg_picnic_L5_UR"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "PICNIC_L5FULL"
         oqs_meth: "OQS_SIG_alg_picnic_L5_full"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
@@ -116,12 +116,12 @@ sigs:
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "PICNIC3_L3"
         oqs_meth: "OQS_SIG_alg_picnic3_L3"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "PICNIC3_L5"
         oqs_meth: "OQS_SIG_alg_picnic3_L5"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
@@ -129,7 +129,7 @@ sigs:
     family: "QTESLA"
     variants:
       -
-        enable: true
+        enable: false
         name: "QTESLA_P_I"
         oqs_meth: "OQS_SIG_alg_qTesla_p_I"
         mix_with: [{'name':'rsa3072'},
@@ -149,13 +149,13 @@ sigs:
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "RAINBOW_IA_CYCLIC"
         oqs_meth: "OQS_SIG_alg_rainbow_Ia_cyclic"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "RAINBOW_IA_CYCLIC_COMPRESSED"
         oqs_meth: "OQS_SIG_alg_rainbow_Ia_cyclic_compressed"
         mix_with: [{'name':'rsa3072'},
@@ -166,12 +166,12 @@ sigs:
         oqs_meth: "OQS_SIG_alg_rainbow_IIIc_classic"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "RAINBOW_IIIC_CYCLIC"
         oqs_meth: "OQS_SIG_alg_rainbow_IIIc_cyclic"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "RAINBOW_IIIC_CYCLIC_COMPRESSED"
         oqs_meth: "OQS_SIG_alg_rainbow_IIIc_cyclic_compressed"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
@@ -181,12 +181,12 @@ sigs:
         oqs_meth: "OQS_SIG_alg_rainbow_Vc_classic"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "RAINBOW_VC_CYCLIC"
         oqs_meth: "OQS_SIG_alg_rainbow_Vc_cyclic"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "RAINBOW_VC_CYCLIC_COMPRESSED"
         oqs_meth: "OQS_SIG_alg_rainbow_Vc_cyclic_compressed"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
@@ -200,61 +200,61 @@ sigs:
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_HARAKA_128F_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_haraka_128f_simple"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_HARAKA_128S_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_haraka_128s_robust"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_HARAKA_128S_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_haraka_128s_simple"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_HARAKA_192F_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_haraka_192f_robust"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
 
       -
-        enable: false
+        enable: true
         name: "SPHINCS_HARAKA_192F_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_haraka_192f_simple"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_HARAKA_192S_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_haraka_192s_robust"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_HARAKA_192S_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_haraka_192s_simple"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_HARAKA_256F_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_haraka_256f_robust"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_HARAKA_256F_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_haraka_256f_simple"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_HARAKA_256S_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_haraka_256s_robust"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_HARAKA_256S_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_haraka_256s_simple"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
@@ -265,61 +265,61 @@ sigs:
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHA256_128F_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_sha256_128f_simple"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHA256_128S_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_sha256_128s_robust"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHA256_128S_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_sha256_128s_simple"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHA256_192F_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_sha256_192f_robust"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
 
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHA256_192F_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_sha256_192f_simple"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHA256_192S_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_sha256_192s_robust"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHA256_192S_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_sha256_192s_simple"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHA256_256F_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_sha256_256f_robust"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHA256_256F_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_sha256_256f_simple"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHA256_256S_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_sha256_256s_robust"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHA256_256S_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_sha256_256s_simple"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
@@ -330,61 +330,61 @@ sigs:
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHAKE256_128F_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_shake256_128f_simple"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHAKE256_128S_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_shake256_128s_robust"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHAKE256_128S_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_shake256_128s_simple"
         mix_with: [{'name':'rsa3072'},
                    {'name': 'p256', 'curve':'NID_X9_62_prime256v1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHAKE256_192F_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_shake256_192f_robust"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
 
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHAKE256_192F_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_shake256_192f_simple"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHAKE256_192S_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_shake256_192s_robust"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHAKE256_192S_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_shake256_192s_simple"
         mix_with: [{'name': 'p384', 'curve':'NID_secp384r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHAKE256_256F_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_shake256_256f_robust"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHAKE256_256F_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_shake256_256f_simple"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHAKE256_256S_ROBUST"
         oqs_meth: "OQS_SIG_alg_sphincs_shake256_256s_robust"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
       -
-        enable: false
+        enable: true
         name: "SPHINCS_SHAKE256_256S_SIMPLE"
         oqs_meth: "OQS_SIG_alg_sphincs_shake256_256s_simple"
         mix_with: [{'name': 'p521', 'curve':'NID_secp521r1'}]
diff --git a/oqs-test/test_openssh.py b/oqs-test/test_openssh.py
index 6afd8a2d..1273e732 100644
--- a/oqs-test/test_openssh.py
+++ b/oqs-test/test_openssh.py
@@ -9,9 +9,9 @@ if 'WITH_PQAUTH' in os.environ and os.environ['WITH_PQAUTH'] == 'true':
     sig_algs += [
 ##### OQS_TEMPLATE_FRAGMENT_LIST_SIGS_START
     # post-quantum only sigs
-    'ssh-oqsdefault','ssh-dilithium2','ssh-falcon512','ssh-mqdss3148','ssh-picnicl1fs','ssh-picnic3l1','ssh-qteslapi','ssh-rainbowiaclassic','ssh-rainbowiiicclassic','ssh-rainbowvcclassic','ssh-sphincsharaka128frobust','ssh-sphincssha256128frobust','ssh-sphincsshake256128frobust',
+    'ssh-oqsdefault','ssh-dilithium2','ssh-dilithium3','ssh-dilithium4','ssh-falcon512','ssh-falcon1024','ssh-picnicl1fs','ssh-picnicl1ur','ssh-picnicl1full','ssh-picnicl3fs','ssh-picnicl3ur','ssh-picnicl3full','ssh-picnicl5fs','ssh-picnicl5ur','ssh-picnicl5full','ssh-picnic3l1','ssh-picnic3l3','ssh-picnic3l5','ssh-rainbowiaclassic','ssh-rainbowiacyclic','ssh-rainbowiacycliccompressed','ssh-rainbowiiicclassic','ssh-rainbowiiiccyclic','ssh-rainbowiiiccycliccompressed','ssh-rainbowvcclassic','ssh-rainbowvccyclic','ssh-rainbowvccycliccompressed','ssh-sphincsharaka128frobust','ssh-sphincsharaka128fsimple','ssh-sphincsharaka128srobust','ssh-sphincsharaka128ssimple','ssh-sphincsharaka192frobust','ssh-sphincsharaka192fsimple','ssh-sphincsharaka192srobust','ssh-sphincsharaka192ssimple','ssh-sphincsharaka256frobust','ssh-sphincsharaka256fsimple','ssh-sphincsharaka256srobust','ssh-sphincsharaka256ssimple','ssh-sphincssha256128frobust','ssh-sphincssha256128fsimple','ssh-sphincssha256128srobust','ssh-sphincssha256128ssimple','ssh-sphincssha256192frobust','ssh-sphincssha256192fsimple','ssh-sphincssha256192srobust','ssh-sphincssha256192ssimple','ssh-sphincssha256256frobust','ssh-sphincssha256256fsimple','ssh-sphincssha256256srobust','ssh-sphincssha256256ssimple','ssh-sphincsshake256128frobust','ssh-sphincsshake256128fsimple','ssh-sphincsshake256128srobust','ssh-sphincsshake256128ssimple','ssh-sphincsshake256192frobust','ssh-sphincsshake256192fsimple','ssh-sphincsshake256192srobust','ssh-sphincsshake256192ssimple','ssh-sphincsshake256256frobust','ssh-sphincsshake256256fsimple','ssh-sphincsshake256256srobust','ssh-sphincsshake256256ssimple',
     # hybrid sigs
-    'ssh-rsa3072-oqsdefault','ssh-p256-oqsdefault','ssh-rsa3072-dilithium2','ssh-p256-dilithium2','ssh-rsa3072-falcon512','ssh-p256-falcon512','ssh-rsa3072-mqdss3148','ssh-p256-mqdss3148','ssh-rsa3072-picnicl1fs','ssh-p256-picnicl1fs','ssh-rsa3072-picnic3l1','ssh-p256-picnic3l1','ssh-rsa3072-qteslapi','ssh-p256-qteslapi','ssh-rsa3072-rainbowiaclassic','ssh-p256-rainbowiaclassic','ssh-p384-rainbowiiicclassic','ssh-p521-rainbowvcclassic','ssh-rsa3072-sphincsharaka128frobust','ssh-p256-sphincsharaka128frobust','ssh-rsa3072-sphincssha256128frobust','ssh-p256-sphincssha256128frobust','ssh-rsa3072-sphincsshake256128frobust','ssh-p256-sphincsshake256128frobust',
+    'ssh-rsa3072-oqsdefault','ssh-p256-oqsdefault','ssh-rsa3072-dilithium2','ssh-p256-dilithium2','ssh-rsa3072-dilithium3','ssh-p256-dilithium3','ssh-p384-dilithium4','ssh-rsa3072-falcon512','ssh-p256-falcon512','ssh-p521-falcon1024','ssh-rsa3072-picnicl1fs','ssh-p256-picnicl1fs','ssh-rsa3072-picnicl1ur','ssh-p256-picnicl1ur','ssh-rsa3072-picnicl1full','ssh-p256-picnicl1full','ssh-p384-picnicl3fs','ssh-p384-picnicl3ur','ssh-p384-picnicl3full','ssh-p521-picnicl5fs','ssh-p521-picnicl5ur','ssh-p521-picnicl5full','ssh-rsa3072-picnic3l1','ssh-p256-picnic3l1','ssh-p384-picnic3l3','ssh-p521-picnic3l5','ssh-rsa3072-rainbowiaclassic','ssh-p256-rainbowiaclassic','ssh-rsa3072-rainbowiacyclic','ssh-p256-rainbowiacyclic','ssh-rsa3072-rainbowiacycliccompressed','ssh-p256-rainbowiacycliccompressed','ssh-p384-rainbowiiicclassic','ssh-p384-rainbowiiiccyclic','ssh-p384-rainbowiiiccycliccompressed','ssh-p521-rainbowvcclassic','ssh-p521-rainbowvccyclic','ssh-p521-rainbowvccycliccompressed','ssh-rsa3072-sphincsharaka128frobust','ssh-p256-sphincsharaka128frobust','ssh-rsa3072-sphincsharaka128fsimple','ssh-p256-sphincsharaka128fsimple','ssh-rsa3072-sphincsharaka128srobust','ssh-p256-sphincsharaka128srobust','ssh-rsa3072-sphincsharaka128ssimple','ssh-p256-sphincsharaka128ssimple','ssh-p384-sphincsharaka192frobust','ssh-p384-sphincsharaka192fsimple','ssh-p384-sphincsharaka192srobust','ssh-p384-sphincsharaka192ssimple','ssh-p521-sphincsharaka256frobust','ssh-p521-sphincsharaka256fsimple','ssh-p521-sphincsharaka256srobust','ssh-p521-sphincsharaka256ssimple','ssh-rsa3072-sphincssha256128frobust','ssh-p256-sphincssha256128frobust','ssh-rsa3072-sphincssha256128fsimple','ssh-p256-sphincssha256128fsimple','ssh-rsa3072-sphincssha256128srobust','ssh-p256-sphincssha256128srobust','ssh-rsa3072-sphincssha256128ssimple','ssh-p256-sphincssha256128ssimple','ssh-p384-sphincssha256192frobust','ssh-p384-sphincssha256192fsimple','ssh-p384-sphincssha256192srobust','ssh-p384-sphincssha256192ssimple','ssh-p521-sphincssha256256frobust','ssh-p521-sphincssha256256fsimple','ssh-p521-sphincssha256256srobust','ssh-p521-sphincssha256256ssimple','ssh-rsa3072-sphincsshake256128frobust','ssh-p256-sphincsshake256128frobust','ssh-rsa3072-sphincsshake256128fsimple','ssh-p256-sphincsshake256128fsimple','ssh-rsa3072-sphincsshake256128srobust','ssh-p256-sphincsshake256128srobust','ssh-rsa3072-sphincsshake256128ssimple','ssh-p256-sphincsshake256128ssimple','ssh-p384-sphincsshake256192frobust','ssh-p384-sphincsshake256192fsimple','ssh-p384-sphincsshake256192srobust','ssh-p384-sphincsshake256192ssimple','ssh-p521-sphincsshake256256frobust','ssh-p521-sphincsshake256256fsimple','ssh-p521-sphincsshake256256srobust','ssh-p521-sphincsshake256256ssimple',
 ##### OQS_TEMPLATE_FRAGMENT_LIST_SIGS_END
 ]
 
diff --git a/oqs-utils.h b/oqs-utils.h
index 82567008..4d6b7c3b 100644
--- a/oqs-utils.h
+++ b/oqs-utils.h
@@ -5,43 +5,117 @@
 #define IS_RSA_HYBRID_ALG_NAME(alg) ( \
 				strcmp(alg, "ssh-rsa3072-oqsdefault") == 0 || \
 				strcmp(alg, "ssh-rsa3072-dilithium2") == 0 || \
+				strcmp(alg, "ssh-rsa3072-dilithium3") == 0 || \
 				strcmp(alg, "ssh-rsa3072-falcon512") == 0 || \
-				strcmp(alg, "ssh-rsa3072-mqdss3148") == 0 || \
 				strcmp(alg, "ssh-rsa3072-picnicl1fs") == 0 || \
+				strcmp(alg, "ssh-rsa3072-picnicl1ur") == 0 || \
+				strcmp(alg, "ssh-rsa3072-picnicl1full") == 0 || \
 				strcmp(alg, "ssh-rsa3072-picnic3l1") == 0 || \
-				strcmp(alg, "ssh-rsa3072-qteslapi") == 0 || \
 				strcmp(alg, "ssh-rsa3072-rainbowiaclassic") == 0 || \
+				strcmp(alg, "ssh-rsa3072-rainbowiacyclic") == 0 || \
+				strcmp(alg, "ssh-rsa3072-rainbowiacycliccompressed") == 0 || \
 				strcmp(alg, "ssh-rsa3072-sphincsharaka128frobust") == 0 || \
+				strcmp(alg, "ssh-rsa3072-sphincsharaka128fsimple") == 0 || \
+				strcmp(alg, "ssh-rsa3072-sphincsharaka128srobust") == 0 || \
+				strcmp(alg, "ssh-rsa3072-sphincsharaka128ssimple") == 0 || \
 				strcmp(alg, "ssh-rsa3072-sphincssha256128frobust") == 0 || \
-				strcmp(alg, "ssh-rsa3072-sphincsshake256128frobust") == 0)
+				strcmp(alg, "ssh-rsa3072-sphincssha256128fsimple") == 0 || \
+				strcmp(alg, "ssh-rsa3072-sphincssha256128srobust") == 0 || \
+				strcmp(alg, "ssh-rsa3072-sphincssha256128ssimple") == 0 || \
+				strcmp(alg, "ssh-rsa3072-sphincsshake256128frobust") == 0 || \
+				strcmp(alg, "ssh-rsa3072-sphincsshake256128fsimple") == 0 || \
+				strcmp(alg, "ssh-rsa3072-sphincsshake256128srobust") == 0 || \
+				strcmp(alg, "ssh-rsa3072-sphincsshake256128ssimple") == 0)
 
 #define IS_RSA_HYBRID(alg) ( \
 				alg == KEY_RSA3072_OQSDEFAULT || \
 				alg == KEY_RSA3072_DILITHIUM_2 || \
+				alg == KEY_RSA3072_DILITHIUM_3 || \
 				alg == KEY_RSA3072_FALCON_512 || \
-				alg == KEY_RSA3072_MQDSS_31_48 || \
 				alg == KEY_RSA3072_PICNIC_L1FS || \
+				alg == KEY_RSA3072_PICNIC_L1UR || \
+				alg == KEY_RSA3072_PICNIC_L1FULL || \
 				alg == KEY_RSA3072_PICNIC3_L1 || \
-				alg == KEY_RSA3072_QTESLA_P_I || \
 				alg == KEY_RSA3072_RAINBOW_IA_CLASSIC || \
+				alg == KEY_RSA3072_RAINBOW_IA_CYCLIC || \
+				alg == KEY_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED || \
 				alg == KEY_RSA3072_SPHINCS_HARAKA_128F_ROBUST || \
+				alg == KEY_RSA3072_SPHINCS_HARAKA_128F_SIMPLE || \
+				alg == KEY_RSA3072_SPHINCS_HARAKA_128S_ROBUST || \
+				alg == KEY_RSA3072_SPHINCS_HARAKA_128S_SIMPLE || \
 				alg == KEY_RSA3072_SPHINCS_SHA256_128F_ROBUST || \
-				alg == KEY_RSA3072_SPHINCS_SHAKE256_128F_ROBUST)
+				alg == KEY_RSA3072_SPHINCS_SHA256_128F_SIMPLE || \
+				alg == KEY_RSA3072_SPHINCS_SHA256_128S_ROBUST || \
+				alg == KEY_RSA3072_SPHINCS_SHA256_128S_SIMPLE || \
+				alg == KEY_RSA3072_SPHINCS_SHAKE256_128F_ROBUST || \
+				alg == KEY_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE || \
+				alg == KEY_RSA3072_SPHINCS_SHAKE256_128S_ROBUST || \
+				alg == KEY_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE)
 
 #define IS_ECDSA_HYBRID(alg) ( \
 				alg == KEY_P256_OQSDEFAULT || \
 				alg == KEY_P256_DILITHIUM_2 || \
+				alg == KEY_P256_DILITHIUM_3 || \
 				alg == KEY_P256_FALCON_512 || \
-				alg == KEY_P256_MQDSS_31_48 || \
 				alg == KEY_P256_PICNIC_L1FS || \
+				alg == KEY_P256_PICNIC_L1UR || \
+				alg == KEY_P256_PICNIC_L1FULL || \
 				alg == KEY_P256_PICNIC3_L1 || \
-				alg == KEY_P256_QTESLA_P_I || \
 				alg == KEY_P256_RAINBOW_IA_CLASSIC || \
+				alg == KEY_P256_RAINBOW_IA_CYCLIC || \
+				alg == KEY_P256_RAINBOW_IA_CYCLIC_COMPRESSED || \
 				alg == KEY_P256_SPHINCS_HARAKA_128F_ROBUST || \
+				alg == KEY_P256_SPHINCS_HARAKA_128F_SIMPLE || \
+				alg == KEY_P256_SPHINCS_HARAKA_128S_ROBUST || \
+				alg == KEY_P256_SPHINCS_HARAKA_128S_SIMPLE || \
 				alg == KEY_P256_SPHINCS_SHA256_128F_ROBUST || \
+				alg == KEY_P256_SPHINCS_SHA256_128F_SIMPLE || \
+				alg == KEY_P256_SPHINCS_SHA256_128S_ROBUST || \
+				alg == KEY_P256_SPHINCS_SHA256_128S_SIMPLE || \
 				alg == KEY_P256_SPHINCS_SHAKE256_128F_ROBUST || \
+				alg == KEY_P256_SPHINCS_SHAKE256_128F_SIMPLE || \
+				alg == KEY_P256_SPHINCS_SHAKE256_128S_ROBUST || \
+				alg == KEY_P256_SPHINCS_SHAKE256_128S_SIMPLE || \
+				alg == KEY_P384_DILITHIUM_4 || \
+				alg == KEY_P384_PICNIC_L3FS || \
+				alg == KEY_P384_PICNIC_L3UR || \
+				alg == KEY_P384_PICNIC_L3FULL || \
+				alg == KEY_P384_PICNIC3_L3 || \
 				alg == KEY_P384_RAINBOW_IIIC_CLASSIC || \
-				alg == KEY_P521_RAINBOW_VC_CLASSIC)
+				alg == KEY_P384_RAINBOW_IIIC_CYCLIC || \
+				alg == KEY_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED || \
+				alg == KEY_P384_SPHINCS_HARAKA_192F_ROBUST || \
+				alg == KEY_P384_SPHINCS_HARAKA_192F_SIMPLE || \
+				alg == KEY_P384_SPHINCS_HARAKA_192S_ROBUST || \
+				alg == KEY_P384_SPHINCS_HARAKA_192S_SIMPLE || \
+				alg == KEY_P384_SPHINCS_SHA256_192F_ROBUST || \
+				alg == KEY_P384_SPHINCS_SHA256_192F_SIMPLE || \
+				alg == KEY_P384_SPHINCS_SHA256_192S_ROBUST || \
+				alg == KEY_P384_SPHINCS_SHA256_192S_SIMPLE || \
+				alg == KEY_P384_SPHINCS_SHAKE256_192F_ROBUST || \
+				alg == KEY_P384_SPHINCS_SHAKE256_192F_SIMPLE || \
+				alg == KEY_P384_SPHINCS_SHAKE256_192S_ROBUST || \
+				alg == KEY_P384_SPHINCS_SHAKE256_192S_SIMPLE || \
+				alg == KEY_P521_FALCON_1024 || \
+				alg == KEY_P521_PICNIC_L5FS || \
+				alg == KEY_P521_PICNIC_L5UR || \
+				alg == KEY_P521_PICNIC_L5FULL || \
+				alg == KEY_P521_PICNIC3_L5 || \
+				alg == KEY_P521_RAINBOW_VC_CLASSIC || \
+				alg == KEY_P521_RAINBOW_VC_CYCLIC || \
+				alg == KEY_P521_RAINBOW_VC_CYCLIC_COMPRESSED || \
+				alg == KEY_P521_SPHINCS_HARAKA_256F_ROBUST || \
+				alg == KEY_P521_SPHINCS_HARAKA_256F_SIMPLE || \
+				alg == KEY_P521_SPHINCS_HARAKA_256S_ROBUST || \
+				alg == KEY_P521_SPHINCS_HARAKA_256S_SIMPLE || \
+				alg == KEY_P521_SPHINCS_SHA256_256F_ROBUST || \
+				alg == KEY_P521_SPHINCS_SHA256_256F_SIMPLE || \
+				alg == KEY_P521_SPHINCS_SHA256_256S_ROBUST || \
+				alg == KEY_P521_SPHINCS_SHA256_256S_SIMPLE || \
+				alg == KEY_P521_SPHINCS_SHAKE256_256F_ROBUST || \
+				alg == KEY_P521_SPHINCS_SHAKE256_256F_SIMPLE || \
+				alg == KEY_P521_SPHINCS_SHAKE256_256S_ROBUST || \
+				alg == KEY_P521_SPHINCS_SHAKE256_256S_SIMPLE)
 ///// OQS_TEMPLATE_FRAGMENT_DEFINE_HYBRID_MACROS_END
 
 #define IS_HYBRID(alg) (IS_RSA_HYBRID(alg) || IS_ECDSA_HYBRID(alg))
@@ -50,17 +124,67 @@
 #define IS_OQS_KEY_TYPE(type) ( \
 				(type) == KEY_OQSDEFAULT || \
 				(type) == KEY_DILITHIUM_2 || \
+				(type) == KEY_DILITHIUM_3 || \
+				(type) == KEY_DILITHIUM_4 || \
 				(type) == KEY_FALCON_512 || \
-				(type) == KEY_MQDSS_31_48 || \
+				(type) == KEY_FALCON_1024 || \
 				(type) == KEY_PICNIC_L1FS || \
+				(type) == KEY_PICNIC_L1UR || \
+				(type) == KEY_PICNIC_L1FULL || \
+				(type) == KEY_PICNIC_L3FS || \
+				(type) == KEY_PICNIC_L3UR || \
+				(type) == KEY_PICNIC_L3FULL || \
+				(type) == KEY_PICNIC_L5FS || \
+				(type) == KEY_PICNIC_L5UR || \
+				(type) == KEY_PICNIC_L5FULL || \
 				(type) == KEY_PICNIC3_L1 || \
-				(type) == KEY_QTESLA_P_I || \
+				(type) == KEY_PICNIC3_L3 || \
+				(type) == KEY_PICNIC3_L5 || \
 				(type) == KEY_RAINBOW_IA_CLASSIC || \
+				(type) == KEY_RAINBOW_IA_CYCLIC || \
+				(type) == KEY_RAINBOW_IA_CYCLIC_COMPRESSED || \
 				(type) == KEY_RAINBOW_IIIC_CLASSIC || \
+				(type) == KEY_RAINBOW_IIIC_CYCLIC || \
+				(type) == KEY_RAINBOW_IIIC_CYCLIC_COMPRESSED || \
 				(type) == KEY_RAINBOW_VC_CLASSIC || \
+				(type) == KEY_RAINBOW_VC_CYCLIC || \
+				(type) == KEY_RAINBOW_VC_CYCLIC_COMPRESSED || \
 				(type) == KEY_SPHINCS_HARAKA_128F_ROBUST || \
+				(type) == KEY_SPHINCS_HARAKA_128F_SIMPLE || \
+				(type) == KEY_SPHINCS_HARAKA_128S_ROBUST || \
+				(type) == KEY_SPHINCS_HARAKA_128S_SIMPLE || \
+				(type) == KEY_SPHINCS_HARAKA_192F_ROBUST || \
+				(type) == KEY_SPHINCS_HARAKA_192F_SIMPLE || \
+				(type) == KEY_SPHINCS_HARAKA_192S_ROBUST || \
+				(type) == KEY_SPHINCS_HARAKA_192S_SIMPLE || \
+				(type) == KEY_SPHINCS_HARAKA_256F_ROBUST || \
+				(type) == KEY_SPHINCS_HARAKA_256F_SIMPLE || \
+				(type) == KEY_SPHINCS_HARAKA_256S_ROBUST || \
+				(type) == KEY_SPHINCS_HARAKA_256S_SIMPLE || \
 				(type) == KEY_SPHINCS_SHA256_128F_ROBUST || \
+				(type) == KEY_SPHINCS_SHA256_128F_SIMPLE || \
+				(type) == KEY_SPHINCS_SHA256_128S_ROBUST || \
+				(type) == KEY_SPHINCS_SHA256_128S_SIMPLE || \
+				(type) == KEY_SPHINCS_SHA256_192F_ROBUST || \
+				(type) == KEY_SPHINCS_SHA256_192F_SIMPLE || \
+				(type) == KEY_SPHINCS_SHA256_192S_ROBUST || \
+				(type) == KEY_SPHINCS_SHA256_192S_SIMPLE || \
+				(type) == KEY_SPHINCS_SHA256_256F_ROBUST || \
+				(type) == KEY_SPHINCS_SHA256_256F_SIMPLE || \
+				(type) == KEY_SPHINCS_SHA256_256S_ROBUST || \
+				(type) == KEY_SPHINCS_SHA256_256S_SIMPLE || \
 				(type) == KEY_SPHINCS_SHAKE256_128F_ROBUST || \
+				(type) == KEY_SPHINCS_SHAKE256_128F_SIMPLE || \
+				(type) == KEY_SPHINCS_SHAKE256_128S_ROBUST || \
+				(type) == KEY_SPHINCS_SHAKE256_128S_SIMPLE || \
+				(type) == KEY_SPHINCS_SHAKE256_192F_ROBUST || \
+				(type) == KEY_SPHINCS_SHAKE256_192F_SIMPLE || \
+				(type) == KEY_SPHINCS_SHAKE256_192S_ROBUST || \
+				(type) == KEY_SPHINCS_SHAKE256_192S_SIMPLE || \
+				(type) == KEY_SPHINCS_SHAKE256_256F_ROBUST || \
+				(type) == KEY_SPHINCS_SHAKE256_256F_SIMPLE || \
+				(type) == KEY_SPHINCS_SHAKE256_256S_ROBUST || \
+				(type) == KEY_SPHINCS_SHAKE256_256S_SIMPLE || \
 				IS_HYBRID(type))
 ///// OQS_TEMPLATE_FRAGMENT_ASSIGN_PQ_KT_END
 
@@ -68,47 +192,159 @@
 #define CASE_KEY_OQS \
 	case KEY_OQSDEFAULT: \
 	case KEY_DILITHIUM_2: \
+	case KEY_DILITHIUM_3: \
+	case KEY_DILITHIUM_4: \
 	case KEY_FALCON_512: \
-	case KEY_MQDSS_31_48: \
+	case KEY_FALCON_1024: \
 	case KEY_PICNIC_L1FS: \
+	case KEY_PICNIC_L1UR: \
+	case KEY_PICNIC_L1FULL: \
+	case KEY_PICNIC_L3FS: \
+	case KEY_PICNIC_L3UR: \
+	case KEY_PICNIC_L3FULL: \
+	case KEY_PICNIC_L5FS: \
+	case KEY_PICNIC_L5UR: \
+	case KEY_PICNIC_L5FULL: \
 	case KEY_PICNIC3_L1: \
-	case KEY_QTESLA_P_I: \
+	case KEY_PICNIC3_L3: \
+	case KEY_PICNIC3_L5: \
 	case KEY_RAINBOW_IA_CLASSIC: \
+	case KEY_RAINBOW_IA_CYCLIC: \
+	case KEY_RAINBOW_IA_CYCLIC_COMPRESSED: \
 	case KEY_RAINBOW_IIIC_CLASSIC: \
+	case KEY_RAINBOW_IIIC_CYCLIC: \
+	case KEY_RAINBOW_IIIC_CYCLIC_COMPRESSED: \
 	case KEY_RAINBOW_VC_CLASSIC: \
+	case KEY_RAINBOW_VC_CYCLIC: \
+	case KEY_RAINBOW_VC_CYCLIC_COMPRESSED: \
 	case KEY_SPHINCS_HARAKA_128F_ROBUST: \
+	case KEY_SPHINCS_HARAKA_128F_SIMPLE: \
+	case KEY_SPHINCS_HARAKA_128S_ROBUST: \
+	case KEY_SPHINCS_HARAKA_128S_SIMPLE: \
+	case KEY_SPHINCS_HARAKA_192F_ROBUST: \
+	case KEY_SPHINCS_HARAKA_192F_SIMPLE: \
+	case KEY_SPHINCS_HARAKA_192S_ROBUST: \
+	case KEY_SPHINCS_HARAKA_192S_SIMPLE: \
+	case KEY_SPHINCS_HARAKA_256F_ROBUST: \
+	case KEY_SPHINCS_HARAKA_256F_SIMPLE: \
+	case KEY_SPHINCS_HARAKA_256S_ROBUST: \
+	case KEY_SPHINCS_HARAKA_256S_SIMPLE: \
 	case KEY_SPHINCS_SHA256_128F_ROBUST: \
-	case KEY_SPHINCS_SHAKE256_128F_ROBUST
+	case KEY_SPHINCS_SHA256_128F_SIMPLE: \
+	case KEY_SPHINCS_SHA256_128S_ROBUST: \
+	case KEY_SPHINCS_SHA256_128S_SIMPLE: \
+	case KEY_SPHINCS_SHA256_192F_ROBUST: \
+	case KEY_SPHINCS_SHA256_192F_SIMPLE: \
+	case KEY_SPHINCS_SHA256_192S_ROBUST: \
+	case KEY_SPHINCS_SHA256_192S_SIMPLE: \
+	case KEY_SPHINCS_SHA256_256F_ROBUST: \
+	case KEY_SPHINCS_SHA256_256F_SIMPLE: \
+	case KEY_SPHINCS_SHA256_256S_ROBUST: \
+	case KEY_SPHINCS_SHA256_256S_SIMPLE: \
+	case KEY_SPHINCS_SHAKE256_128F_ROBUST: \
+	case KEY_SPHINCS_SHAKE256_128F_SIMPLE: \
+	case KEY_SPHINCS_SHAKE256_128S_ROBUST: \
+	case KEY_SPHINCS_SHAKE256_128S_SIMPLE: \
+	case KEY_SPHINCS_SHAKE256_192F_ROBUST: \
+	case KEY_SPHINCS_SHAKE256_192F_SIMPLE: \
+	case KEY_SPHINCS_SHAKE256_192S_ROBUST: \
+	case KEY_SPHINCS_SHAKE256_192S_SIMPLE: \
+	case KEY_SPHINCS_SHAKE256_256F_ROBUST: \
+	case KEY_SPHINCS_SHAKE256_256F_SIMPLE: \
+	case KEY_SPHINCS_SHAKE256_256S_ROBUST: \
+	case KEY_SPHINCS_SHAKE256_256S_SIMPLE
 ///// OQS_TEMPLATE_FRAGMENT_DEFINE_PQ_SWITCH_CASES_END
 
 ///// OQS_TEMPLATE_FRAGMENT_DEFINE_HYBRID_SWITCH_CASES_START
 #define CASE_KEY_RSA_HYBRID \
 	case KEY_RSA3072_OQSDEFAULT: \
 	case KEY_RSA3072_DILITHIUM_2: \
+	case KEY_RSA3072_DILITHIUM_3: \
 	case KEY_RSA3072_FALCON_512: \
-	case KEY_RSA3072_MQDSS_31_48: \
 	case KEY_RSA3072_PICNIC_L1FS: \
+	case KEY_RSA3072_PICNIC_L1UR: \
+	case KEY_RSA3072_PICNIC_L1FULL: \
 	case KEY_RSA3072_PICNIC3_L1: \
-	case KEY_RSA3072_QTESLA_P_I: \
 	case KEY_RSA3072_RAINBOW_IA_CLASSIC: \
+	case KEY_RSA3072_RAINBOW_IA_CYCLIC: \
+	case KEY_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED: \
 	case KEY_RSA3072_SPHINCS_HARAKA_128F_ROBUST: \
+	case KEY_RSA3072_SPHINCS_HARAKA_128F_SIMPLE: \
+	case KEY_RSA3072_SPHINCS_HARAKA_128S_ROBUST: \
+	case KEY_RSA3072_SPHINCS_HARAKA_128S_SIMPLE: \
 	case KEY_RSA3072_SPHINCS_SHA256_128F_ROBUST: \
-	case KEY_RSA3072_SPHINCS_SHAKE256_128F_ROBUST
+	case KEY_RSA3072_SPHINCS_SHA256_128F_SIMPLE: \
+	case KEY_RSA3072_SPHINCS_SHA256_128S_ROBUST: \
+	case KEY_RSA3072_SPHINCS_SHA256_128S_SIMPLE: \
+	case KEY_RSA3072_SPHINCS_SHAKE256_128F_ROBUST: \
+	case KEY_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE: \
+	case KEY_RSA3072_SPHINCS_SHAKE256_128S_ROBUST: \
+	case KEY_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE
 
 #define CASE_KEY_ECDSA_HYBRID \
 	case KEY_P256_OQSDEFAULT: \
 	case KEY_P256_DILITHIUM_2: \
+	case KEY_P256_DILITHIUM_3: \
 	case KEY_P256_FALCON_512: \
-	case KEY_P256_MQDSS_31_48: \
 	case KEY_P256_PICNIC_L1FS: \
+	case KEY_P256_PICNIC_L1UR: \
+	case KEY_P256_PICNIC_L1FULL: \
 	case KEY_P256_PICNIC3_L1: \
-	case KEY_P256_QTESLA_P_I: \
 	case KEY_P256_RAINBOW_IA_CLASSIC: \
+	case KEY_P256_RAINBOW_IA_CYCLIC: \
+	case KEY_P256_RAINBOW_IA_CYCLIC_COMPRESSED: \
 	case KEY_P256_SPHINCS_HARAKA_128F_ROBUST: \
+	case KEY_P256_SPHINCS_HARAKA_128F_SIMPLE: \
+	case KEY_P256_SPHINCS_HARAKA_128S_ROBUST: \
+	case KEY_P256_SPHINCS_HARAKA_128S_SIMPLE: \
 	case KEY_P256_SPHINCS_SHA256_128F_ROBUST: \
+	case KEY_P256_SPHINCS_SHA256_128F_SIMPLE: \
+	case KEY_P256_SPHINCS_SHA256_128S_ROBUST: \
+	case KEY_P256_SPHINCS_SHA256_128S_SIMPLE: \
 	case KEY_P256_SPHINCS_SHAKE256_128F_ROBUST: \
+	case KEY_P256_SPHINCS_SHAKE256_128F_SIMPLE: \
+	case KEY_P256_SPHINCS_SHAKE256_128S_ROBUST: \
+	case KEY_P256_SPHINCS_SHAKE256_128S_SIMPLE: \
+	case KEY_P384_DILITHIUM_4: \
+	case KEY_P384_PICNIC_L3FS: \
+	case KEY_P384_PICNIC_L3UR: \
+	case KEY_P384_PICNIC_L3FULL: \
+	case KEY_P384_PICNIC3_L3: \
 	case KEY_P384_RAINBOW_IIIC_CLASSIC: \
-	case KEY_P521_RAINBOW_VC_CLASSIC
+	case KEY_P384_RAINBOW_IIIC_CYCLIC: \
+	case KEY_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED: \
+	case KEY_P384_SPHINCS_HARAKA_192F_ROBUST: \
+	case KEY_P384_SPHINCS_HARAKA_192F_SIMPLE: \
+	case KEY_P384_SPHINCS_HARAKA_192S_ROBUST: \
+	case KEY_P384_SPHINCS_HARAKA_192S_SIMPLE: \
+	case KEY_P384_SPHINCS_SHA256_192F_ROBUST: \
+	case KEY_P384_SPHINCS_SHA256_192F_SIMPLE: \
+	case KEY_P384_SPHINCS_SHA256_192S_ROBUST: \
+	case KEY_P384_SPHINCS_SHA256_192S_SIMPLE: \
+	case KEY_P384_SPHINCS_SHAKE256_192F_ROBUST: \
+	case KEY_P384_SPHINCS_SHAKE256_192F_SIMPLE: \
+	case KEY_P384_SPHINCS_SHAKE256_192S_ROBUST: \
+	case KEY_P384_SPHINCS_SHAKE256_192S_SIMPLE: \
+	case KEY_P521_FALCON_1024: \
+	case KEY_P521_PICNIC_L5FS: \
+	case KEY_P521_PICNIC_L5UR: \
+	case KEY_P521_PICNIC_L5FULL: \
+	case KEY_P521_PICNIC3_L5: \
+	case KEY_P521_RAINBOW_VC_CLASSIC: \
+	case KEY_P521_RAINBOW_VC_CYCLIC: \
+	case KEY_P521_RAINBOW_VC_CYCLIC_COMPRESSED: \
+	case KEY_P521_SPHINCS_HARAKA_256F_ROBUST: \
+	case KEY_P521_SPHINCS_HARAKA_256F_SIMPLE: \
+	case KEY_P521_SPHINCS_HARAKA_256S_ROBUST: \
+	case KEY_P521_SPHINCS_HARAKA_256S_SIMPLE: \
+	case KEY_P521_SPHINCS_SHA256_256F_ROBUST: \
+	case KEY_P521_SPHINCS_SHA256_256F_SIMPLE: \
+	case KEY_P521_SPHINCS_SHA256_256S_ROBUST: \
+	case KEY_P521_SPHINCS_SHA256_256S_SIMPLE: \
+	case KEY_P521_SPHINCS_SHAKE256_256F_ROBUST: \
+	case KEY_P521_SPHINCS_SHAKE256_256F_SIMPLE: \
+	case KEY_P521_SPHINCS_SHAKE256_256S_ROBUST: \
+	case KEY_P521_SPHINCS_SHAKE256_256S_SIMPLE
 ///// OQS_TEMPLATE_FRAGMENT_DEFINE_HYBRID_SWITCH_CASES_END
 
 #define CASE_KEY_HYBRID \
diff --git a/pathnames.h b/pathnames.h
index 9e80204b..11803ce3 100644
--- a/pathnames.h
+++ b/pathnames.h
@@ -44,41 +44,153 @@
 ///// OQS_TEMPLATE_FRAGMENT_DEFINE_OQS_KEY_FILES_START
 #define _PATH_HOST_OQSDEFAULT_KEY_FILE SSHDIR "/ssh_host_oqsdefault_key"
 #define _PATH_HOST_DILITHIUM_2_KEY_FILE SSHDIR "/ssh_host_dilithium2_key"
+#define _PATH_HOST_DILITHIUM_3_KEY_FILE SSHDIR "/ssh_host_dilithium3_key"
+#define _PATH_HOST_DILITHIUM_4_KEY_FILE SSHDIR "/ssh_host_dilithium4_key"
 #define _PATH_HOST_FALCON_512_KEY_FILE SSHDIR "/ssh_host_falcon512_key"
-#define _PATH_HOST_MQDSS_31_48_KEY_FILE SSHDIR "/ssh_host_mqdss3148_key"
+#define _PATH_HOST_FALCON_1024_KEY_FILE SSHDIR "/ssh_host_falcon1024_key"
 #define _PATH_HOST_PICNIC_L1FS_KEY_FILE SSHDIR "/ssh_host_picnicl1fs_key"
+#define _PATH_HOST_PICNIC_L1UR_KEY_FILE SSHDIR "/ssh_host_picnicl1ur_key"
+#define _PATH_HOST_PICNIC_L1FULL_KEY_FILE SSHDIR "/ssh_host_picnicl1full_key"
+#define _PATH_HOST_PICNIC_L3FS_KEY_FILE SSHDIR "/ssh_host_picnicl3fs_key"
+#define _PATH_HOST_PICNIC_L3UR_KEY_FILE SSHDIR "/ssh_host_picnicl3ur_key"
+#define _PATH_HOST_PICNIC_L3FULL_KEY_FILE SSHDIR "/ssh_host_picnicl3full_key"
+#define _PATH_HOST_PICNIC_L5FS_KEY_FILE SSHDIR "/ssh_host_picnicl5fs_key"
+#define _PATH_HOST_PICNIC_L5UR_KEY_FILE SSHDIR "/ssh_host_picnicl5ur_key"
+#define _PATH_HOST_PICNIC_L5FULL_KEY_FILE SSHDIR "/ssh_host_picnicl5full_key"
 #define _PATH_HOST_PICNIC3_L1_KEY_FILE SSHDIR "/ssh_host_picnic3l1_key"
-#define _PATH_HOST_QTESLA_P_I_KEY_FILE SSHDIR "/ssh_host_qteslapi_key"
+#define _PATH_HOST_PICNIC3_L3_KEY_FILE SSHDIR "/ssh_host_picnic3l3_key"
+#define _PATH_HOST_PICNIC3_L5_KEY_FILE SSHDIR "/ssh_host_picnic3l5_key"
 #define _PATH_HOST_RAINBOW_IA_CLASSIC_KEY_FILE SSHDIR "/ssh_host_rainbowiaclassic_key"
+#define _PATH_HOST_RAINBOW_IA_CYCLIC_KEY_FILE SSHDIR "/ssh_host_rainbowiacyclic_key"
+#define _PATH_HOST_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE SSHDIR "/ssh_host_rainbowiacycliccompressed_key"
 #define _PATH_HOST_RAINBOW_IIIC_CLASSIC_KEY_FILE SSHDIR "/ssh_host_rainbowiiicclassic_key"
+#define _PATH_HOST_RAINBOW_IIIC_CYCLIC_KEY_FILE SSHDIR "/ssh_host_rainbowiiiccyclic_key"
+#define _PATH_HOST_RAINBOW_IIIC_CYCLIC_COMPRESSED_KEY_FILE SSHDIR "/ssh_host_rainbowiiiccycliccompressed_key"
 #define _PATH_HOST_RAINBOW_VC_CLASSIC_KEY_FILE SSHDIR "/ssh_host_rainbowvcclassic_key"
+#define _PATH_HOST_RAINBOW_VC_CYCLIC_KEY_FILE SSHDIR "/ssh_host_rainbowvccyclic_key"
+#define _PATH_HOST_RAINBOW_VC_CYCLIC_COMPRESSED_KEY_FILE SSHDIR "/ssh_host_rainbowvccycliccompressed_key"
 #define _PATH_HOST_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsharaka128frobust_key"
+#define _PATH_HOST_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsharaka128fsimple_key"
+#define _PATH_HOST_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsharaka128srobust_key"
+#define _PATH_HOST_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsharaka128ssimple_key"
+#define _PATH_HOST_SPHINCS_HARAKA_192F_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsharaka192frobust_key"
+#define _PATH_HOST_SPHINCS_HARAKA_192F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsharaka192fsimple_key"
+#define _PATH_HOST_SPHINCS_HARAKA_192S_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsharaka192srobust_key"
+#define _PATH_HOST_SPHINCS_HARAKA_192S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsharaka192ssimple_key"
+#define _PATH_HOST_SPHINCS_HARAKA_256F_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsharaka256frobust_key"
+#define _PATH_HOST_SPHINCS_HARAKA_256F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsharaka256fsimple_key"
+#define _PATH_HOST_SPHINCS_HARAKA_256S_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsharaka256srobust_key"
+#define _PATH_HOST_SPHINCS_HARAKA_256S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsharaka256ssimple_key"
 #define _PATH_HOST_SPHINCS_SHA256_128F_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincssha256128frobust_key"
+#define _PATH_HOST_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincssha256128fsimple_key"
+#define _PATH_HOST_SPHINCS_SHA256_128S_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincssha256128srobust_key"
+#define _PATH_HOST_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincssha256128ssimple_key"
+#define _PATH_HOST_SPHINCS_SHA256_192F_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincssha256192frobust_key"
+#define _PATH_HOST_SPHINCS_SHA256_192F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincssha256192fsimple_key"
+#define _PATH_HOST_SPHINCS_SHA256_192S_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincssha256192srobust_key"
+#define _PATH_HOST_SPHINCS_SHA256_192S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincssha256192ssimple_key"
+#define _PATH_HOST_SPHINCS_SHA256_256F_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincssha256256frobust_key"
+#define _PATH_HOST_SPHINCS_SHA256_256F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincssha256256fsimple_key"
+#define _PATH_HOST_SPHINCS_SHA256_256S_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincssha256256srobust_key"
+#define _PATH_HOST_SPHINCS_SHA256_256S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincssha256256ssimple_key"
 #define _PATH_HOST_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsshake256128frobust_key"
+#define _PATH_HOST_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsshake256128fsimple_key"
+#define _PATH_HOST_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsshake256128srobust_key"
+#define _PATH_HOST_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsshake256128ssimple_key"
+#define _PATH_HOST_SPHINCS_SHAKE256_192F_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsshake256192frobust_key"
+#define _PATH_HOST_SPHINCS_SHAKE256_192F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsshake256192fsimple_key"
+#define _PATH_HOST_SPHINCS_SHAKE256_192S_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsshake256192srobust_key"
+#define _PATH_HOST_SPHINCS_SHAKE256_192S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsshake256192ssimple_key"
+#define _PATH_HOST_SPHINCS_SHAKE256_256F_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsshake256256frobust_key"
+#define _PATH_HOST_SPHINCS_SHAKE256_256F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsshake256256fsimple_key"
+#define _PATH_HOST_SPHINCS_SHAKE256_256S_ROBUST_KEY_FILE SSHDIR "/ssh_host_sphincsshake256256srobust_key"
+#define _PATH_HOST_SPHINCS_SHAKE256_256S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_sphincsshake256256ssimple_key"
 #define _PATH_HOST_RSA3072_OQSDEFAULT_KEY_FILE SSHDIR "/ssh_host_rsa3072_oqsdefault_key"
 #define _PATH_HOST_P256_OQSDEFAULT_KEY_FILE SSHDIR "/ssh_host_p256_oqsdefault_key"
 #define _PATH_HOST_RSA3072_DILITHIUM_2_KEY_FILE SSHDIR "/ssh_host_rsa3072_dilithium2_key"
 #define _PATH_HOST_P256_DILITHIUM_2_KEY_FILE SSHDIR "/ssh_host_p256_dilithium2_key"
+#define _PATH_HOST_RSA3072_DILITHIUM_3_KEY_FILE SSHDIR "/ssh_host_rsa3072_dilithium3_key"
+#define _PATH_HOST_P256_DILITHIUM_3_KEY_FILE SSHDIR "/ssh_host_p256_dilithium3_key"
+#define _PATH_HOST_P384_DILITHIUM_4_KEY_FILE SSHDIR "/ssh_host_p384_dilithium4_key"
 #define _PATH_HOST_RSA3072_FALCON_512_KEY_FILE SSHDIR "/ssh_host_rsa3072_falcon512_key"
 #define _PATH_HOST_P256_FALCON_512_KEY_FILE SSHDIR "/ssh_host_p256_falcon512_key"
-#define _PATH_HOST_RSA3072_MQDSS_31_48_KEY_FILE SSHDIR "/ssh_host_rsa3072_mqdss3148_key"
-#define _PATH_HOST_P256_MQDSS_31_48_KEY_FILE SSHDIR "/ssh_host_p256_mqdss3148_key"
+#define _PATH_HOST_P521_FALCON_1024_KEY_FILE SSHDIR "/ssh_host_p521_falcon1024_key"
 #define _PATH_HOST_RSA3072_PICNIC_L1FS_KEY_FILE SSHDIR "/ssh_host_rsa3072_picnicl1fs_key"
 #define _PATH_HOST_P256_PICNIC_L1FS_KEY_FILE SSHDIR "/ssh_host_p256_picnicl1fs_key"
+#define _PATH_HOST_RSA3072_PICNIC_L1UR_KEY_FILE SSHDIR "/ssh_host_rsa3072_picnicl1ur_key"
+#define _PATH_HOST_P256_PICNIC_L1UR_KEY_FILE SSHDIR "/ssh_host_p256_picnicl1ur_key"
+#define _PATH_HOST_RSA3072_PICNIC_L1FULL_KEY_FILE SSHDIR "/ssh_host_rsa3072_picnicl1full_key"
+#define _PATH_HOST_P256_PICNIC_L1FULL_KEY_FILE SSHDIR "/ssh_host_p256_picnicl1full_key"
+#define _PATH_HOST_P384_PICNIC_L3FS_KEY_FILE SSHDIR "/ssh_host_p384_picnicl3fs_key"
+#define _PATH_HOST_P384_PICNIC_L3UR_KEY_FILE SSHDIR "/ssh_host_p384_picnicl3ur_key"
+#define _PATH_HOST_P384_PICNIC_L3FULL_KEY_FILE SSHDIR "/ssh_host_p384_picnicl3full_key"
+#define _PATH_HOST_P521_PICNIC_L5FS_KEY_FILE SSHDIR "/ssh_host_p521_picnicl5fs_key"
+#define _PATH_HOST_P521_PICNIC_L5UR_KEY_FILE SSHDIR "/ssh_host_p521_picnicl5ur_key"
+#define _PATH_HOST_P521_PICNIC_L5FULL_KEY_FILE SSHDIR "/ssh_host_p521_picnicl5full_key"
 #define _PATH_HOST_RSA3072_PICNIC3_L1_KEY_FILE SSHDIR "/ssh_host_rsa3072_picnic3l1_key"
 #define _PATH_HOST_P256_PICNIC3_L1_KEY_FILE SSHDIR "/ssh_host_p256_picnic3l1_key"
-#define _PATH_HOST_RSA3072_QTESLA_P_I_KEY_FILE SSHDIR "/ssh_host_rsa3072_qteslapi_key"
-#define _PATH_HOST_P256_QTESLA_P_I_KEY_FILE SSHDIR "/ssh_host_p256_qteslapi_key"
+#define _PATH_HOST_P384_PICNIC3_L3_KEY_FILE SSHDIR "/ssh_host_p384_picnic3l3_key"
+#define _PATH_HOST_P521_PICNIC3_L5_KEY_FILE SSHDIR "/ssh_host_p521_picnic3l5_key"
 #define _PATH_HOST_RSA3072_RAINBOW_IA_CLASSIC_KEY_FILE SSHDIR "/ssh_host_rsa3072_rainbowiaclassic_key"
 #define _PATH_HOST_P256_RAINBOW_IA_CLASSIC_KEY_FILE SSHDIR "/ssh_host_p256_rainbowiaclassic_key"
+#define _PATH_HOST_RSA3072_RAINBOW_IA_CYCLIC_KEY_FILE SSHDIR "/ssh_host_rsa3072_rainbowiacyclic_key"
+#define _PATH_HOST_P256_RAINBOW_IA_CYCLIC_KEY_FILE SSHDIR "/ssh_host_p256_rainbowiacyclic_key"
+#define _PATH_HOST_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE SSHDIR "/ssh_host_rsa3072_rainbowiacycliccompressed_key"
+#define _PATH_HOST_P256_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE SSHDIR "/ssh_host_p256_rainbowiacycliccompressed_key"
 #define _PATH_HOST_P384_RAINBOW_IIIC_CLASSIC_KEY_FILE SSHDIR "/ssh_host_p384_rainbowiiicclassic_key"
+#define _PATH_HOST_P384_RAINBOW_IIIC_CYCLIC_KEY_FILE SSHDIR "/ssh_host_p384_rainbowiiiccyclic_key"
+#define _PATH_HOST_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED_KEY_FILE SSHDIR "/ssh_host_p384_rainbowiiiccycliccompressed_key"
 #define _PATH_HOST_P521_RAINBOW_VC_CLASSIC_KEY_FILE SSHDIR "/ssh_host_p521_rainbowvcclassic_key"
+#define _PATH_HOST_P521_RAINBOW_VC_CYCLIC_KEY_FILE SSHDIR "/ssh_host_p521_rainbowvccyclic_key"
+#define _PATH_HOST_P521_RAINBOW_VC_CYCLIC_COMPRESSED_KEY_FILE SSHDIR "/ssh_host_p521_rainbowvccycliccompressed_key"
 #define _PATH_HOST_RSA3072_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincsharaka128frobust_key"
 #define _PATH_HOST_P256_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE SSHDIR "/ssh_host_p256_sphincsharaka128frobust_key"
+#define _PATH_HOST_RSA3072_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincsharaka128fsimple_key"
+#define _PATH_HOST_P256_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p256_sphincsharaka128fsimple_key"
+#define _PATH_HOST_RSA3072_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincsharaka128srobust_key"
+#define _PATH_HOST_P256_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE SSHDIR "/ssh_host_p256_sphincsharaka128srobust_key"
+#define _PATH_HOST_RSA3072_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincsharaka128ssimple_key"
+#define _PATH_HOST_P256_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p256_sphincsharaka128ssimple_key"
+#define _PATH_HOST_P384_SPHINCS_HARAKA_192F_ROBUST_KEY_FILE SSHDIR "/ssh_host_p384_sphincsharaka192frobust_key"
+#define _PATH_HOST_P384_SPHINCS_HARAKA_192F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p384_sphincsharaka192fsimple_key"
+#define _PATH_HOST_P384_SPHINCS_HARAKA_192S_ROBUST_KEY_FILE SSHDIR "/ssh_host_p384_sphincsharaka192srobust_key"
+#define _PATH_HOST_P384_SPHINCS_HARAKA_192S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p384_sphincsharaka192ssimple_key"
+#define _PATH_HOST_P521_SPHINCS_HARAKA_256F_ROBUST_KEY_FILE SSHDIR "/ssh_host_p521_sphincsharaka256frobust_key"
+#define _PATH_HOST_P521_SPHINCS_HARAKA_256F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p521_sphincsharaka256fsimple_key"
+#define _PATH_HOST_P521_SPHINCS_HARAKA_256S_ROBUST_KEY_FILE SSHDIR "/ssh_host_p521_sphincsharaka256srobust_key"
+#define _PATH_HOST_P521_SPHINCS_HARAKA_256S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p521_sphincsharaka256ssimple_key"
 #define _PATH_HOST_RSA3072_SPHINCS_SHA256_128F_ROBUST_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincssha256128frobust_key"
 #define _PATH_HOST_P256_SPHINCS_SHA256_128F_ROBUST_KEY_FILE SSHDIR "/ssh_host_p256_sphincssha256128frobust_key"
+#define _PATH_HOST_RSA3072_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincssha256128fsimple_key"
+#define _PATH_HOST_P256_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p256_sphincssha256128fsimple_key"
+#define _PATH_HOST_RSA3072_SPHINCS_SHA256_128S_ROBUST_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincssha256128srobust_key"
+#define _PATH_HOST_P256_SPHINCS_SHA256_128S_ROBUST_KEY_FILE SSHDIR "/ssh_host_p256_sphincssha256128srobust_key"
+#define _PATH_HOST_RSA3072_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincssha256128ssimple_key"
+#define _PATH_HOST_P256_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p256_sphincssha256128ssimple_key"
+#define _PATH_HOST_P384_SPHINCS_SHA256_192F_ROBUST_KEY_FILE SSHDIR "/ssh_host_p384_sphincssha256192frobust_key"
+#define _PATH_HOST_P384_SPHINCS_SHA256_192F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p384_sphincssha256192fsimple_key"
+#define _PATH_HOST_P384_SPHINCS_SHA256_192S_ROBUST_KEY_FILE SSHDIR "/ssh_host_p384_sphincssha256192srobust_key"
+#define _PATH_HOST_P384_SPHINCS_SHA256_192S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p384_sphincssha256192ssimple_key"
+#define _PATH_HOST_P521_SPHINCS_SHA256_256F_ROBUST_KEY_FILE SSHDIR "/ssh_host_p521_sphincssha256256frobust_key"
+#define _PATH_HOST_P521_SPHINCS_SHA256_256F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p521_sphincssha256256fsimple_key"
+#define _PATH_HOST_P521_SPHINCS_SHA256_256S_ROBUST_KEY_FILE SSHDIR "/ssh_host_p521_sphincssha256256srobust_key"
+#define _PATH_HOST_P521_SPHINCS_SHA256_256S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p521_sphincssha256256ssimple_key"
 #define _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincsshake256128frobust_key"
 #define _PATH_HOST_P256_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE SSHDIR "/ssh_host_p256_sphincsshake256128frobust_key"
+#define _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincsshake256128fsimple_key"
+#define _PATH_HOST_P256_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p256_sphincsshake256128fsimple_key"
+#define _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincsshake256128srobust_key"
+#define _PATH_HOST_P256_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE SSHDIR "/ssh_host_p256_sphincsshake256128srobust_key"
+#define _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_rsa3072_sphincsshake256128ssimple_key"
+#define _PATH_HOST_P256_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p256_sphincsshake256128ssimple_key"
+#define _PATH_HOST_P384_SPHINCS_SHAKE256_192F_ROBUST_KEY_FILE SSHDIR "/ssh_host_p384_sphincsshake256192frobust_key"
+#define _PATH_HOST_P384_SPHINCS_SHAKE256_192F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p384_sphincsshake256192fsimple_key"
+#define _PATH_HOST_P384_SPHINCS_SHAKE256_192S_ROBUST_KEY_FILE SSHDIR "/ssh_host_p384_sphincsshake256192srobust_key"
+#define _PATH_HOST_P384_SPHINCS_SHAKE256_192S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p384_sphincsshake256192ssimple_key"
+#define _PATH_HOST_P521_SPHINCS_SHAKE256_256F_ROBUST_KEY_FILE SSHDIR "/ssh_host_p521_sphincsshake256256frobust_key"
+#define _PATH_HOST_P521_SPHINCS_SHAKE256_256F_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p521_sphincsshake256256fsimple_key"
+#define _PATH_HOST_P521_SPHINCS_SHAKE256_256S_ROBUST_KEY_FILE SSHDIR "/ssh_host_p521_sphincsshake256256srobust_key"
+#define _PATH_HOST_P521_SPHINCS_SHAKE256_256S_SIMPLE_KEY_FILE SSHDIR "/ssh_host_p521_sphincsshake256256ssimple_key"
 ///// OQS_TEMPLATE_FRAGMENT_DEFINE_OQS_KEY_FILES_END
 #define _PATH_DH_MODULI			SSHDIR "/moduli"
 
@@ -119,41 +231,153 @@
 ///// OQS_TEMPLATE_FRAGMENT_DEFINE_OQS_ID_FILES_START
 #define _PATH_SSH_CLIENT_ID_OQSDEFAULT _PATH_SSH_USER_DIR "/id_oqsdefault"
 #define _PATH_SSH_CLIENT_ID_DILITHIUM_2 _PATH_SSH_USER_DIR "/id_dilithium2"
+#define _PATH_SSH_CLIENT_ID_DILITHIUM_3 _PATH_SSH_USER_DIR "/id_dilithium3"
+#define _PATH_SSH_CLIENT_ID_DILITHIUM_4 _PATH_SSH_USER_DIR "/id_dilithium4"
 #define _PATH_SSH_CLIENT_ID_FALCON_512 _PATH_SSH_USER_DIR "/id_falcon512"
-#define _PATH_SSH_CLIENT_ID_MQDSS_31_48 _PATH_SSH_USER_DIR "/id_mqdss3148"
+#define _PATH_SSH_CLIENT_ID_FALCON_1024 _PATH_SSH_USER_DIR "/id_falcon1024"
 #define _PATH_SSH_CLIENT_ID_PICNIC_L1FS _PATH_SSH_USER_DIR "/id_picnicl1fs"
+#define _PATH_SSH_CLIENT_ID_PICNIC_L1UR _PATH_SSH_USER_DIR "/id_picnicl1ur"
+#define _PATH_SSH_CLIENT_ID_PICNIC_L1FULL _PATH_SSH_USER_DIR "/id_picnicl1full"
+#define _PATH_SSH_CLIENT_ID_PICNIC_L3FS _PATH_SSH_USER_DIR "/id_picnicl3fs"
+#define _PATH_SSH_CLIENT_ID_PICNIC_L3UR _PATH_SSH_USER_DIR "/id_picnicl3ur"
+#define _PATH_SSH_CLIENT_ID_PICNIC_L3FULL _PATH_SSH_USER_DIR "/id_picnicl3full"
+#define _PATH_SSH_CLIENT_ID_PICNIC_L5FS _PATH_SSH_USER_DIR "/id_picnicl5fs"
+#define _PATH_SSH_CLIENT_ID_PICNIC_L5UR _PATH_SSH_USER_DIR "/id_picnicl5ur"
+#define _PATH_SSH_CLIENT_ID_PICNIC_L5FULL _PATH_SSH_USER_DIR "/id_picnicl5full"
 #define _PATH_SSH_CLIENT_ID_PICNIC3_L1 _PATH_SSH_USER_DIR "/id_picnic3l1"
-#define _PATH_SSH_CLIENT_ID_QTESLA_P_I _PATH_SSH_USER_DIR "/id_qteslapi"
+#define _PATH_SSH_CLIENT_ID_PICNIC3_L3 _PATH_SSH_USER_DIR "/id_picnic3l3"
+#define _PATH_SSH_CLIENT_ID_PICNIC3_L5 _PATH_SSH_USER_DIR "/id_picnic3l5"
 #define _PATH_SSH_CLIENT_ID_RAINBOW_IA_CLASSIC _PATH_SSH_USER_DIR "/id_rainbowiaclassic"
+#define _PATH_SSH_CLIENT_ID_RAINBOW_IA_CYCLIC _PATH_SSH_USER_DIR "/id_rainbowiacyclic"
+#define _PATH_SSH_CLIENT_ID_RAINBOW_IA_CYCLIC_COMPRESSED _PATH_SSH_USER_DIR "/id_rainbowiacycliccompressed"
 #define _PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CLASSIC _PATH_SSH_USER_DIR "/id_rainbowiiicclassic"
+#define _PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CYCLIC _PATH_SSH_USER_DIR "/id_rainbowiiiccyclic"
+#define _PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CYCLIC_COMPRESSED _PATH_SSH_USER_DIR "/id_rainbowiiiccycliccompressed"
 #define _PATH_SSH_CLIENT_ID_RAINBOW_VC_CLASSIC _PATH_SSH_USER_DIR "/id_rainbowvcclassic"
+#define _PATH_SSH_CLIENT_ID_RAINBOW_VC_CYCLIC _PATH_SSH_USER_DIR "/id_rainbowvccyclic"
+#define _PATH_SSH_CLIENT_ID_RAINBOW_VC_CYCLIC_COMPRESSED _PATH_SSH_USER_DIR "/id_rainbowvccycliccompressed"
 #define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128F_ROBUST _PATH_SSH_USER_DIR "/id_sphincsharaka128frobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128F_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsharaka128fsimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128S_ROBUST _PATH_SSH_USER_DIR "/id_sphincsharaka128srobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128S_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsharaka128ssimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192F_ROBUST _PATH_SSH_USER_DIR "/id_sphincsharaka192frobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192F_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsharaka192fsimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192S_ROBUST _PATH_SSH_USER_DIR "/id_sphincsharaka192srobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192S_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsharaka192ssimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256F_ROBUST _PATH_SSH_USER_DIR "/id_sphincsharaka256frobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256F_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsharaka256fsimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256S_ROBUST _PATH_SSH_USER_DIR "/id_sphincsharaka256srobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256S_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsharaka256ssimple"
 #define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128F_ROBUST _PATH_SSH_USER_DIR "/id_sphincssha256128frobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128F_SIMPLE _PATH_SSH_USER_DIR "/id_sphincssha256128fsimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128S_ROBUST _PATH_SSH_USER_DIR "/id_sphincssha256128srobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128S_SIMPLE _PATH_SSH_USER_DIR "/id_sphincssha256128ssimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192F_ROBUST _PATH_SSH_USER_DIR "/id_sphincssha256192frobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192F_SIMPLE _PATH_SSH_USER_DIR "/id_sphincssha256192fsimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192S_ROBUST _PATH_SSH_USER_DIR "/id_sphincssha256192srobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192S_SIMPLE _PATH_SSH_USER_DIR "/id_sphincssha256192ssimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256F_ROBUST _PATH_SSH_USER_DIR "/id_sphincssha256256frobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256F_SIMPLE _PATH_SSH_USER_DIR "/id_sphincssha256256fsimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256S_ROBUST _PATH_SSH_USER_DIR "/id_sphincssha256256srobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256S_SIMPLE _PATH_SSH_USER_DIR "/id_sphincssha256256ssimple"
 #define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128F_ROBUST _PATH_SSH_USER_DIR "/id_sphincsshake256128frobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128F_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsshake256128fsimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128S_ROBUST _PATH_SSH_USER_DIR "/id_sphincsshake256128srobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128S_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsshake256128ssimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192F_ROBUST _PATH_SSH_USER_DIR "/id_sphincsshake256192frobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192F_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsshake256192fsimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192S_ROBUST _PATH_SSH_USER_DIR "/id_sphincsshake256192srobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192S_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsshake256192ssimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256F_ROBUST _PATH_SSH_USER_DIR "/id_sphincsshake256256frobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256F_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsshake256256fsimple"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256S_ROBUST _PATH_SSH_USER_DIR "/id_sphincsshake256256srobust"
+#define _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256S_SIMPLE _PATH_SSH_USER_DIR "/id_sphincsshake256256ssimple"
 #define _PATH_SSH_CLIENT_ID_RSA3072_OQSDEFAULT _PATH_SSH_USER_DIR "/id_rsa3072_oqsdefault"
 #define _PATH_SSH_CLIENT_ID_P256_OQSDEFAULT _PATH_SSH_USER_DIR "/id_p256_oqsdefault"
 #define _PATH_SSH_CLIENT_ID_RSA3072_DILITHIUM_2 _PATH_SSH_USER_DIR "/id_rsa3072_dilithium2"
 #define _PATH_SSH_CLIENT_ID_P256_DILITHIUM_2 _PATH_SSH_USER_DIR "/id_p256_dilithium2"
+#define _PATH_SSH_CLIENT_ID_RSA3072_DILITHIUM_3 _PATH_SSH_USER_DIR "/id_rsa3072_dilithium3"
+#define _PATH_SSH_CLIENT_ID_P256_DILITHIUM_3 _PATH_SSH_USER_DIR "/id_p256_dilithium3"
+#define _PATH_SSH_CLIENT_ID_P384_DILITHIUM_4 _PATH_SSH_USER_DIR "/id_p384_dilithium4"
 #define _PATH_SSH_CLIENT_ID_RSA3072_FALCON_512 _PATH_SSH_USER_DIR "/id_rsa3072_falcon512"
 #define _PATH_SSH_CLIENT_ID_P256_FALCON_512 _PATH_SSH_USER_DIR "/id_p256_falcon512"
-#define _PATH_SSH_CLIENT_ID_RSA3072_MQDSS_31_48 _PATH_SSH_USER_DIR "/id_rsa3072_mqdss3148"
-#define _PATH_SSH_CLIENT_ID_P256_MQDSS_31_48 _PATH_SSH_USER_DIR "/id_p256_mqdss3148"
+#define _PATH_SSH_CLIENT_ID_P521_FALCON_1024 _PATH_SSH_USER_DIR "/id_p521_falcon1024"
 #define _PATH_SSH_CLIENT_ID_RSA3072_PICNIC_L1FS _PATH_SSH_USER_DIR "/id_rsa3072_picnicl1fs"
 #define _PATH_SSH_CLIENT_ID_P256_PICNIC_L1FS _PATH_SSH_USER_DIR "/id_p256_picnicl1fs"
+#define _PATH_SSH_CLIENT_ID_RSA3072_PICNIC_L1UR _PATH_SSH_USER_DIR "/id_rsa3072_picnicl1ur"
+#define _PATH_SSH_CLIENT_ID_P256_PICNIC_L1UR _PATH_SSH_USER_DIR "/id_p256_picnicl1ur"
+#define _PATH_SSH_CLIENT_ID_RSA3072_PICNIC_L1FULL _PATH_SSH_USER_DIR "/id_rsa3072_picnicl1full"
+#define _PATH_SSH_CLIENT_ID_P256_PICNIC_L1FULL _PATH_SSH_USER_DIR "/id_p256_picnicl1full"
+#define _PATH_SSH_CLIENT_ID_P384_PICNIC_L3FS _PATH_SSH_USER_DIR "/id_p384_picnicl3fs"
+#define _PATH_SSH_CLIENT_ID_P384_PICNIC_L3UR _PATH_SSH_USER_DIR "/id_p384_picnicl3ur"
+#define _PATH_SSH_CLIENT_ID_P384_PICNIC_L3FULL _PATH_SSH_USER_DIR "/id_p384_picnicl3full"
+#define _PATH_SSH_CLIENT_ID_P521_PICNIC_L5FS _PATH_SSH_USER_DIR "/id_p521_picnicl5fs"
+#define _PATH_SSH_CLIENT_ID_P521_PICNIC_L5UR _PATH_SSH_USER_DIR "/id_p521_picnicl5ur"
+#define _PATH_SSH_CLIENT_ID_P521_PICNIC_L5FULL _PATH_SSH_USER_DIR "/id_p521_picnicl5full"
 #define _PATH_SSH_CLIENT_ID_RSA3072_PICNIC3_L1 _PATH_SSH_USER_DIR "/id_rsa3072_picnic3l1"
 #define _PATH_SSH_CLIENT_ID_P256_PICNIC3_L1 _PATH_SSH_USER_DIR "/id_p256_picnic3l1"
-#define _PATH_SSH_CLIENT_ID_RSA3072_QTESLA_P_I _PATH_SSH_USER_DIR "/id_rsa3072_qteslapi"
-#define _PATH_SSH_CLIENT_ID_P256_QTESLA_P_I _PATH_SSH_USER_DIR "/id_p256_qteslapi"
+#define _PATH_SSH_CLIENT_ID_P384_PICNIC3_L3 _PATH_SSH_USER_DIR "/id_p384_picnic3l3"
+#define _PATH_SSH_CLIENT_ID_P521_PICNIC3_L5 _PATH_SSH_USER_DIR "/id_p521_picnic3l5"
 #define _PATH_SSH_CLIENT_ID_RSA3072_RAINBOW_IA_CLASSIC _PATH_SSH_USER_DIR "/id_rsa3072_rainbowiaclassic"
 #define _PATH_SSH_CLIENT_ID_P256_RAINBOW_IA_CLASSIC _PATH_SSH_USER_DIR "/id_p256_rainbowiaclassic"
+#define _PATH_SSH_CLIENT_ID_RSA3072_RAINBOW_IA_CYCLIC _PATH_SSH_USER_DIR "/id_rsa3072_rainbowiacyclic"
+#define _PATH_SSH_CLIENT_ID_P256_RAINBOW_IA_CYCLIC _PATH_SSH_USER_DIR "/id_p256_rainbowiacyclic"
+#define _PATH_SSH_CLIENT_ID_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED _PATH_SSH_USER_DIR "/id_rsa3072_rainbowiacycliccompressed"
+#define _PATH_SSH_CLIENT_ID_P256_RAINBOW_IA_CYCLIC_COMPRESSED _PATH_SSH_USER_DIR "/id_p256_rainbowiacycliccompressed"
 #define _PATH_SSH_CLIENT_ID_P384_RAINBOW_IIIC_CLASSIC _PATH_SSH_USER_DIR "/id_p384_rainbowiiicclassic"
+#define _PATH_SSH_CLIENT_ID_P384_RAINBOW_IIIC_CYCLIC _PATH_SSH_USER_DIR "/id_p384_rainbowiiiccyclic"
+#define _PATH_SSH_CLIENT_ID_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED _PATH_SSH_USER_DIR "/id_p384_rainbowiiiccycliccompressed"
 #define _PATH_SSH_CLIENT_ID_P521_RAINBOW_VC_CLASSIC _PATH_SSH_USER_DIR "/id_p521_rainbowvcclassic"
+#define _PATH_SSH_CLIENT_ID_P521_RAINBOW_VC_CYCLIC _PATH_SSH_USER_DIR "/id_p521_rainbowvccyclic"
+#define _PATH_SSH_CLIENT_ID_P521_RAINBOW_VC_CYCLIC_COMPRESSED _PATH_SSH_USER_DIR "/id_p521_rainbowvccycliccompressed"
 #define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128F_ROBUST _PATH_SSH_USER_DIR "/id_rsa3072_sphincsharaka128frobust"
 #define _PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128F_ROBUST _PATH_SSH_USER_DIR "/id_p256_sphincsharaka128frobust"
+#define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128F_SIMPLE _PATH_SSH_USER_DIR "/id_rsa3072_sphincsharaka128fsimple"
+#define _PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128F_SIMPLE _PATH_SSH_USER_DIR "/id_p256_sphincsharaka128fsimple"
+#define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128S_ROBUST _PATH_SSH_USER_DIR "/id_rsa3072_sphincsharaka128srobust"
+#define _PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128S_ROBUST _PATH_SSH_USER_DIR "/id_p256_sphincsharaka128srobust"
+#define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128S_SIMPLE _PATH_SSH_USER_DIR "/id_rsa3072_sphincsharaka128ssimple"
+#define _PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128S_SIMPLE _PATH_SSH_USER_DIR "/id_p256_sphincsharaka128ssimple"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192F_ROBUST _PATH_SSH_USER_DIR "/id_p384_sphincsharaka192frobust"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192F_SIMPLE _PATH_SSH_USER_DIR "/id_p384_sphincsharaka192fsimple"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192S_ROBUST _PATH_SSH_USER_DIR "/id_p384_sphincsharaka192srobust"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192S_SIMPLE _PATH_SSH_USER_DIR "/id_p384_sphincsharaka192ssimple"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256F_ROBUST _PATH_SSH_USER_DIR "/id_p521_sphincsharaka256frobust"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256F_SIMPLE _PATH_SSH_USER_DIR "/id_p521_sphincsharaka256fsimple"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256S_ROBUST _PATH_SSH_USER_DIR "/id_p521_sphincsharaka256srobust"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256S_SIMPLE _PATH_SSH_USER_DIR "/id_p521_sphincsharaka256ssimple"
 #define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128F_ROBUST _PATH_SSH_USER_DIR "/id_rsa3072_sphincssha256128frobust"
 #define _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128F_ROBUST _PATH_SSH_USER_DIR "/id_p256_sphincssha256128frobust"
+#define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128F_SIMPLE _PATH_SSH_USER_DIR "/id_rsa3072_sphincssha256128fsimple"
+#define _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128F_SIMPLE _PATH_SSH_USER_DIR "/id_p256_sphincssha256128fsimple"
+#define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128S_ROBUST _PATH_SSH_USER_DIR "/id_rsa3072_sphincssha256128srobust"
+#define _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128S_ROBUST _PATH_SSH_USER_DIR "/id_p256_sphincssha256128srobust"
+#define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128S_SIMPLE _PATH_SSH_USER_DIR "/id_rsa3072_sphincssha256128ssimple"
+#define _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128S_SIMPLE _PATH_SSH_USER_DIR "/id_p256_sphincssha256128ssimple"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192F_ROBUST _PATH_SSH_USER_DIR "/id_p384_sphincssha256192frobust"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192F_SIMPLE _PATH_SSH_USER_DIR "/id_p384_sphincssha256192fsimple"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192S_ROBUST _PATH_SSH_USER_DIR "/id_p384_sphincssha256192srobust"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192S_SIMPLE _PATH_SSH_USER_DIR "/id_p384_sphincssha256192ssimple"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256F_ROBUST _PATH_SSH_USER_DIR "/id_p521_sphincssha256256frobust"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256F_SIMPLE _PATH_SSH_USER_DIR "/id_p521_sphincssha256256fsimple"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256S_ROBUST _PATH_SSH_USER_DIR "/id_p521_sphincssha256256srobust"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256S_SIMPLE _PATH_SSH_USER_DIR "/id_p521_sphincssha256256ssimple"
 #define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128F_ROBUST _PATH_SSH_USER_DIR "/id_rsa3072_sphincsshake256128frobust"
 #define _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128F_ROBUST _PATH_SSH_USER_DIR "/id_p256_sphincsshake256128frobust"
+#define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE _PATH_SSH_USER_DIR "/id_rsa3072_sphincsshake256128fsimple"
+#define _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128F_SIMPLE _PATH_SSH_USER_DIR "/id_p256_sphincsshake256128fsimple"
+#define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128S_ROBUST _PATH_SSH_USER_DIR "/id_rsa3072_sphincsshake256128srobust"
+#define _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128S_ROBUST _PATH_SSH_USER_DIR "/id_p256_sphincsshake256128srobust"
+#define _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE _PATH_SSH_USER_DIR "/id_rsa3072_sphincsshake256128ssimple"
+#define _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128S_SIMPLE _PATH_SSH_USER_DIR "/id_p256_sphincsshake256128ssimple"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192F_ROBUST _PATH_SSH_USER_DIR "/id_p384_sphincsshake256192frobust"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192F_SIMPLE _PATH_SSH_USER_DIR "/id_p384_sphincsshake256192fsimple"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192S_ROBUST _PATH_SSH_USER_DIR "/id_p384_sphincsshake256192srobust"
+#define _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192S_SIMPLE _PATH_SSH_USER_DIR "/id_p384_sphincsshake256192ssimple"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256F_ROBUST _PATH_SSH_USER_DIR "/id_p521_sphincsshake256256frobust"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256F_SIMPLE _PATH_SSH_USER_DIR "/id_p521_sphincsshake256256fsimple"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256S_ROBUST _PATH_SSH_USER_DIR "/id_p521_sphincsshake256256srobust"
+#define _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256S_SIMPLE _PATH_SSH_USER_DIR "/id_p521_sphincsshake256256ssimple"
 ///// OQS_TEMPLATE_FRAGMENT_DEFINE_OQS_ID_FILES_END
 
 /*
diff --git a/readconf.c b/readconf.c
index d7a12691..2839e7a6 100644
--- a/readconf.c
+++ b/readconf.c
@@ -2030,17 +2030,67 @@ fill_default_options(Options * options)
 ///// OQS_TEMPLATE_FRAGMENT_ADD_PQ_ID_FILES_START
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_OQSDEFAULT, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_DILITHIUM_2, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_DILITHIUM_3, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_DILITHIUM_4, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_FALCON_512, 0);
-		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_MQDSS_31_48, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_FALCON_1024, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC_L1FS, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC_L1UR, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC_L1FULL, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC_L3FS, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC_L3UR, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC_L3FULL, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC_L5FS, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC_L5UR, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC_L5FULL, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC3_L1, 0);
-		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_QTESLA_P_I, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC3_L3, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_PICNIC3_L5, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RAINBOW_IA_CLASSIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RAINBOW_IA_CYCLIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RAINBOW_IA_CYCLIC_COMPRESSED, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CLASSIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CYCLIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CYCLIC_COMPRESSED, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RAINBOW_VC_CLASSIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RAINBOW_VC_CYCLIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RAINBOW_VC_CYCLIC_COMPRESSED, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256S_SIMPLE, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256S_SIMPLE, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256S_SIMPLE, 0);
 ///// OQS_TEMPLATE_FRAGMENT_ADD_PQ_ID_FILES_END
 #endif /* WITH_PQ_AUTH */
 #ifdef WITH_HYBRID_AUTH
@@ -2049,26 +2099,88 @@ fill_default_options(Options * options)
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_OQSDEFAULT, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_DILITHIUM_2, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_DILITHIUM_2, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_DILITHIUM_3, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_DILITHIUM_3, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_DILITHIUM_4, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_FALCON_512, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_FALCON_512, 0);
-		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_MQDSS_31_48, 0);
-		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_MQDSS_31_48, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_FALCON_1024, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_PICNIC_L1FS, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_PICNIC_L1FS, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_PICNIC_L1UR, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_PICNIC_L1UR, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_PICNIC_L1FULL, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_PICNIC_L1FULL, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_PICNIC_L3FS, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_PICNIC_L3UR, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_PICNIC_L3FULL, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_PICNIC_L5FS, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_PICNIC_L5UR, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_PICNIC_L5FULL, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_PICNIC3_L1, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_PICNIC3_L1, 0);
-		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_QTESLA_P_I, 0);
-		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_QTESLA_P_I, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_PICNIC3_L3, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_PICNIC3_L5, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_RAINBOW_IA_CLASSIC, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_RAINBOW_IA_CLASSIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_RAINBOW_IA_CYCLIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_RAINBOW_IA_CYCLIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_RAINBOW_IA_CYCLIC_COMPRESSED, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_RAINBOW_IIIC_CLASSIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_RAINBOW_IIIC_CYCLIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_RAINBOW_VC_CLASSIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_RAINBOW_VC_CYCLIC, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_RAINBOW_VC_CYCLIC_COMPRESSED, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128F_ROBUST, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256S_SIMPLE, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128F_ROBUST, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256S_SIMPLE, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128F_ROBUST, 0);
 		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192S_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256F_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256F_SIMPLE, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256S_ROBUST, 0);
+		add_identity_file(options, "~/", _PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256S_SIMPLE, 0);
 ///// OQS_TEMPLATE_FRAGMENT_ADD_HYBRID_ID_FILES_END
 #endif /* WITH_HYBRID_AUTH */
 	}
diff --git a/servconf.c b/servconf.c
index 97dc9173..3bd4cbde 100644
--- a/servconf.c
+++ b/servconf.c
@@ -285,28 +285,128 @@ fill_default_server_options(ServerOptions *options)
 		    _PATH_HOST_OQSDEFAULT_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_DILITHIUM_2_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_DILITHIUM_3_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_DILITHIUM_4_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_FALCON_512_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
-		    _PATH_HOST_MQDSS_31_48_KEY_FILE);
+		    _PATH_HOST_FALCON_1024_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_PICNIC_L1FS_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_PICNIC_L1UR_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_PICNIC_L1FULL_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_PICNIC_L3FS_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_PICNIC_L3UR_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_PICNIC_L3FULL_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_PICNIC_L5FS_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_PICNIC_L5UR_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_PICNIC_L5FULL_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_PICNIC3_L1_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
-		    _PATH_HOST_QTESLA_P_I_KEY_FILE);
+		    _PATH_HOST_PICNIC3_L3_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_PICNIC3_L5_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_RAINBOW_IA_CLASSIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RAINBOW_IA_CYCLIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_RAINBOW_IIIC_CLASSIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RAINBOW_IIIC_CYCLIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RAINBOW_IIIC_CYCLIC_COMPRESSED_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_RAINBOW_VC_CLASSIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RAINBOW_VC_CYCLIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RAINBOW_VC_CYCLIC_COMPRESSED_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_HARAKA_192F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_HARAKA_192F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_HARAKA_192S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_HARAKA_192S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_HARAKA_256F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_HARAKA_256F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_HARAKA_256S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_HARAKA_256S_SIMPLE_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_SPHINCS_SHA256_128F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHA256_128S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHA256_192F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHA256_192F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHA256_192S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHA256_192S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHA256_256F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHA256_256F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHA256_256S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHA256_256S_SIMPLE_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHAKE256_192F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHAKE256_192F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHAKE256_192S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHAKE256_192S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHAKE256_256F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHAKE256_256F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHAKE256_256S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_SPHINCS_SHAKE256_256S_SIMPLE_KEY_FILE);
 ///// OQS_TEMPLATE_FRAGMENT_ADD_PQ_HOSTKEYS_END
 #endif /* WITH_PQ_AUTH */
 #ifdef WITH_HYBRID_AUTH
@@ -319,46 +419,170 @@ fill_default_server_options(ServerOptions *options)
 		    _PATH_HOST_RSA3072_DILITHIUM_2_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_P256_DILITHIUM_2_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_DILITHIUM_3_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_DILITHIUM_3_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_DILITHIUM_4_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_RSA3072_FALCON_512_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_P256_FALCON_512_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
-		    _PATH_HOST_RSA3072_MQDSS_31_48_KEY_FILE);
-		servconf_add_hostkey("[default]", 0, options,
-		    _PATH_HOST_P256_MQDSS_31_48_KEY_FILE);
+		    _PATH_HOST_P521_FALCON_1024_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_RSA3072_PICNIC_L1FS_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_P256_PICNIC_L1FS_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_PICNIC_L1UR_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_PICNIC_L1UR_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_PICNIC_L1FULL_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_PICNIC_L1FULL_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_PICNIC_L3FS_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_PICNIC_L3UR_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_PICNIC_L3FULL_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_PICNIC_L5FS_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_PICNIC_L5UR_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_PICNIC_L5FULL_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_RSA3072_PICNIC3_L1_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_P256_PICNIC3_L1_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
-		    _PATH_HOST_RSA3072_QTESLA_P_I_KEY_FILE);
+		    _PATH_HOST_P384_PICNIC3_L3_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
-		    _PATH_HOST_P256_QTESLA_P_I_KEY_FILE);
+		    _PATH_HOST_P521_PICNIC3_L5_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_RSA3072_RAINBOW_IA_CLASSIC_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_P256_RAINBOW_IA_CLASSIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_RAINBOW_IA_CYCLIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_RAINBOW_IA_CYCLIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_P384_RAINBOW_IIIC_CLASSIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_RAINBOW_IIIC_CYCLIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_P521_RAINBOW_VC_CLASSIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_RAINBOW_VC_CYCLIC_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_RAINBOW_VC_CYCLIC_COMPRESSED_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_RSA3072_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_P256_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_HARAKA_192F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_HARAKA_192F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_HARAKA_192S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_HARAKA_192S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_HARAKA_256F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_HARAKA_256F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_HARAKA_256S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_HARAKA_256S_SIMPLE_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_RSA3072_SPHINCS_SHA256_128F_ROBUST_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_P256_SPHINCS_SHA256_128F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_SPHINCS_SHA256_128S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_SPHINCS_SHA256_128S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_SHA256_192F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_SHA256_192F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_SHA256_192S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_SHA256_192S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_SHA256_256F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_SHA256_256F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_SHA256_256S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_SHA256_256S_SIMPLE_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE);
 		servconf_add_hostkey("[default]", 0, options,
 		    _PATH_HOST_P256_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P256_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_SHAKE256_192F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_SHAKE256_192F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_SHAKE256_192S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P384_SPHINCS_SHAKE256_192S_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_SHAKE256_256F_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_SHAKE256_256F_SIMPLE_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_SHAKE256_256S_ROBUST_KEY_FILE);
+		servconf_add_hostkey("[default]", 0, options,
+		    _PATH_HOST_P521_SPHINCS_SHAKE256_256S_SIMPLE_KEY_FILE);
 ///// OQS_TEMPLATE_FRAGMENT_ADD_HYBRID_HOSTKEYS_END
 #endif /* WITH_HYBRID_AUTH */
 	}
diff --git a/ssh-add.c b/ssh-add.c
index 0b3cf45c..3227680b 100644
--- a/ssh-add.c
+++ b/ssh-add.c
@@ -83,17 +83,67 @@ static char *default_files[] = {
 ///// OQS_TEMPLATE_FRAGMENT_LIST_PQ_ID_PATHS_START
 	_PATH_SSH_CLIENT_ID_OQSDEFAULT,
 	_PATH_SSH_CLIENT_ID_DILITHIUM_2,
+	_PATH_SSH_CLIENT_ID_DILITHIUM_3,
+	_PATH_SSH_CLIENT_ID_DILITHIUM_4,
 	_PATH_SSH_CLIENT_ID_FALCON_512,
-	_PATH_SSH_CLIENT_ID_MQDSS_31_48,
+	_PATH_SSH_CLIENT_ID_FALCON_1024,
 	_PATH_SSH_CLIENT_ID_PICNIC_L1FS,
+	_PATH_SSH_CLIENT_ID_PICNIC_L1UR,
+	_PATH_SSH_CLIENT_ID_PICNIC_L1FULL,
+	_PATH_SSH_CLIENT_ID_PICNIC_L3FS,
+	_PATH_SSH_CLIENT_ID_PICNIC_L3UR,
+	_PATH_SSH_CLIENT_ID_PICNIC_L3FULL,
+	_PATH_SSH_CLIENT_ID_PICNIC_L5FS,
+	_PATH_SSH_CLIENT_ID_PICNIC_L5UR,
+	_PATH_SSH_CLIENT_ID_PICNIC_L5FULL,
 	_PATH_SSH_CLIENT_ID_PICNIC3_L1,
-	_PATH_SSH_CLIENT_ID_QTESLA_P_I,
+	_PATH_SSH_CLIENT_ID_PICNIC3_L3,
+	_PATH_SSH_CLIENT_ID_PICNIC3_L5,
 	_PATH_SSH_CLIENT_ID_RAINBOW_IA_CLASSIC,
+	_PATH_SSH_CLIENT_ID_RAINBOW_IA_CYCLIC,
+	_PATH_SSH_CLIENT_ID_RAINBOW_IA_CYCLIC_COMPRESSED,
 	_PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CLASSIC,
+	_PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CYCLIC,
+	_PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CYCLIC_COMPRESSED,
 	_PATH_SSH_CLIENT_ID_RAINBOW_VC_CLASSIC,
+	_PATH_SSH_CLIENT_ID_RAINBOW_VC_CYCLIC,
+	_PATH_SSH_CLIENT_ID_RAINBOW_VC_CYCLIC_COMPRESSED,
 	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128F_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128S_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192F_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192S_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256F_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256S_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256S_SIMPLE,
 	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128F_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128S_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192F_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192S_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256F_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256S_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256S_SIMPLE,
 	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128F_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128S_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192F_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192S_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256F_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256S_ROBUST,
+	_PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256S_SIMPLE,
 ///// OQS_TEMPLATE_FRAGMENT_LIST_PQ_ID_PATHS_END
 #endif /* WITH_PQ_AUTH */
 #ifdef WITH_HYBRID_AUTH
@@ -102,26 +152,88 @@ static char *default_files[] = {
 	_PATH_SSH_CLIENT_ID_P256_OQSDEFAULT,
 	_PATH_SSH_CLIENT_ID_RSA3072_DILITHIUM_2,
 	_PATH_SSH_CLIENT_ID_P256_DILITHIUM_2,
+	_PATH_SSH_CLIENT_ID_RSA3072_DILITHIUM_3,
+	_PATH_SSH_CLIENT_ID_P256_DILITHIUM_3,
+	_PATH_SSH_CLIENT_ID_P384_DILITHIUM_4,
 	_PATH_SSH_CLIENT_ID_RSA3072_FALCON_512,
 	_PATH_SSH_CLIENT_ID_P256_FALCON_512,
-	_PATH_SSH_CLIENT_ID_RSA3072_MQDSS_31_48,
-	_PATH_SSH_CLIENT_ID_P256_MQDSS_31_48,
+	_PATH_SSH_CLIENT_ID_P521_FALCON_1024,
 	_PATH_SSH_CLIENT_ID_RSA3072_PICNIC_L1FS,
 	_PATH_SSH_CLIENT_ID_P256_PICNIC_L1FS,
+	_PATH_SSH_CLIENT_ID_RSA3072_PICNIC_L1UR,
+	_PATH_SSH_CLIENT_ID_P256_PICNIC_L1UR,
+	_PATH_SSH_CLIENT_ID_RSA3072_PICNIC_L1FULL,
+	_PATH_SSH_CLIENT_ID_P256_PICNIC_L1FULL,
+	_PATH_SSH_CLIENT_ID_P384_PICNIC_L3FS,
+	_PATH_SSH_CLIENT_ID_P384_PICNIC_L3UR,
+	_PATH_SSH_CLIENT_ID_P384_PICNIC_L3FULL,
+	_PATH_SSH_CLIENT_ID_P521_PICNIC_L5FS,
+	_PATH_SSH_CLIENT_ID_P521_PICNIC_L5UR,
+	_PATH_SSH_CLIENT_ID_P521_PICNIC_L5FULL,
 	_PATH_SSH_CLIENT_ID_RSA3072_PICNIC3_L1,
 	_PATH_SSH_CLIENT_ID_P256_PICNIC3_L1,
-	_PATH_SSH_CLIENT_ID_RSA3072_QTESLA_P_I,
-	_PATH_SSH_CLIENT_ID_P256_QTESLA_P_I,
+	_PATH_SSH_CLIENT_ID_P384_PICNIC3_L3,
+	_PATH_SSH_CLIENT_ID_P521_PICNIC3_L5,
 	_PATH_SSH_CLIENT_ID_RSA3072_RAINBOW_IA_CLASSIC,
 	_PATH_SSH_CLIENT_ID_P256_RAINBOW_IA_CLASSIC,
+	_PATH_SSH_CLIENT_ID_RSA3072_RAINBOW_IA_CYCLIC,
+	_PATH_SSH_CLIENT_ID_P256_RAINBOW_IA_CYCLIC,
+	_PATH_SSH_CLIENT_ID_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED,
+	_PATH_SSH_CLIENT_ID_P256_RAINBOW_IA_CYCLIC_COMPRESSED,
 	_PATH_SSH_CLIENT_ID_P384_RAINBOW_IIIC_CLASSIC,
+	_PATH_SSH_CLIENT_ID_P384_RAINBOW_IIIC_CYCLIC,
+	_PATH_SSH_CLIENT_ID_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED,
 	_PATH_SSH_CLIENT_ID_P521_RAINBOW_VC_CLASSIC,
+	_PATH_SSH_CLIENT_ID_P521_RAINBOW_VC_CYCLIC,
+	_PATH_SSH_CLIENT_ID_P521_RAINBOW_VC_CYCLIC_COMPRESSED,
 	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128F_ROBUST,
 	_PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128F_ROBUST,
+	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128S_ROBUST,
+	_PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128S_ROBUST,
+	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_HARAKA_128S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P256_SPHINCS_HARAKA_128S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192F_ROBUST,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192S_ROBUST,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_HARAKA_192S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256F_ROBUST,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256S_ROBUST,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_HARAKA_256S_SIMPLE,
 	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128F_ROBUST,
 	_PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128F_ROBUST,
+	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128S_ROBUST,
+	_PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128S_ROBUST,
+	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHA256_128S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P256_SPHINCS_SHA256_128S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192F_ROBUST,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192S_ROBUST,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_SHA256_192S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256F_ROBUST,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256S_ROBUST,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_SHA256_256S_SIMPLE,
 	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128F_ROBUST,
 	_PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128F_ROBUST,
+	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128S_ROBUST,
+	_PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128S_ROBUST,
+	_PATH_SSH_CLIENT_ID_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P256_SPHINCS_SHAKE256_128S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192F_ROBUST,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192S_ROBUST,
+	_PATH_SSH_CLIENT_ID_P384_SPHINCS_SHAKE256_192S_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256F_ROBUST,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256F_SIMPLE,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256S_ROBUST,
+	_PATH_SSH_CLIENT_ID_P521_SPHINCS_SHAKE256_256S_SIMPLE,
 ///// OQS_TEMPLATE_FRAGMENT_LIST_HYBRID_ID_PATHS_END
 #endif /* WITH_HYBRID_AUTH */
 	NULL
diff --git a/ssh-keygen.c b/ssh-keygen.c
index e7b75208..6d8dbccb 100644
--- a/ssh-keygen.c
+++ b/ssh-keygen.c
@@ -239,10 +239,48 @@ type_bits_valid(int type, const char *name, u_int32_t *bitsp)
 	if (name == NULL && IS_ECDSA_HYBRID(type)) {
 		switch (type) {
 ///// OQS_TEMPLATE_FRAGMENT_SET_BITS_START
+		case KEY_P384_DILITHIUM_4:
+		case KEY_P384_PICNIC_L3FS:
+		case KEY_P384_PICNIC_L3UR:
+		case KEY_P384_PICNIC_L3FULL:
+		case KEY_P384_PICNIC3_L3:
 		case KEY_P384_RAINBOW_IIIC_CLASSIC:
+		case KEY_P384_RAINBOW_IIIC_CYCLIC:
+		case KEY_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED:
+		case KEY_P384_SPHINCS_HARAKA_192F_ROBUST:
+		case KEY_P384_SPHINCS_HARAKA_192F_SIMPLE:
+		case KEY_P384_SPHINCS_HARAKA_192S_ROBUST:
+		case KEY_P384_SPHINCS_HARAKA_192S_SIMPLE:
+		case KEY_P384_SPHINCS_SHA256_192F_ROBUST:
+		case KEY_P384_SPHINCS_SHA256_192F_SIMPLE:
+		case KEY_P384_SPHINCS_SHA256_192S_ROBUST:
+		case KEY_P384_SPHINCS_SHA256_192S_SIMPLE:
+		case KEY_P384_SPHINCS_SHAKE256_192F_ROBUST:
+		case KEY_P384_SPHINCS_SHAKE256_192F_SIMPLE:
+		case KEY_P384_SPHINCS_SHAKE256_192S_ROBUST:
+		case KEY_P384_SPHINCS_SHAKE256_192S_SIMPLE:
 			*bitsp = 384;
 			break;
+		case KEY_P521_FALCON_1024:
+		case KEY_P521_PICNIC_L5FS:
+		case KEY_P521_PICNIC_L5UR:
+		case KEY_P521_PICNIC_L5FULL:
+		case KEY_P521_PICNIC3_L5:
 		case KEY_P521_RAINBOW_VC_CLASSIC:
+		case KEY_P521_RAINBOW_VC_CYCLIC:
+		case KEY_P521_RAINBOW_VC_CYCLIC_COMPRESSED:
+		case KEY_P521_SPHINCS_HARAKA_256F_ROBUST:
+		case KEY_P521_SPHINCS_HARAKA_256F_SIMPLE:
+		case KEY_P521_SPHINCS_HARAKA_256S_ROBUST:
+		case KEY_P521_SPHINCS_HARAKA_256S_SIMPLE:
+		case KEY_P521_SPHINCS_SHA256_256F_ROBUST:
+		case KEY_P521_SPHINCS_SHA256_256F_SIMPLE:
+		case KEY_P521_SPHINCS_SHA256_256S_ROBUST:
+		case KEY_P521_SPHINCS_SHA256_256S_SIMPLE:
+		case KEY_P521_SPHINCS_SHAKE256_256F_ROBUST:
+		case KEY_P521_SPHINCS_SHAKE256_256F_SIMPLE:
+		case KEY_P521_SPHINCS_SHAKE256_256S_ROBUST:
+		case KEY_P521_SPHINCS_SHAKE256_256S_SIMPLE:
 			*bitsp = 521;
 ///// OQS_TEMPLATE_FRAGMENT_SET_BITS_END
 		}
@@ -313,39 +351,189 @@ ask_filename(struct passwd *pw, const char *prompt)
 		case KEY_DILITHIUM_2:
 			name = _PATH_SSH_CLIENT_ID_DILITHIUM_2;
 			break;
+		case KEY_DILITHIUM_3:
+			name = _PATH_SSH_CLIENT_ID_DILITHIUM_3;
+			break;
+		case KEY_DILITHIUM_4:
+			name = _PATH_SSH_CLIENT_ID_DILITHIUM_4;
+			break;
 		case KEY_FALCON_512:
 			name = _PATH_SSH_CLIENT_ID_FALCON_512;
 			break;
-		case KEY_MQDSS_31_48:
-			name = _PATH_SSH_CLIENT_ID_MQDSS_31_48;
+		case KEY_FALCON_1024:
+			name = _PATH_SSH_CLIENT_ID_FALCON_1024;
 			break;
 		case KEY_PICNIC_L1FS:
 			name = _PATH_SSH_CLIENT_ID_PICNIC_L1FS;
 			break;
+		case KEY_PICNIC_L1UR:
+			name = _PATH_SSH_CLIENT_ID_PICNIC_L1UR;
+			break;
+		case KEY_PICNIC_L1FULL:
+			name = _PATH_SSH_CLIENT_ID_PICNIC_L1FULL;
+			break;
+		case KEY_PICNIC_L3FS:
+			name = _PATH_SSH_CLIENT_ID_PICNIC_L3FS;
+			break;
+		case KEY_PICNIC_L3UR:
+			name = _PATH_SSH_CLIENT_ID_PICNIC_L3UR;
+			break;
+		case KEY_PICNIC_L3FULL:
+			name = _PATH_SSH_CLIENT_ID_PICNIC_L3FULL;
+			break;
+		case KEY_PICNIC_L5FS:
+			name = _PATH_SSH_CLIENT_ID_PICNIC_L5FS;
+			break;
+		case KEY_PICNIC_L5UR:
+			name = _PATH_SSH_CLIENT_ID_PICNIC_L5UR;
+			break;
+		case KEY_PICNIC_L5FULL:
+			name = _PATH_SSH_CLIENT_ID_PICNIC_L5FULL;
+			break;
 		case KEY_PICNIC3_L1:
 			name = _PATH_SSH_CLIENT_ID_PICNIC3_L1;
 			break;
-		case KEY_QTESLA_P_I:
-			name = _PATH_SSH_CLIENT_ID_QTESLA_P_I;
+		case KEY_PICNIC3_L3:
+			name = _PATH_SSH_CLIENT_ID_PICNIC3_L3;
+			break;
+		case KEY_PICNIC3_L5:
+			name = _PATH_SSH_CLIENT_ID_PICNIC3_L5;
 			break;
 		case KEY_RAINBOW_IA_CLASSIC:
 			name = _PATH_SSH_CLIENT_ID_RAINBOW_IA_CLASSIC;
 			break;
+		case KEY_RAINBOW_IA_CYCLIC:
+			name = _PATH_SSH_CLIENT_ID_RAINBOW_IA_CYCLIC;
+			break;
+		case KEY_RAINBOW_IA_CYCLIC_COMPRESSED:
+			name = _PATH_SSH_CLIENT_ID_RAINBOW_IA_CYCLIC_COMPRESSED;
+			break;
 		case KEY_RAINBOW_IIIC_CLASSIC:
 			name = _PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CLASSIC;
 			break;
+		case KEY_RAINBOW_IIIC_CYCLIC:
+			name = _PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CYCLIC;
+			break;
+		case KEY_RAINBOW_IIIC_CYCLIC_COMPRESSED:
+			name = _PATH_SSH_CLIENT_ID_RAINBOW_IIIC_CYCLIC_COMPRESSED;
+			break;
 		case KEY_RAINBOW_VC_CLASSIC:
 			name = _PATH_SSH_CLIENT_ID_RAINBOW_VC_CLASSIC;
 			break;
+		case KEY_RAINBOW_VC_CYCLIC:
+			name = _PATH_SSH_CLIENT_ID_RAINBOW_VC_CYCLIC;
+			break;
+		case KEY_RAINBOW_VC_CYCLIC_COMPRESSED:
+			name = _PATH_SSH_CLIENT_ID_RAINBOW_VC_CYCLIC_COMPRESSED;
+			break;
 		case KEY_SPHINCS_HARAKA_128F_ROBUST:
 			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128F_ROBUST;
 			break;
+		case KEY_SPHINCS_HARAKA_128F_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128F_SIMPLE;
+			break;
+		case KEY_SPHINCS_HARAKA_128S_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128S_ROBUST;
+			break;
+		case KEY_SPHINCS_HARAKA_128S_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_128S_SIMPLE;
+			break;
+		case KEY_SPHINCS_HARAKA_192F_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192F_ROBUST;
+			break;
+		case KEY_SPHINCS_HARAKA_192F_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192F_SIMPLE;
+			break;
+		case KEY_SPHINCS_HARAKA_192S_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192S_ROBUST;
+			break;
+		case KEY_SPHINCS_HARAKA_192S_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_192S_SIMPLE;
+			break;
+		case KEY_SPHINCS_HARAKA_256F_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256F_ROBUST;
+			break;
+		case KEY_SPHINCS_HARAKA_256F_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256F_SIMPLE;
+			break;
+		case KEY_SPHINCS_HARAKA_256S_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256S_ROBUST;
+			break;
+		case KEY_SPHINCS_HARAKA_256S_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_HARAKA_256S_SIMPLE;
+			break;
 		case KEY_SPHINCS_SHA256_128F_ROBUST:
 			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128F_ROBUST;
 			break;
+		case KEY_SPHINCS_SHA256_128F_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128F_SIMPLE;
+			break;
+		case KEY_SPHINCS_SHA256_128S_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128S_ROBUST;
+			break;
+		case KEY_SPHINCS_SHA256_128S_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_128S_SIMPLE;
+			break;
+		case KEY_SPHINCS_SHA256_192F_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192F_ROBUST;
+			break;
+		case KEY_SPHINCS_SHA256_192F_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192F_SIMPLE;
+			break;
+		case KEY_SPHINCS_SHA256_192S_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192S_ROBUST;
+			break;
+		case KEY_SPHINCS_SHA256_192S_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_192S_SIMPLE;
+			break;
+		case KEY_SPHINCS_SHA256_256F_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256F_ROBUST;
+			break;
+		case KEY_SPHINCS_SHA256_256F_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256F_SIMPLE;
+			break;
+		case KEY_SPHINCS_SHA256_256S_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256S_ROBUST;
+			break;
+		case KEY_SPHINCS_SHA256_256S_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHA256_256S_SIMPLE;
+			break;
 		case KEY_SPHINCS_SHAKE256_128F_ROBUST:
 			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128F_ROBUST;
 			break;
+		case KEY_SPHINCS_SHAKE256_128F_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128F_SIMPLE;
+			break;
+		case KEY_SPHINCS_SHAKE256_128S_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128S_ROBUST;
+			break;
+		case KEY_SPHINCS_SHAKE256_128S_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_128S_SIMPLE;
+			break;
+		case KEY_SPHINCS_SHAKE256_192F_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192F_ROBUST;
+			break;
+		case KEY_SPHINCS_SHAKE256_192F_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192F_SIMPLE;
+			break;
+		case KEY_SPHINCS_SHAKE256_192S_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192S_ROBUST;
+			break;
+		case KEY_SPHINCS_SHAKE256_192S_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_192S_SIMPLE;
+			break;
+		case KEY_SPHINCS_SHAKE256_256F_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256F_ROBUST;
+			break;
+		case KEY_SPHINCS_SHAKE256_256F_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256F_SIMPLE;
+			break;
+		case KEY_SPHINCS_SHAKE256_256S_ROBUST:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256S_ROBUST;
+			break;
+		case KEY_SPHINCS_SHAKE256_256S_SIMPLE:
+			name = _PATH_SSH_CLIENT_ID_SPHINCS_SHAKE256_256S_SIMPLE;
+			break;
 ///// OQS_TEMPLATE_FRAGMENT_ASSIGN_PQ_ID_PATHS_END
 		default:
 			fatal("bad key type");
@@ -1083,17 +1271,67 @@ do_gen_all_hostkeys(struct passwd *pw)
 ///// OQS_TEMPLATE_FRAGMENT_ADD_PQ_KT_START
 		{ "oqsdefault", "OQSDEFAULT", _PATH_HOST_OQSDEFAULT_KEY_FILE },
 		{ "dilithium2", "DILITHIUM_2", _PATH_HOST_DILITHIUM_2_KEY_FILE },
+		{ "dilithium3", "DILITHIUM_3", _PATH_HOST_DILITHIUM_3_KEY_FILE },
+		{ "dilithium4", "DILITHIUM_4", _PATH_HOST_DILITHIUM_4_KEY_FILE },
 		{ "falcon512", "FALCON_512", _PATH_HOST_FALCON_512_KEY_FILE },
-		{ "mqdss3148", "MQDSS_31_48", _PATH_HOST_MQDSS_31_48_KEY_FILE },
+		{ "falcon1024", "FALCON_1024", _PATH_HOST_FALCON_1024_KEY_FILE },
 		{ "picnicl1fs", "PICNIC_L1FS", _PATH_HOST_PICNIC_L1FS_KEY_FILE },
+		{ "picnicl1ur", "PICNIC_L1UR", _PATH_HOST_PICNIC_L1UR_KEY_FILE },
+		{ "picnicl1full", "PICNIC_L1FULL", _PATH_HOST_PICNIC_L1FULL_KEY_FILE },
+		{ "picnicl3fs", "PICNIC_L3FS", _PATH_HOST_PICNIC_L3FS_KEY_FILE },
+		{ "picnicl3ur", "PICNIC_L3UR", _PATH_HOST_PICNIC_L3UR_KEY_FILE },
+		{ "picnicl3full", "PICNIC_L3FULL", _PATH_HOST_PICNIC_L3FULL_KEY_FILE },
+		{ "picnicl5fs", "PICNIC_L5FS", _PATH_HOST_PICNIC_L5FS_KEY_FILE },
+		{ "picnicl5ur", "PICNIC_L5UR", _PATH_HOST_PICNIC_L5UR_KEY_FILE },
+		{ "picnicl5full", "PICNIC_L5FULL", _PATH_HOST_PICNIC_L5FULL_KEY_FILE },
 		{ "picnic3l1", "PICNIC3_L1", _PATH_HOST_PICNIC3_L1_KEY_FILE },
-		{ "qteslapi", "QTESLA_P_I", _PATH_HOST_QTESLA_P_I_KEY_FILE },
+		{ "picnic3l3", "PICNIC3_L3", _PATH_HOST_PICNIC3_L3_KEY_FILE },
+		{ "picnic3l5", "PICNIC3_L5", _PATH_HOST_PICNIC3_L5_KEY_FILE },
 		{ "rainbowiaclassic", "RAINBOW_IA_CLASSIC", _PATH_HOST_RAINBOW_IA_CLASSIC_KEY_FILE },
+		{ "rainbowiacyclic", "RAINBOW_IA_CYCLIC", _PATH_HOST_RAINBOW_IA_CYCLIC_KEY_FILE },
+		{ "rainbowiacycliccompressed", "RAINBOW_IA_CYCLIC_COMPRESSED", _PATH_HOST_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE },
 		{ "rainbowiiicclassic", "RAINBOW_IIIC_CLASSIC", _PATH_HOST_RAINBOW_IIIC_CLASSIC_KEY_FILE },
+		{ "rainbowiiiccyclic", "RAINBOW_IIIC_CYCLIC", _PATH_HOST_RAINBOW_IIIC_CYCLIC_KEY_FILE },
+		{ "rainbowiiiccycliccompressed", "RAINBOW_IIIC_CYCLIC_COMPRESSED", _PATH_HOST_RAINBOW_IIIC_CYCLIC_COMPRESSED_KEY_FILE },
 		{ "rainbowvcclassic", "RAINBOW_VC_CLASSIC", _PATH_HOST_RAINBOW_VC_CLASSIC_KEY_FILE },
+		{ "rainbowvccyclic", "RAINBOW_VC_CYCLIC", _PATH_HOST_RAINBOW_VC_CYCLIC_KEY_FILE },
+		{ "rainbowvccycliccompressed", "RAINBOW_VC_CYCLIC_COMPRESSED", _PATH_HOST_RAINBOW_VC_CYCLIC_COMPRESSED_KEY_FILE },
 		{ "sphincsharaka128frobust", "SPHINCS_HARAKA_128F_ROBUST", _PATH_HOST_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE },
+		{ "sphincsharaka128fsimple", "SPHINCS_HARAKA_128F_SIMPLE", _PATH_HOST_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE },
+		{ "sphincsharaka128srobust", "SPHINCS_HARAKA_128S_ROBUST", _PATH_HOST_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE },
+		{ "sphincsharaka128ssimple", "SPHINCS_HARAKA_128S_SIMPLE", _PATH_HOST_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE },
+		{ "sphincsharaka192frobust", "SPHINCS_HARAKA_192F_ROBUST", _PATH_HOST_SPHINCS_HARAKA_192F_ROBUST_KEY_FILE },
+		{ "sphincsharaka192fsimple", "SPHINCS_HARAKA_192F_SIMPLE", _PATH_HOST_SPHINCS_HARAKA_192F_SIMPLE_KEY_FILE },
+		{ "sphincsharaka192srobust", "SPHINCS_HARAKA_192S_ROBUST", _PATH_HOST_SPHINCS_HARAKA_192S_ROBUST_KEY_FILE },
+		{ "sphincsharaka192ssimple", "SPHINCS_HARAKA_192S_SIMPLE", _PATH_HOST_SPHINCS_HARAKA_192S_SIMPLE_KEY_FILE },
+		{ "sphincsharaka256frobust", "SPHINCS_HARAKA_256F_ROBUST", _PATH_HOST_SPHINCS_HARAKA_256F_ROBUST_KEY_FILE },
+		{ "sphincsharaka256fsimple", "SPHINCS_HARAKA_256F_SIMPLE", _PATH_HOST_SPHINCS_HARAKA_256F_SIMPLE_KEY_FILE },
+		{ "sphincsharaka256srobust", "SPHINCS_HARAKA_256S_ROBUST", _PATH_HOST_SPHINCS_HARAKA_256S_ROBUST_KEY_FILE },
+		{ "sphincsharaka256ssimple", "SPHINCS_HARAKA_256S_SIMPLE", _PATH_HOST_SPHINCS_HARAKA_256S_SIMPLE_KEY_FILE },
 		{ "sphincssha256128frobust", "SPHINCS_SHA256_128F_ROBUST", _PATH_HOST_SPHINCS_SHA256_128F_ROBUST_KEY_FILE },
+		{ "sphincssha256128fsimple", "SPHINCS_SHA256_128F_SIMPLE", _PATH_HOST_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE },
+		{ "sphincssha256128srobust", "SPHINCS_SHA256_128S_ROBUST", _PATH_HOST_SPHINCS_SHA256_128S_ROBUST_KEY_FILE },
+		{ "sphincssha256128ssimple", "SPHINCS_SHA256_128S_SIMPLE", _PATH_HOST_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE },
+		{ "sphincssha256192frobust", "SPHINCS_SHA256_192F_ROBUST", _PATH_HOST_SPHINCS_SHA256_192F_ROBUST_KEY_FILE },
+		{ "sphincssha256192fsimple", "SPHINCS_SHA256_192F_SIMPLE", _PATH_HOST_SPHINCS_SHA256_192F_SIMPLE_KEY_FILE },
+		{ "sphincssha256192srobust", "SPHINCS_SHA256_192S_ROBUST", _PATH_HOST_SPHINCS_SHA256_192S_ROBUST_KEY_FILE },
+		{ "sphincssha256192ssimple", "SPHINCS_SHA256_192S_SIMPLE", _PATH_HOST_SPHINCS_SHA256_192S_SIMPLE_KEY_FILE },
+		{ "sphincssha256256frobust", "SPHINCS_SHA256_256F_ROBUST", _PATH_HOST_SPHINCS_SHA256_256F_ROBUST_KEY_FILE },
+		{ "sphincssha256256fsimple", "SPHINCS_SHA256_256F_SIMPLE", _PATH_HOST_SPHINCS_SHA256_256F_SIMPLE_KEY_FILE },
+		{ "sphincssha256256srobust", "SPHINCS_SHA256_256S_ROBUST", _PATH_HOST_SPHINCS_SHA256_256S_ROBUST_KEY_FILE },
+		{ "sphincssha256256ssimple", "SPHINCS_SHA256_256S_SIMPLE", _PATH_HOST_SPHINCS_SHA256_256S_SIMPLE_KEY_FILE },
 		{ "sphincsshake256128frobust", "SPHINCS_SHAKE256_128F_ROBUST", _PATH_HOST_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE },
+		{ "sphincsshake256128fsimple", "SPHINCS_SHAKE256_128F_SIMPLE", _PATH_HOST_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE },
+		{ "sphincsshake256128srobust", "SPHINCS_SHAKE256_128S_ROBUST", _PATH_HOST_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE },
+		{ "sphincsshake256128ssimple", "SPHINCS_SHAKE256_128S_SIMPLE", _PATH_HOST_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE },
+		{ "sphincsshake256192frobust", "SPHINCS_SHAKE256_192F_ROBUST", _PATH_HOST_SPHINCS_SHAKE256_192F_ROBUST_KEY_FILE },
+		{ "sphincsshake256192fsimple", "SPHINCS_SHAKE256_192F_SIMPLE", _PATH_HOST_SPHINCS_SHAKE256_192F_SIMPLE_KEY_FILE },
+		{ "sphincsshake256192srobust", "SPHINCS_SHAKE256_192S_ROBUST", _PATH_HOST_SPHINCS_SHAKE256_192S_ROBUST_KEY_FILE },
+		{ "sphincsshake256192ssimple", "SPHINCS_SHAKE256_192S_SIMPLE", _PATH_HOST_SPHINCS_SHAKE256_192S_SIMPLE_KEY_FILE },
+		{ "sphincsshake256256frobust", "SPHINCS_SHAKE256_256F_ROBUST", _PATH_HOST_SPHINCS_SHAKE256_256F_ROBUST_KEY_FILE },
+		{ "sphincsshake256256fsimple", "SPHINCS_SHAKE256_256F_SIMPLE", _PATH_HOST_SPHINCS_SHAKE256_256F_SIMPLE_KEY_FILE },
+		{ "sphincsshake256256srobust", "SPHINCS_SHAKE256_256S_ROBUST", _PATH_HOST_SPHINCS_SHAKE256_256S_ROBUST_KEY_FILE },
+		{ "sphincsshake256256ssimple", "SPHINCS_SHAKE256_256S_SIMPLE", _PATH_HOST_SPHINCS_SHAKE256_256S_SIMPLE_KEY_FILE },
 ///// OQS_TEMPLATE_FRAGMENT_ADD_PQ_KT_END
 #endif /* WITH_PQ_AUTH */
 #ifdef WITH_HYBRID_AUTH
@@ -1101,29 +1339,91 @@ do_gen_all_hostkeys(struct passwd *pw)
 #ifdef WITH_OPENSSL
 		{ "rsa3072_oqsdefault", "RSA3072_OQSDEFAULT", _PATH_HOST_RSA3072_OQSDEFAULT_KEY_FILE },
 		{ "rsa3072_dilithium2", "RSA3072_DILITHIUM_2", _PATH_HOST_RSA3072_DILITHIUM_2_KEY_FILE },
+		{ "rsa3072_dilithium3", "RSA3072_DILITHIUM_3", _PATH_HOST_RSA3072_DILITHIUM_3_KEY_FILE },
 		{ "rsa3072_falcon512", "RSA3072_FALCON_512", _PATH_HOST_RSA3072_FALCON_512_KEY_FILE },
-		{ "rsa3072_mqdss3148", "RSA3072_MQDSS_31_48", _PATH_HOST_RSA3072_MQDSS_31_48_KEY_FILE },
 		{ "rsa3072_picnicl1fs", "RSA3072_PICNIC_L1FS", _PATH_HOST_RSA3072_PICNIC_L1FS_KEY_FILE },
+		{ "rsa3072_picnicl1ur", "RSA3072_PICNIC_L1UR", _PATH_HOST_RSA3072_PICNIC_L1UR_KEY_FILE },
+		{ "rsa3072_picnicl1full", "RSA3072_PICNIC_L1FULL", _PATH_HOST_RSA3072_PICNIC_L1FULL_KEY_FILE },
 		{ "rsa3072_picnic3l1", "RSA3072_PICNIC3_L1", _PATH_HOST_RSA3072_PICNIC3_L1_KEY_FILE },
-		{ "rsa3072_qteslapi", "RSA3072_QTESLA_P_I", _PATH_HOST_RSA3072_QTESLA_P_I_KEY_FILE },
 		{ "rsa3072_rainbowiaclassic", "RSA3072_RAINBOW_IA_CLASSIC", _PATH_HOST_RSA3072_RAINBOW_IA_CLASSIC_KEY_FILE },
+		{ "rsa3072_rainbowiacyclic", "RSA3072_RAINBOW_IA_CYCLIC", _PATH_HOST_RSA3072_RAINBOW_IA_CYCLIC_KEY_FILE },
+		{ "rsa3072_rainbowiacycliccompressed", "RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED", _PATH_HOST_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE },
 		{ "rsa3072_sphincsharaka128frobust", "RSA3072_SPHINCS_HARAKA_128F_ROBUST", _PATH_HOST_RSA3072_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE },
+		{ "rsa3072_sphincsharaka128fsimple", "RSA3072_SPHINCS_HARAKA_128F_SIMPLE", _PATH_HOST_RSA3072_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE },
+		{ "rsa3072_sphincsharaka128srobust", "RSA3072_SPHINCS_HARAKA_128S_ROBUST", _PATH_HOST_RSA3072_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE },
+		{ "rsa3072_sphincsharaka128ssimple", "RSA3072_SPHINCS_HARAKA_128S_SIMPLE", _PATH_HOST_RSA3072_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE },
 		{ "rsa3072_sphincssha256128frobust", "RSA3072_SPHINCS_SHA256_128F_ROBUST", _PATH_HOST_RSA3072_SPHINCS_SHA256_128F_ROBUST_KEY_FILE },
+		{ "rsa3072_sphincssha256128fsimple", "RSA3072_SPHINCS_SHA256_128F_SIMPLE", _PATH_HOST_RSA3072_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE },
+		{ "rsa3072_sphincssha256128srobust", "RSA3072_SPHINCS_SHA256_128S_ROBUST", _PATH_HOST_RSA3072_SPHINCS_SHA256_128S_ROBUST_KEY_FILE },
+		{ "rsa3072_sphincssha256128ssimple", "RSA3072_SPHINCS_SHA256_128S_SIMPLE", _PATH_HOST_RSA3072_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE },
 		{ "rsa3072_sphincsshake256128frobust", "RSA3072_SPHINCS_SHAKE256_128F_ROBUST", _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE },
+		{ "rsa3072_sphincsshake256128fsimple", "RSA3072_SPHINCS_SHAKE256_128F_SIMPLE", _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE },
+		{ "rsa3072_sphincsshake256128srobust", "RSA3072_SPHINCS_SHAKE256_128S_ROBUST", _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE },
+		{ "rsa3072_sphincsshake256128ssimple", "RSA3072_SPHINCS_SHAKE256_128S_SIMPLE", _PATH_HOST_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE },
 #ifdef OPENSSL_HAS_ECC
 		{ "p256_oqsdefault", "P256_OQSDEFAULT", _PATH_HOST_P256_OQSDEFAULT_KEY_FILE },
 		{ "p256_dilithium2", "P256_DILITHIUM_2", _PATH_HOST_P256_DILITHIUM_2_KEY_FILE },
+		{ "p256_dilithium3", "P256_DILITHIUM_3", _PATH_HOST_P256_DILITHIUM_3_KEY_FILE },
+		{ "p384_dilithium4", "P384_DILITHIUM_4", _PATH_HOST_P384_DILITHIUM_4_KEY_FILE },
 		{ "p256_falcon512", "P256_FALCON_512", _PATH_HOST_P256_FALCON_512_KEY_FILE },
-		{ "p256_mqdss3148", "P256_MQDSS_31_48", _PATH_HOST_P256_MQDSS_31_48_KEY_FILE },
+		{ "p521_falcon1024", "P521_FALCON_1024", _PATH_HOST_P521_FALCON_1024_KEY_FILE },
 		{ "p256_picnicl1fs", "P256_PICNIC_L1FS", _PATH_HOST_P256_PICNIC_L1FS_KEY_FILE },
+		{ "p256_picnicl1ur", "P256_PICNIC_L1UR", _PATH_HOST_P256_PICNIC_L1UR_KEY_FILE },
+		{ "p256_picnicl1full", "P256_PICNIC_L1FULL", _PATH_HOST_P256_PICNIC_L1FULL_KEY_FILE },
+		{ "p384_picnicl3fs", "P384_PICNIC_L3FS", _PATH_HOST_P384_PICNIC_L3FS_KEY_FILE },
+		{ "p384_picnicl3ur", "P384_PICNIC_L3UR", _PATH_HOST_P384_PICNIC_L3UR_KEY_FILE },
+		{ "p384_picnicl3full", "P384_PICNIC_L3FULL", _PATH_HOST_P384_PICNIC_L3FULL_KEY_FILE },
+		{ "p521_picnicl5fs", "P521_PICNIC_L5FS", _PATH_HOST_P521_PICNIC_L5FS_KEY_FILE },
+		{ "p521_picnicl5ur", "P521_PICNIC_L5UR", _PATH_HOST_P521_PICNIC_L5UR_KEY_FILE },
+		{ "p521_picnicl5full", "P521_PICNIC_L5FULL", _PATH_HOST_P521_PICNIC_L5FULL_KEY_FILE },
 		{ "p256_picnic3l1", "P256_PICNIC3_L1", _PATH_HOST_P256_PICNIC3_L1_KEY_FILE },
-		{ "p256_qteslapi", "P256_QTESLA_P_I", _PATH_HOST_P256_QTESLA_P_I_KEY_FILE },
+		{ "p384_picnic3l3", "P384_PICNIC3_L3", _PATH_HOST_P384_PICNIC3_L3_KEY_FILE },
+		{ "p521_picnic3l5", "P521_PICNIC3_L5", _PATH_HOST_P521_PICNIC3_L5_KEY_FILE },
 		{ "p256_rainbowiaclassic", "P256_RAINBOW_IA_CLASSIC", _PATH_HOST_P256_RAINBOW_IA_CLASSIC_KEY_FILE },
+		{ "p256_rainbowiacyclic", "P256_RAINBOW_IA_CYCLIC", _PATH_HOST_P256_RAINBOW_IA_CYCLIC_KEY_FILE },
+		{ "p256_rainbowiacycliccompressed", "P256_RAINBOW_IA_CYCLIC_COMPRESSED", _PATH_HOST_P256_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE },
 		{ "p384_rainbowiiicclassic", "P384_RAINBOW_IIIC_CLASSIC", _PATH_HOST_P384_RAINBOW_IIIC_CLASSIC_KEY_FILE },
+		{ "p384_rainbowiiiccyclic", "P384_RAINBOW_IIIC_CYCLIC", _PATH_HOST_P384_RAINBOW_IIIC_CYCLIC_KEY_FILE },
+		{ "p384_rainbowiiiccycliccompressed", "P384_RAINBOW_IIIC_CYCLIC_COMPRESSED", _PATH_HOST_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED_KEY_FILE },
 		{ "p521_rainbowvcclassic", "P521_RAINBOW_VC_CLASSIC", _PATH_HOST_P521_RAINBOW_VC_CLASSIC_KEY_FILE },
+		{ "p521_rainbowvccyclic", "P521_RAINBOW_VC_CYCLIC", _PATH_HOST_P521_RAINBOW_VC_CYCLIC_KEY_FILE },
+		{ "p521_rainbowvccycliccompressed", "P521_RAINBOW_VC_CYCLIC_COMPRESSED", _PATH_HOST_P521_RAINBOW_VC_CYCLIC_COMPRESSED_KEY_FILE },
 		{ "p256_sphincsharaka128frobust", "P256_SPHINCS_HARAKA_128F_ROBUST", _PATH_HOST_P256_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE },
+		{ "p256_sphincsharaka128fsimple", "P256_SPHINCS_HARAKA_128F_SIMPLE", _PATH_HOST_P256_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE },
+		{ "p256_sphincsharaka128srobust", "P256_SPHINCS_HARAKA_128S_ROBUST", _PATH_HOST_P256_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE },
+		{ "p256_sphincsharaka128ssimple", "P256_SPHINCS_HARAKA_128S_SIMPLE", _PATH_HOST_P256_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE },
+		{ "p384_sphincsharaka192frobust", "P384_SPHINCS_HARAKA_192F_ROBUST", _PATH_HOST_P384_SPHINCS_HARAKA_192F_ROBUST_KEY_FILE },
+		{ "p384_sphincsharaka192fsimple", "P384_SPHINCS_HARAKA_192F_SIMPLE", _PATH_HOST_P384_SPHINCS_HARAKA_192F_SIMPLE_KEY_FILE },
+		{ "p384_sphincsharaka192srobust", "P384_SPHINCS_HARAKA_192S_ROBUST", _PATH_HOST_P384_SPHINCS_HARAKA_192S_ROBUST_KEY_FILE },
+		{ "p384_sphincsharaka192ssimple", "P384_SPHINCS_HARAKA_192S_SIMPLE", _PATH_HOST_P384_SPHINCS_HARAKA_192S_SIMPLE_KEY_FILE },
+		{ "p521_sphincsharaka256frobust", "P521_SPHINCS_HARAKA_256F_ROBUST", _PATH_HOST_P521_SPHINCS_HARAKA_256F_ROBUST_KEY_FILE },
+		{ "p521_sphincsharaka256fsimple", "P521_SPHINCS_HARAKA_256F_SIMPLE", _PATH_HOST_P521_SPHINCS_HARAKA_256F_SIMPLE_KEY_FILE },
+		{ "p521_sphincsharaka256srobust", "P521_SPHINCS_HARAKA_256S_ROBUST", _PATH_HOST_P521_SPHINCS_HARAKA_256S_ROBUST_KEY_FILE },
+		{ "p521_sphincsharaka256ssimple", "P521_SPHINCS_HARAKA_256S_SIMPLE", _PATH_HOST_P521_SPHINCS_HARAKA_256S_SIMPLE_KEY_FILE },
 		{ "p256_sphincssha256128frobust", "P256_SPHINCS_SHA256_128F_ROBUST", _PATH_HOST_P256_SPHINCS_SHA256_128F_ROBUST_KEY_FILE },
+		{ "p256_sphincssha256128fsimple", "P256_SPHINCS_SHA256_128F_SIMPLE", _PATH_HOST_P256_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE },
+		{ "p256_sphincssha256128srobust", "P256_SPHINCS_SHA256_128S_ROBUST", _PATH_HOST_P256_SPHINCS_SHA256_128S_ROBUST_KEY_FILE },
+		{ "p256_sphincssha256128ssimple", "P256_SPHINCS_SHA256_128S_SIMPLE", _PATH_HOST_P256_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE },
+		{ "p384_sphincssha256192frobust", "P384_SPHINCS_SHA256_192F_ROBUST", _PATH_HOST_P384_SPHINCS_SHA256_192F_ROBUST_KEY_FILE },
+		{ "p384_sphincssha256192fsimple", "P384_SPHINCS_SHA256_192F_SIMPLE", _PATH_HOST_P384_SPHINCS_SHA256_192F_SIMPLE_KEY_FILE },
+		{ "p384_sphincssha256192srobust", "P384_SPHINCS_SHA256_192S_ROBUST", _PATH_HOST_P384_SPHINCS_SHA256_192S_ROBUST_KEY_FILE },
+		{ "p384_sphincssha256192ssimple", "P384_SPHINCS_SHA256_192S_SIMPLE", _PATH_HOST_P384_SPHINCS_SHA256_192S_SIMPLE_KEY_FILE },
+		{ "p521_sphincssha256256frobust", "P521_SPHINCS_SHA256_256F_ROBUST", _PATH_HOST_P521_SPHINCS_SHA256_256F_ROBUST_KEY_FILE },
+		{ "p521_sphincssha256256fsimple", "P521_SPHINCS_SHA256_256F_SIMPLE", _PATH_HOST_P521_SPHINCS_SHA256_256F_SIMPLE_KEY_FILE },
+		{ "p521_sphincssha256256srobust", "P521_SPHINCS_SHA256_256S_ROBUST", _PATH_HOST_P521_SPHINCS_SHA256_256S_ROBUST_KEY_FILE },
+		{ "p521_sphincssha256256ssimple", "P521_SPHINCS_SHA256_256S_SIMPLE", _PATH_HOST_P521_SPHINCS_SHA256_256S_SIMPLE_KEY_FILE },
 		{ "p256_sphincsshake256128frobust", "P256_SPHINCS_SHAKE256_128F_ROBUST", _PATH_HOST_P256_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE },
+		{ "p256_sphincsshake256128fsimple", "P256_SPHINCS_SHAKE256_128F_SIMPLE", _PATH_HOST_P256_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE },
+		{ "p256_sphincsshake256128srobust", "P256_SPHINCS_SHAKE256_128S_ROBUST", _PATH_HOST_P256_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE },
+		{ "p256_sphincsshake256128ssimple", "P256_SPHINCS_SHAKE256_128S_SIMPLE", _PATH_HOST_P256_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE },
+		{ "p384_sphincsshake256192frobust", "P384_SPHINCS_SHAKE256_192F_ROBUST", _PATH_HOST_P384_SPHINCS_SHAKE256_192F_ROBUST_KEY_FILE },
+		{ "p384_sphincsshake256192fsimple", "P384_SPHINCS_SHAKE256_192F_SIMPLE", _PATH_HOST_P384_SPHINCS_SHAKE256_192F_SIMPLE_KEY_FILE },
+		{ "p384_sphincsshake256192srobust", "P384_SPHINCS_SHAKE256_192S_ROBUST", _PATH_HOST_P384_SPHINCS_SHAKE256_192S_ROBUST_KEY_FILE },
+		{ "p384_sphincsshake256192ssimple", "P384_SPHINCS_SHAKE256_192S_SIMPLE", _PATH_HOST_P384_SPHINCS_SHAKE256_192S_SIMPLE_KEY_FILE },
+		{ "p521_sphincsshake256256frobust", "P521_SPHINCS_SHAKE256_256F_ROBUST", _PATH_HOST_P521_SPHINCS_SHAKE256_256F_ROBUST_KEY_FILE },
+		{ "p521_sphincsshake256256fsimple", "P521_SPHINCS_SHAKE256_256F_SIMPLE", _PATH_HOST_P521_SPHINCS_SHAKE256_256F_SIMPLE_KEY_FILE },
+		{ "p521_sphincsshake256256srobust", "P521_SPHINCS_SHAKE256_256S_ROBUST", _PATH_HOST_P521_SPHINCS_SHAKE256_256S_ROBUST_KEY_FILE },
+		{ "p521_sphincsshake256256ssimple", "P521_SPHINCS_SHAKE256_256S_SIMPLE", _PATH_HOST_P521_SPHINCS_SHAKE256_256S_SIMPLE_KEY_FILE },
 #endif /* OPENSSL_HAS_ECC */
 #endif /* WITH_OPENSSL */
 ///// OQS_TEMPLATE_FRAGMENT_ADD_HYBRID_KT_END
@@ -2892,27 +3192,127 @@ main(int argc, char **argv)
 			n += do_print_resource_record(pw,
                  _PATH_HOST_DILITHIUM_2_KEY_FILE, rr_hostname);
 			n += do_print_resource_record(pw,
+                 _PATH_HOST_DILITHIUM_3_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_DILITHIUM_4_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
                  _PATH_HOST_FALCON_512_KEY_FILE, rr_hostname);
 			n += do_print_resource_record(pw,
-                 _PATH_HOST_MQDSS_31_48_KEY_FILE, rr_hostname);
+                 _PATH_HOST_FALCON_1024_KEY_FILE, rr_hostname);
 			n += do_print_resource_record(pw,
                  _PATH_HOST_PICNIC_L1FS_KEY_FILE, rr_hostname);
 			n += do_print_resource_record(pw,
+                 _PATH_HOST_PICNIC_L1UR_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_PICNIC_L1FULL_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_PICNIC_L3FS_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_PICNIC_L3UR_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_PICNIC_L3FULL_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_PICNIC_L5FS_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_PICNIC_L5UR_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_PICNIC_L5FULL_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
                  _PATH_HOST_PICNIC3_L1_KEY_FILE, rr_hostname);
 			n += do_print_resource_record(pw,
-                 _PATH_HOST_QTESLA_P_I_KEY_FILE, rr_hostname);
+                 _PATH_HOST_PICNIC3_L3_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_PICNIC3_L5_KEY_FILE, rr_hostname);
 			n += do_print_resource_record(pw,
                  _PATH_HOST_RAINBOW_IA_CLASSIC_KEY_FILE, rr_hostname);
 			n += do_print_resource_record(pw,
+                 _PATH_HOST_RAINBOW_IA_CYCLIC_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
                  _PATH_HOST_RAINBOW_IIIC_CLASSIC_KEY_FILE, rr_hostname);
 			n += do_print_resource_record(pw,
+                 _PATH_HOST_RAINBOW_IIIC_CYCLIC_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_RAINBOW_IIIC_CYCLIC_COMPRESSED_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
                  _PATH_HOST_RAINBOW_VC_CLASSIC_KEY_FILE, rr_hostname);
 			n += do_print_resource_record(pw,
+                 _PATH_HOST_RAINBOW_VC_CYCLIC_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_RAINBOW_VC_CYCLIC_COMPRESSED_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
                  _PATH_HOST_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE, rr_hostname);
 			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_HARAKA_192F_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_HARAKA_192F_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_HARAKA_192S_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_HARAKA_192S_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_HARAKA_256F_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_HARAKA_256F_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_HARAKA_256S_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_HARAKA_256S_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
                  _PATH_HOST_SPHINCS_SHA256_128F_ROBUST_KEY_FILE, rr_hostname);
 			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHA256_128S_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHA256_192F_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHA256_192F_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHA256_192S_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHA256_192S_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHA256_256F_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHA256_256F_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHA256_256S_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHA256_256S_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
                  _PATH_HOST_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHAKE256_192F_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHAKE256_192F_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHAKE256_192S_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHAKE256_192S_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHAKE256_256F_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHAKE256_256F_SIMPLE_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHAKE256_256S_ROBUST_KEY_FILE, rr_hostname);
+			n += do_print_resource_record(pw,
+                 _PATH_HOST_SPHINCS_SHAKE256_256S_SIMPLE_KEY_FILE, rr_hostname);
 ///// OQS_TEMPLATE_FRAGMENT_PRINT_PQ_RR_END
 
 			if (n == 0)
diff --git a/ssh-keyscan.c b/ssh-keyscan.c
index 1630d10b..32ca2992 100644
--- a/ssh-keyscan.c
+++ b/ssh-keyscan.c
@@ -62,44 +62,156 @@ int ssh_port = SSH_DEFAULT_PORT;
 ///// OQS_TEMPLATE_FRAGMENT_ASSIGN_KT_MARKERS_START
 #define KT_OQSDEFAULT ((uint64_t)1<<5)
 #define KT_DILITHIUM_2 ((uint64_t)1<<6)
-#define KT_FALCON_512 ((uint64_t)1<<7)
-#define KT_MQDSS_31_48 ((uint64_t)1<<8)
-#define KT_PICNIC_L1FS ((uint64_t)1<<9)
-#define KT_PICNIC3_L1 ((uint64_t)1<<10)
-#define KT_QTESLA_P_I ((uint64_t)1<<11)
-#define KT_RAINBOW_IA_CLASSIC ((uint64_t)1<<12)
-#define KT_RAINBOW_IIIC_CLASSIC ((uint64_t)1<<13)
-#define KT_RAINBOW_VC_CLASSIC ((uint64_t)1<<14)
-#define KT_SPHINCS_HARAKA_128F_ROBUST ((uint64_t)1<<15)
-#define KT_SPHINCS_SHA256_128F_ROBUST ((uint64_t)1<<16)
-#define KT_SPHINCS_SHAKE256_128F_ROBUST ((uint64_t)1<<17)
-#define KT_RSA3072_OQSDEFAULT ((uint64_t)1<<18)
-#define KT_P256_OQSDEFAULT ((uint64_t)1<<19)
-#define KT_RSA3072_DILITHIUM_2 ((uint64_t)1<<20)
-#define KT_P256_DILITHIUM_2 ((uint64_t)1<<21)
-#define KT_RSA3072_FALCON_512 ((uint64_t)1<<22)
-#define KT_P256_FALCON_512 ((uint64_t)1<<23)
-#define KT_RSA3072_MQDSS_31_48 ((uint64_t)1<<24)
-#define KT_P256_MQDSS_31_48 ((uint64_t)1<<25)
-#define KT_RSA3072_PICNIC_L1FS ((uint64_t)1<<26)
-#define KT_P256_PICNIC_L1FS ((uint64_t)1<<27)
-#define KT_RSA3072_PICNIC3_L1 ((uint64_t)1<<28)
-#define KT_P256_PICNIC3_L1 ((uint64_t)1<<29)
-#define KT_RSA3072_QTESLA_P_I ((uint64_t)1<<30)
-#define KT_P256_QTESLA_P_I ((uint64_t)1<<31)
-#define KT_RSA3072_RAINBOW_IA_CLASSIC ((uint64_t)1<<32)
-#define KT_P256_RAINBOW_IA_CLASSIC ((uint64_t)1<<33)
-#define KT_P384_RAINBOW_IIIC_CLASSIC ((uint64_t)1<<34)
-#define KT_P521_RAINBOW_VC_CLASSIC ((uint64_t)1<<35)
-#define KT_RSA3072_SPHINCS_HARAKA_128F_ROBUST ((uint64_t)1<<36)
-#define KT_P256_SPHINCS_HARAKA_128F_ROBUST ((uint64_t)1<<37)
-#define KT_RSA3072_SPHINCS_SHA256_128F_ROBUST ((uint64_t)1<<38)
-#define KT_P256_SPHINCS_SHA256_128F_ROBUST ((uint64_t)1<<39)
-#define KT_RSA3072_SPHINCS_SHAKE256_128F_ROBUST ((uint64_t)1<<40)
-#define KT_P256_SPHINCS_SHAKE256_128F_ROBUST ((uint64_t)1<<41)
+#define KT_DILITHIUM_3 ((uint64_t)1<<7)
+#define KT_DILITHIUM_4 ((uint64_t)1<<8)
+#define KT_FALCON_512 ((uint64_t)1<<9)
+#define KT_FALCON_1024 ((uint64_t)1<<10)
+#define KT_PICNIC_L1FS ((uint64_t)1<<11)
+#define KT_PICNIC_L1UR ((uint64_t)1<<12)
+#define KT_PICNIC_L1FULL ((uint64_t)1<<13)
+#define KT_PICNIC_L3FS ((uint64_t)1<<14)
+#define KT_PICNIC_L3UR ((uint64_t)1<<15)
+#define KT_PICNIC_L3FULL ((uint64_t)1<<16)
+#define KT_PICNIC_L5FS ((uint64_t)1<<17)
+#define KT_PICNIC_L5UR ((uint64_t)1<<18)
+#define KT_PICNIC_L5FULL ((uint64_t)1<<19)
+#define KT_PICNIC3_L1 ((uint64_t)1<<20)
+#define KT_PICNIC3_L3 ((uint64_t)1<<21)
+#define KT_PICNIC3_L5 ((uint64_t)1<<22)
+#define KT_RAINBOW_IA_CLASSIC ((uint64_t)1<<23)
+#define KT_RAINBOW_IA_CYCLIC ((uint64_t)1<<24)
+#define KT_RAINBOW_IA_CYCLIC_COMPRESSED ((uint64_t)1<<25)
+#define KT_RAINBOW_IIIC_CLASSIC ((uint64_t)1<<26)
+#define KT_RAINBOW_IIIC_CYCLIC ((uint64_t)1<<27)
+#define KT_RAINBOW_IIIC_CYCLIC_COMPRESSED ((uint64_t)1<<28)
+#define KT_RAINBOW_VC_CLASSIC ((uint64_t)1<<29)
+#define KT_RAINBOW_VC_CYCLIC ((uint64_t)1<<30)
+#define KT_RAINBOW_VC_CYCLIC_COMPRESSED ((uint64_t)1<<31)
+#define KT_SPHINCS_HARAKA_128F_ROBUST ((uint64_t)1<<32)
+#define KT_SPHINCS_HARAKA_128F_SIMPLE ((uint64_t)1<<33)
+#define KT_SPHINCS_HARAKA_128S_ROBUST ((uint64_t)1<<34)
+#define KT_SPHINCS_HARAKA_128S_SIMPLE ((uint64_t)1<<35)
+#define KT_SPHINCS_HARAKA_192F_ROBUST ((uint64_t)1<<36)
+#define KT_SPHINCS_HARAKA_192F_SIMPLE ((uint64_t)1<<37)
+#define KT_SPHINCS_HARAKA_192S_ROBUST ((uint64_t)1<<38)
+#define KT_SPHINCS_HARAKA_192S_SIMPLE ((uint64_t)1<<39)
+#define KT_SPHINCS_HARAKA_256F_ROBUST ((uint64_t)1<<40)
+#define KT_SPHINCS_HARAKA_256F_SIMPLE ((uint64_t)1<<41)
+#define KT_SPHINCS_HARAKA_256S_ROBUST ((uint64_t)1<<42)
+#define KT_SPHINCS_HARAKA_256S_SIMPLE ((uint64_t)1<<43)
+#define KT_SPHINCS_SHA256_128F_ROBUST ((uint64_t)1<<44)
+#define KT_SPHINCS_SHA256_128F_SIMPLE ((uint64_t)1<<45)
+#define KT_SPHINCS_SHA256_128S_ROBUST ((uint64_t)1<<46)
+#define KT_SPHINCS_SHA256_128S_SIMPLE ((uint64_t)1<<47)
+#define KT_SPHINCS_SHA256_192F_ROBUST ((uint64_t)1<<48)
+#define KT_SPHINCS_SHA256_192F_SIMPLE ((uint64_t)1<<49)
+#define KT_SPHINCS_SHA256_192S_ROBUST ((uint64_t)1<<50)
+#define KT_SPHINCS_SHA256_192S_SIMPLE ((uint64_t)1<<51)
+#define KT_SPHINCS_SHA256_256F_ROBUST ((uint64_t)1<<52)
+#define KT_SPHINCS_SHA256_256F_SIMPLE ((uint64_t)1<<53)
+#define KT_SPHINCS_SHA256_256S_ROBUST ((uint64_t)1<<54)
+#define KT_SPHINCS_SHA256_256S_SIMPLE ((uint64_t)1<<55)
+#define KT_SPHINCS_SHAKE256_128F_ROBUST ((uint64_t)1<<56)
+#define KT_SPHINCS_SHAKE256_128F_SIMPLE ((uint64_t)1<<57)
+#define KT_SPHINCS_SHAKE256_128S_ROBUST ((uint64_t)1<<58)
+#define KT_SPHINCS_SHAKE256_128S_SIMPLE ((uint64_t)1<<59)
+#define KT_SPHINCS_SHAKE256_192F_ROBUST ((uint64_t)1<<60)
+#define KT_SPHINCS_SHAKE256_192F_SIMPLE ((uint64_t)1<<61)
+#define KT_SPHINCS_SHAKE256_192S_ROBUST ((uint64_t)1<<62)
+#define KT_SPHINCS_SHAKE256_192S_SIMPLE ((uint64_t)1<<63)
+#define KT_SPHINCS_SHAKE256_256F_ROBUST ((uint64_t)1<<64)
+#define KT_SPHINCS_SHAKE256_256F_SIMPLE ((uint64_t)1<<65)
+#define KT_SPHINCS_SHAKE256_256S_ROBUST ((uint64_t)1<<66)
+#define KT_SPHINCS_SHAKE256_256S_SIMPLE ((uint64_t)1<<67)
+#define KT_RSA3072_OQSDEFAULT ((uint64_t)1<<68)
+#define KT_P256_OQSDEFAULT ((uint64_t)1<<69)
+#define KT_RSA3072_DILITHIUM_2 ((uint64_t)1<<70)
+#define KT_P256_DILITHIUM_2 ((uint64_t)1<<71)
+#define KT_RSA3072_DILITHIUM_3 ((uint64_t)1<<72)
+#define KT_P256_DILITHIUM_3 ((uint64_t)1<<73)
+#define KT_P384_DILITHIUM_4 ((uint64_t)1<<74)
+#define KT_RSA3072_FALCON_512 ((uint64_t)1<<75)
+#define KT_P256_FALCON_512 ((uint64_t)1<<76)
+#define KT_P521_FALCON_1024 ((uint64_t)1<<77)
+#define KT_RSA3072_PICNIC_L1FS ((uint64_t)1<<78)
+#define KT_P256_PICNIC_L1FS ((uint64_t)1<<79)
+#define KT_RSA3072_PICNIC_L1UR ((uint64_t)1<<80)
+#define KT_P256_PICNIC_L1UR ((uint64_t)1<<81)
+#define KT_RSA3072_PICNIC_L1FULL ((uint64_t)1<<82)
+#define KT_P256_PICNIC_L1FULL ((uint64_t)1<<83)
+#define KT_P384_PICNIC_L3FS ((uint64_t)1<<84)
+#define KT_P384_PICNIC_L3UR ((uint64_t)1<<85)
+#define KT_P384_PICNIC_L3FULL ((uint64_t)1<<86)
+#define KT_P521_PICNIC_L5FS ((uint64_t)1<<87)
+#define KT_P521_PICNIC_L5UR ((uint64_t)1<<88)
+#define KT_P521_PICNIC_L5FULL ((uint64_t)1<<89)
+#define KT_RSA3072_PICNIC3_L1 ((uint64_t)1<<90)
+#define KT_P256_PICNIC3_L1 ((uint64_t)1<<91)
+#define KT_P384_PICNIC3_L3 ((uint64_t)1<<92)
+#define KT_P521_PICNIC3_L5 ((uint64_t)1<<93)
+#define KT_RSA3072_RAINBOW_IA_CLASSIC ((uint64_t)1<<94)
+#define KT_P256_RAINBOW_IA_CLASSIC ((uint64_t)1<<95)
+#define KT_RSA3072_RAINBOW_IA_CYCLIC ((uint64_t)1<<96)
+#define KT_P256_RAINBOW_IA_CYCLIC ((uint64_t)1<<97)
+#define KT_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED ((uint64_t)1<<98)
+#define KT_P256_RAINBOW_IA_CYCLIC_COMPRESSED ((uint64_t)1<<99)
+#define KT_P384_RAINBOW_IIIC_CLASSIC ((uint64_t)1<<100)
+#define KT_P384_RAINBOW_IIIC_CYCLIC ((uint64_t)1<<101)
+#define KT_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED ((uint64_t)1<<102)
+#define KT_P521_RAINBOW_VC_CLASSIC ((uint64_t)1<<103)
+#define KT_P521_RAINBOW_VC_CYCLIC ((uint64_t)1<<104)
+#define KT_P521_RAINBOW_VC_CYCLIC_COMPRESSED ((uint64_t)1<<105)
+#define KT_RSA3072_SPHINCS_HARAKA_128F_ROBUST ((uint64_t)1<<106)
+#define KT_P256_SPHINCS_HARAKA_128F_ROBUST ((uint64_t)1<<107)
+#define KT_RSA3072_SPHINCS_HARAKA_128F_SIMPLE ((uint64_t)1<<108)
+#define KT_P256_SPHINCS_HARAKA_128F_SIMPLE ((uint64_t)1<<109)
+#define KT_RSA3072_SPHINCS_HARAKA_128S_ROBUST ((uint64_t)1<<110)
+#define KT_P256_SPHINCS_HARAKA_128S_ROBUST ((uint64_t)1<<111)
+#define KT_RSA3072_SPHINCS_HARAKA_128S_SIMPLE ((uint64_t)1<<112)
+#define KT_P256_SPHINCS_HARAKA_128S_SIMPLE ((uint64_t)1<<113)
+#define KT_P384_SPHINCS_HARAKA_192F_ROBUST ((uint64_t)1<<114)
+#define KT_P384_SPHINCS_HARAKA_192F_SIMPLE ((uint64_t)1<<115)
+#define KT_P384_SPHINCS_HARAKA_192S_ROBUST ((uint64_t)1<<116)
+#define KT_P384_SPHINCS_HARAKA_192S_SIMPLE ((uint64_t)1<<117)
+#define KT_P521_SPHINCS_HARAKA_256F_ROBUST ((uint64_t)1<<118)
+#define KT_P521_SPHINCS_HARAKA_256F_SIMPLE ((uint64_t)1<<119)
+#define KT_P521_SPHINCS_HARAKA_256S_ROBUST ((uint64_t)1<<120)
+#define KT_P521_SPHINCS_HARAKA_256S_SIMPLE ((uint64_t)1<<121)
+#define KT_RSA3072_SPHINCS_SHA256_128F_ROBUST ((uint64_t)1<<122)
+#define KT_P256_SPHINCS_SHA256_128F_ROBUST ((uint64_t)1<<123)
+#define KT_RSA3072_SPHINCS_SHA256_128F_SIMPLE ((uint64_t)1<<124)
+#define KT_P256_SPHINCS_SHA256_128F_SIMPLE ((uint64_t)1<<125)
+#define KT_RSA3072_SPHINCS_SHA256_128S_ROBUST ((uint64_t)1<<126)
+#define KT_P256_SPHINCS_SHA256_128S_ROBUST ((uint64_t)1<<127)
+#define KT_RSA3072_SPHINCS_SHA256_128S_SIMPLE ((uint64_t)1<<128)
+#define KT_P256_SPHINCS_SHA256_128S_SIMPLE ((uint64_t)1<<129)
+#define KT_P384_SPHINCS_SHA256_192F_ROBUST ((uint64_t)1<<130)
+#define KT_P384_SPHINCS_SHA256_192F_SIMPLE ((uint64_t)1<<131)
+#define KT_P384_SPHINCS_SHA256_192S_ROBUST ((uint64_t)1<<132)
+#define KT_P384_SPHINCS_SHA256_192S_SIMPLE ((uint64_t)1<<133)
+#define KT_P521_SPHINCS_SHA256_256F_ROBUST ((uint64_t)1<<134)
+#define KT_P521_SPHINCS_SHA256_256F_SIMPLE ((uint64_t)1<<135)
+#define KT_P521_SPHINCS_SHA256_256S_ROBUST ((uint64_t)1<<136)
+#define KT_P521_SPHINCS_SHA256_256S_SIMPLE ((uint64_t)1<<137)
+#define KT_RSA3072_SPHINCS_SHAKE256_128F_ROBUST ((uint64_t)1<<138)
+#define KT_P256_SPHINCS_SHAKE256_128F_ROBUST ((uint64_t)1<<139)
+#define KT_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE ((uint64_t)1<<140)
+#define KT_P256_SPHINCS_SHAKE256_128F_SIMPLE ((uint64_t)1<<141)
+#define KT_RSA3072_SPHINCS_SHAKE256_128S_ROBUST ((uint64_t)1<<142)
+#define KT_P256_SPHINCS_SHAKE256_128S_ROBUST ((uint64_t)1<<143)
+#define KT_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE ((uint64_t)1<<144)
+#define KT_P256_SPHINCS_SHAKE256_128S_SIMPLE ((uint64_t)1<<145)
+#define KT_P384_SPHINCS_SHAKE256_192F_ROBUST ((uint64_t)1<<146)
+#define KT_P384_SPHINCS_SHAKE256_192F_SIMPLE ((uint64_t)1<<147)
+#define KT_P384_SPHINCS_SHAKE256_192S_ROBUST ((uint64_t)1<<148)
+#define KT_P384_SPHINCS_SHAKE256_192S_SIMPLE ((uint64_t)1<<149)
+#define KT_P521_SPHINCS_SHAKE256_256F_ROBUST ((uint64_t)1<<150)
+#define KT_P521_SPHINCS_SHAKE256_256F_SIMPLE ((uint64_t)1<<151)
+#define KT_P521_SPHINCS_SHAKE256_256S_ROBUST ((uint64_t)1<<152)
+#define KT_P521_SPHINCS_SHAKE256_256S_SIMPLE ((uint64_t)1<<153)
 
 #define KT_MIN KT_DSA
-#define KT_MAX KT_P256_SPHINCS_SHAKE256_128F_ROBUST
+#define KT_MAX KT_P521_SPHINCS_SHAKE256_256S_SIMPLE
 ///// OQS_TEMPLATE_FRAGMENT_ASSIGN_KT_MARKERS_END
 
 int get_cert = 0;
@@ -107,41 +219,153 @@ uint64_t get_keytypes = KT_RSA|KT_ECDSA|KT_ED25519| \
 ///// OQS_TEMPLATE_FRAGMENT_GET_KT_START
                    KT_OQSDEFAULT| \
                    KT_DILITHIUM_2| \
+                   KT_DILITHIUM_3| \
+                   KT_DILITHIUM_4| \
                    KT_FALCON_512| \
-                   KT_MQDSS_31_48| \
+                   KT_FALCON_1024| \
                    KT_PICNIC_L1FS| \
+                   KT_PICNIC_L1UR| \
+                   KT_PICNIC_L1FULL| \
+                   KT_PICNIC_L3FS| \
+                   KT_PICNIC_L3UR| \
+                   KT_PICNIC_L3FULL| \
+                   KT_PICNIC_L5FS| \
+                   KT_PICNIC_L5UR| \
+                   KT_PICNIC_L5FULL| \
                    KT_PICNIC3_L1| \
-                   KT_QTESLA_P_I| \
+                   KT_PICNIC3_L3| \
+                   KT_PICNIC3_L5| \
                    KT_RAINBOW_IA_CLASSIC| \
+                   KT_RAINBOW_IA_CYCLIC| \
+                   KT_RAINBOW_IA_CYCLIC_COMPRESSED| \
                    KT_RAINBOW_IIIC_CLASSIC| \
+                   KT_RAINBOW_IIIC_CYCLIC| \
+                   KT_RAINBOW_IIIC_CYCLIC_COMPRESSED| \
                    KT_RAINBOW_VC_CLASSIC| \
+                   KT_RAINBOW_VC_CYCLIC| \
+                   KT_RAINBOW_VC_CYCLIC_COMPRESSED| \
                    KT_SPHINCS_HARAKA_128F_ROBUST| \
+                   KT_SPHINCS_HARAKA_128F_SIMPLE| \
+                   KT_SPHINCS_HARAKA_128S_ROBUST| \
+                   KT_SPHINCS_HARAKA_128S_SIMPLE| \
+                   KT_SPHINCS_HARAKA_192F_ROBUST| \
+                   KT_SPHINCS_HARAKA_192F_SIMPLE| \
+                   KT_SPHINCS_HARAKA_192S_ROBUST| \
+                   KT_SPHINCS_HARAKA_192S_SIMPLE| \
+                   KT_SPHINCS_HARAKA_256F_ROBUST| \
+                   KT_SPHINCS_HARAKA_256F_SIMPLE| \
+                   KT_SPHINCS_HARAKA_256S_ROBUST| \
+                   KT_SPHINCS_HARAKA_256S_SIMPLE| \
                    KT_SPHINCS_SHA256_128F_ROBUST| \
+                   KT_SPHINCS_SHA256_128F_SIMPLE| \
+                   KT_SPHINCS_SHA256_128S_ROBUST| \
+                   KT_SPHINCS_SHA256_128S_SIMPLE| \
+                   KT_SPHINCS_SHA256_192F_ROBUST| \
+                   KT_SPHINCS_SHA256_192F_SIMPLE| \
+                   KT_SPHINCS_SHA256_192S_ROBUST| \
+                   KT_SPHINCS_SHA256_192S_SIMPLE| \
+                   KT_SPHINCS_SHA256_256F_ROBUST| \
+                   KT_SPHINCS_SHA256_256F_SIMPLE| \
+                   KT_SPHINCS_SHA256_256S_ROBUST| \
+                   KT_SPHINCS_SHA256_256S_SIMPLE| \
                    KT_SPHINCS_SHAKE256_128F_ROBUST| \
+                   KT_SPHINCS_SHAKE256_128F_SIMPLE| \
+                   KT_SPHINCS_SHAKE256_128S_ROBUST| \
+                   KT_SPHINCS_SHAKE256_128S_SIMPLE| \
+                   KT_SPHINCS_SHAKE256_192F_ROBUST| \
+                   KT_SPHINCS_SHAKE256_192F_SIMPLE| \
+                   KT_SPHINCS_SHAKE256_192S_ROBUST| \
+                   KT_SPHINCS_SHAKE256_192S_SIMPLE| \
+                   KT_SPHINCS_SHAKE256_256F_ROBUST| \
+                   KT_SPHINCS_SHAKE256_256F_SIMPLE| \
+                   KT_SPHINCS_SHAKE256_256S_ROBUST| \
+                   KT_SPHINCS_SHAKE256_256S_SIMPLE| \
                    KT_RSA3072_OQSDEFAULT| \
                    KT_P256_OQSDEFAULT| \
                    KT_RSA3072_DILITHIUM_2| \
                    KT_P256_DILITHIUM_2| \
+                   KT_RSA3072_DILITHIUM_3| \
+                   KT_P256_DILITHIUM_3| \
+                   KT_P384_DILITHIUM_4| \
                    KT_RSA3072_FALCON_512| \
                    KT_P256_FALCON_512| \
-                   KT_RSA3072_MQDSS_31_48| \
-                   KT_P256_MQDSS_31_48| \
+                   KT_P521_FALCON_1024| \
                    KT_RSA3072_PICNIC_L1FS| \
                    KT_P256_PICNIC_L1FS| \
+                   KT_RSA3072_PICNIC_L1UR| \
+                   KT_P256_PICNIC_L1UR| \
+                   KT_RSA3072_PICNIC_L1FULL| \
+                   KT_P256_PICNIC_L1FULL| \
+                   KT_P384_PICNIC_L3FS| \
+                   KT_P384_PICNIC_L3UR| \
+                   KT_P384_PICNIC_L3FULL| \
+                   KT_P521_PICNIC_L5FS| \
+                   KT_P521_PICNIC_L5UR| \
+                   KT_P521_PICNIC_L5FULL| \
                    KT_RSA3072_PICNIC3_L1| \
                    KT_P256_PICNIC3_L1| \
-                   KT_RSA3072_QTESLA_P_I| \
-                   KT_P256_QTESLA_P_I| \
+                   KT_P384_PICNIC3_L3| \
+                   KT_P521_PICNIC3_L5| \
                    KT_RSA3072_RAINBOW_IA_CLASSIC| \
                    KT_P256_RAINBOW_IA_CLASSIC| \
+                   KT_RSA3072_RAINBOW_IA_CYCLIC| \
+                   KT_P256_RAINBOW_IA_CYCLIC| \
+                   KT_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED| \
+                   KT_P256_RAINBOW_IA_CYCLIC_COMPRESSED| \
                    KT_P384_RAINBOW_IIIC_CLASSIC| \
+                   KT_P384_RAINBOW_IIIC_CYCLIC| \
+                   KT_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED| \
                    KT_P521_RAINBOW_VC_CLASSIC| \
+                   KT_P521_RAINBOW_VC_CYCLIC| \
+                   KT_P521_RAINBOW_VC_CYCLIC_COMPRESSED| \
                    KT_RSA3072_SPHINCS_HARAKA_128F_ROBUST| \
                    KT_P256_SPHINCS_HARAKA_128F_ROBUST| \
+                   KT_RSA3072_SPHINCS_HARAKA_128F_SIMPLE| \
+                   KT_P256_SPHINCS_HARAKA_128F_SIMPLE| \
+                   KT_RSA3072_SPHINCS_HARAKA_128S_ROBUST| \
+                   KT_P256_SPHINCS_HARAKA_128S_ROBUST| \
+                   KT_RSA3072_SPHINCS_HARAKA_128S_SIMPLE| \
+                   KT_P256_SPHINCS_HARAKA_128S_SIMPLE| \
+                   KT_P384_SPHINCS_HARAKA_192F_ROBUST| \
+                   KT_P384_SPHINCS_HARAKA_192F_SIMPLE| \
+                   KT_P384_SPHINCS_HARAKA_192S_ROBUST| \
+                   KT_P384_SPHINCS_HARAKA_192S_SIMPLE| \
+                   KT_P521_SPHINCS_HARAKA_256F_ROBUST| \
+                   KT_P521_SPHINCS_HARAKA_256F_SIMPLE| \
+                   KT_P521_SPHINCS_HARAKA_256S_ROBUST| \
+                   KT_P521_SPHINCS_HARAKA_256S_SIMPLE| \
                    KT_RSA3072_SPHINCS_SHA256_128F_ROBUST| \
                    KT_P256_SPHINCS_SHA256_128F_ROBUST| \
+                   KT_RSA3072_SPHINCS_SHA256_128F_SIMPLE| \
+                   KT_P256_SPHINCS_SHA256_128F_SIMPLE| \
+                   KT_RSA3072_SPHINCS_SHA256_128S_ROBUST| \
+                   KT_P256_SPHINCS_SHA256_128S_ROBUST| \
+                   KT_RSA3072_SPHINCS_SHA256_128S_SIMPLE| \
+                   KT_P256_SPHINCS_SHA256_128S_SIMPLE| \
+                   KT_P384_SPHINCS_SHA256_192F_ROBUST| \
+                   KT_P384_SPHINCS_SHA256_192F_SIMPLE| \
+                   KT_P384_SPHINCS_SHA256_192S_ROBUST| \
+                   KT_P384_SPHINCS_SHA256_192S_SIMPLE| \
+                   KT_P521_SPHINCS_SHA256_256F_ROBUST| \
+                   KT_P521_SPHINCS_SHA256_256F_SIMPLE| \
+                   KT_P521_SPHINCS_SHA256_256S_ROBUST| \
+                   KT_P521_SPHINCS_SHA256_256S_SIMPLE| \
                    KT_RSA3072_SPHINCS_SHAKE256_128F_ROBUST| \
-                   KT_P256_SPHINCS_SHAKE256_128F_ROBUST;
+                   KT_P256_SPHINCS_SHAKE256_128F_ROBUST| \
+                   KT_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE| \
+                   KT_P256_SPHINCS_SHAKE256_128F_SIMPLE| \
+                   KT_RSA3072_SPHINCS_SHAKE256_128S_ROBUST| \
+                   KT_P256_SPHINCS_SHAKE256_128S_ROBUST| \
+                   KT_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE| \
+                   KT_P256_SPHINCS_SHAKE256_128S_SIMPLE| \
+                   KT_P384_SPHINCS_SHAKE256_192F_ROBUST| \
+                   KT_P384_SPHINCS_SHAKE256_192F_SIMPLE| \
+                   KT_P384_SPHINCS_SHAKE256_192S_ROBUST| \
+                   KT_P384_SPHINCS_SHAKE256_192S_SIMPLE| \
+                   KT_P521_SPHINCS_SHAKE256_256F_ROBUST| \
+                   KT_P521_SPHINCS_SHAKE256_256F_SIMPLE| \
+                   KT_P521_SPHINCS_SHAKE256_256S_ROBUST| \
+                   KT_P521_SPHINCS_SHAKE256_256S_SIMPLE;
 ///// OQS_TEMPLATE_FRAGMENT_GET_KT_END
 
 int hash_hosts = 0;		/* Hash hostname on output */
@@ -813,39 +1037,189 @@ main(int argc, char **argv)
 				case KEY_DILITHIUM_2:
 					get_keytypes |= KT_DILITHIUM_2;
 					break;
+				case KEY_DILITHIUM_3:
+					get_keytypes |= KT_DILITHIUM_3;
+					break;
+				case KEY_DILITHIUM_4:
+					get_keytypes |= KT_DILITHIUM_4;
+					break;
 				case KEY_FALCON_512:
 					get_keytypes |= KT_FALCON_512;
 					break;
-				case KEY_MQDSS_31_48:
-					get_keytypes |= KT_MQDSS_31_48;
+				case KEY_FALCON_1024:
+					get_keytypes |= KT_FALCON_1024;
 					break;
 				case KEY_PICNIC_L1FS:
 					get_keytypes |= KT_PICNIC_L1FS;
 					break;
+				case KEY_PICNIC_L1UR:
+					get_keytypes |= KT_PICNIC_L1UR;
+					break;
+				case KEY_PICNIC_L1FULL:
+					get_keytypes |= KT_PICNIC_L1FULL;
+					break;
+				case KEY_PICNIC_L3FS:
+					get_keytypes |= KT_PICNIC_L3FS;
+					break;
+				case KEY_PICNIC_L3UR:
+					get_keytypes |= KT_PICNIC_L3UR;
+					break;
+				case KEY_PICNIC_L3FULL:
+					get_keytypes |= KT_PICNIC_L3FULL;
+					break;
+				case KEY_PICNIC_L5FS:
+					get_keytypes |= KT_PICNIC_L5FS;
+					break;
+				case KEY_PICNIC_L5UR:
+					get_keytypes |= KT_PICNIC_L5UR;
+					break;
+				case KEY_PICNIC_L5FULL:
+					get_keytypes |= KT_PICNIC_L5FULL;
+					break;
 				case KEY_PICNIC3_L1:
 					get_keytypes |= KT_PICNIC3_L1;
 					break;
-				case KEY_QTESLA_P_I:
-					get_keytypes |= KT_QTESLA_P_I;
+				case KEY_PICNIC3_L3:
+					get_keytypes |= KT_PICNIC3_L3;
+					break;
+				case KEY_PICNIC3_L5:
+					get_keytypes |= KT_PICNIC3_L5;
 					break;
 				case KEY_RAINBOW_IA_CLASSIC:
 					get_keytypes |= KT_RAINBOW_IA_CLASSIC;
 					break;
+				case KEY_RAINBOW_IA_CYCLIC:
+					get_keytypes |= KT_RAINBOW_IA_CYCLIC;
+					break;
+				case KEY_RAINBOW_IA_CYCLIC_COMPRESSED:
+					get_keytypes |= KT_RAINBOW_IA_CYCLIC_COMPRESSED;
+					break;
 				case KEY_RAINBOW_IIIC_CLASSIC:
 					get_keytypes |= KT_RAINBOW_IIIC_CLASSIC;
 					break;
+				case KEY_RAINBOW_IIIC_CYCLIC:
+					get_keytypes |= KT_RAINBOW_IIIC_CYCLIC;
+					break;
+				case KEY_RAINBOW_IIIC_CYCLIC_COMPRESSED:
+					get_keytypes |= KT_RAINBOW_IIIC_CYCLIC_COMPRESSED;
+					break;
 				case KEY_RAINBOW_VC_CLASSIC:
 					get_keytypes |= KT_RAINBOW_VC_CLASSIC;
 					break;
+				case KEY_RAINBOW_VC_CYCLIC:
+					get_keytypes |= KT_RAINBOW_VC_CYCLIC;
+					break;
+				case KEY_RAINBOW_VC_CYCLIC_COMPRESSED:
+					get_keytypes |= KT_RAINBOW_VC_CYCLIC_COMPRESSED;
+					break;
 				case KEY_SPHINCS_HARAKA_128F_ROBUST:
 					get_keytypes |= KT_SPHINCS_HARAKA_128F_ROBUST;
 					break;
+				case KEY_SPHINCS_HARAKA_128F_SIMPLE:
+					get_keytypes |= KT_SPHINCS_HARAKA_128F_SIMPLE;
+					break;
+				case KEY_SPHINCS_HARAKA_128S_ROBUST:
+					get_keytypes |= KT_SPHINCS_HARAKA_128S_ROBUST;
+					break;
+				case KEY_SPHINCS_HARAKA_128S_SIMPLE:
+					get_keytypes |= KT_SPHINCS_HARAKA_128S_SIMPLE;
+					break;
+				case KEY_SPHINCS_HARAKA_192F_ROBUST:
+					get_keytypes |= KT_SPHINCS_HARAKA_192F_ROBUST;
+					break;
+				case KEY_SPHINCS_HARAKA_192F_SIMPLE:
+					get_keytypes |= KT_SPHINCS_HARAKA_192F_SIMPLE;
+					break;
+				case KEY_SPHINCS_HARAKA_192S_ROBUST:
+					get_keytypes |= KT_SPHINCS_HARAKA_192S_ROBUST;
+					break;
+				case KEY_SPHINCS_HARAKA_192S_SIMPLE:
+					get_keytypes |= KT_SPHINCS_HARAKA_192S_SIMPLE;
+					break;
+				case KEY_SPHINCS_HARAKA_256F_ROBUST:
+					get_keytypes |= KT_SPHINCS_HARAKA_256F_ROBUST;
+					break;
+				case KEY_SPHINCS_HARAKA_256F_SIMPLE:
+					get_keytypes |= KT_SPHINCS_HARAKA_256F_SIMPLE;
+					break;
+				case KEY_SPHINCS_HARAKA_256S_ROBUST:
+					get_keytypes |= KT_SPHINCS_HARAKA_256S_ROBUST;
+					break;
+				case KEY_SPHINCS_HARAKA_256S_SIMPLE:
+					get_keytypes |= KT_SPHINCS_HARAKA_256S_SIMPLE;
+					break;
 				case KEY_SPHINCS_SHA256_128F_ROBUST:
 					get_keytypes |= KT_SPHINCS_SHA256_128F_ROBUST;
 					break;
+				case KEY_SPHINCS_SHA256_128F_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHA256_128F_SIMPLE;
+					break;
+				case KEY_SPHINCS_SHA256_128S_ROBUST:
+					get_keytypes |= KT_SPHINCS_SHA256_128S_ROBUST;
+					break;
+				case KEY_SPHINCS_SHA256_128S_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHA256_128S_SIMPLE;
+					break;
+				case KEY_SPHINCS_SHA256_192F_ROBUST:
+					get_keytypes |= KT_SPHINCS_SHA256_192F_ROBUST;
+					break;
+				case KEY_SPHINCS_SHA256_192F_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHA256_192F_SIMPLE;
+					break;
+				case KEY_SPHINCS_SHA256_192S_ROBUST:
+					get_keytypes |= KT_SPHINCS_SHA256_192S_ROBUST;
+					break;
+				case KEY_SPHINCS_SHA256_192S_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHA256_192S_SIMPLE;
+					break;
+				case KEY_SPHINCS_SHA256_256F_ROBUST:
+					get_keytypes |= KT_SPHINCS_SHA256_256F_ROBUST;
+					break;
+				case KEY_SPHINCS_SHA256_256F_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHA256_256F_SIMPLE;
+					break;
+				case KEY_SPHINCS_SHA256_256S_ROBUST:
+					get_keytypes |= KT_SPHINCS_SHA256_256S_ROBUST;
+					break;
+				case KEY_SPHINCS_SHA256_256S_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHA256_256S_SIMPLE;
+					break;
 				case KEY_SPHINCS_SHAKE256_128F_ROBUST:
 					get_keytypes |= KT_SPHINCS_SHAKE256_128F_ROBUST;
 					break;
+				case KEY_SPHINCS_SHAKE256_128F_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHAKE256_128F_SIMPLE;
+					break;
+				case KEY_SPHINCS_SHAKE256_128S_ROBUST:
+					get_keytypes |= KT_SPHINCS_SHAKE256_128S_ROBUST;
+					break;
+				case KEY_SPHINCS_SHAKE256_128S_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHAKE256_128S_SIMPLE;
+					break;
+				case KEY_SPHINCS_SHAKE256_192F_ROBUST:
+					get_keytypes |= KT_SPHINCS_SHAKE256_192F_ROBUST;
+					break;
+				case KEY_SPHINCS_SHAKE256_192F_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHAKE256_192F_SIMPLE;
+					break;
+				case KEY_SPHINCS_SHAKE256_192S_ROBUST:
+					get_keytypes |= KT_SPHINCS_SHAKE256_192S_ROBUST;
+					break;
+				case KEY_SPHINCS_SHAKE256_192S_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHAKE256_192S_SIMPLE;
+					break;
+				case KEY_SPHINCS_SHAKE256_256F_ROBUST:
+					get_keytypes |= KT_SPHINCS_SHAKE256_256F_ROBUST;
+					break;
+				case KEY_SPHINCS_SHAKE256_256F_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHAKE256_256F_SIMPLE;
+					break;
+				case KEY_SPHINCS_SHAKE256_256S_ROBUST:
+					get_keytypes |= KT_SPHINCS_SHAKE256_256S_ROBUST;
+					break;
+				case KEY_SPHINCS_SHAKE256_256S_SIMPLE:
+					get_keytypes |= KT_SPHINCS_SHAKE256_256S_SIMPLE;
+					break;
 				case KEY_RSA3072_OQSDEFAULT:
 					get_keytypes |= KT_RSA3072_OQSDEFAULT;
 					break;
@@ -858,17 +1232,23 @@ main(int argc, char **argv)
 				case KEY_P256_DILITHIUM_2:
 					get_keytypes |= KT_P256_DILITHIUM_2;
 					break;
+				case KEY_RSA3072_DILITHIUM_3:
+					get_keytypes |= KT_RSA3072_DILITHIUM_3;
+					break;
+				case KEY_P256_DILITHIUM_3:
+					get_keytypes |= KT_P256_DILITHIUM_3;
+					break;
+				case KEY_P384_DILITHIUM_4:
+					get_keytypes |= KT_P384_DILITHIUM_4;
+					break;
 				case KEY_RSA3072_FALCON_512:
 					get_keytypes |= KT_RSA3072_FALCON_512;
 					break;
 				case KEY_P256_FALCON_512:
 					get_keytypes |= KT_P256_FALCON_512;
 					break;
-				case KEY_RSA3072_MQDSS_31_48:
-					get_keytypes |= KT_RSA3072_MQDSS_31_48;
-					break;
-				case KEY_P256_MQDSS_31_48:
-					get_keytypes |= KT_P256_MQDSS_31_48;
+				case KEY_P521_FALCON_1024:
+					get_keytypes |= KT_P521_FALCON_1024;
 					break;
 				case KEY_RSA3072_PICNIC_L1FS:
 					get_keytypes |= KT_RSA3072_PICNIC_L1FS;
@@ -876,17 +1256,47 @@ main(int argc, char **argv)
 				case KEY_P256_PICNIC_L1FS:
 					get_keytypes |= KT_P256_PICNIC_L1FS;
 					break;
+				case KEY_RSA3072_PICNIC_L1UR:
+					get_keytypes |= KT_RSA3072_PICNIC_L1UR;
+					break;
+				case KEY_P256_PICNIC_L1UR:
+					get_keytypes |= KT_P256_PICNIC_L1UR;
+					break;
+				case KEY_RSA3072_PICNIC_L1FULL:
+					get_keytypes |= KT_RSA3072_PICNIC_L1FULL;
+					break;
+				case KEY_P256_PICNIC_L1FULL:
+					get_keytypes |= KT_P256_PICNIC_L1FULL;
+					break;
+				case KEY_P384_PICNIC_L3FS:
+					get_keytypes |= KT_P384_PICNIC_L3FS;
+					break;
+				case KEY_P384_PICNIC_L3UR:
+					get_keytypes |= KT_P384_PICNIC_L3UR;
+					break;
+				case KEY_P384_PICNIC_L3FULL:
+					get_keytypes |= KT_P384_PICNIC_L3FULL;
+					break;
+				case KEY_P521_PICNIC_L5FS:
+					get_keytypes |= KT_P521_PICNIC_L5FS;
+					break;
+				case KEY_P521_PICNIC_L5UR:
+					get_keytypes |= KT_P521_PICNIC_L5UR;
+					break;
+				case KEY_P521_PICNIC_L5FULL:
+					get_keytypes |= KT_P521_PICNIC_L5FULL;
+					break;
 				case KEY_RSA3072_PICNIC3_L1:
 					get_keytypes |= KT_RSA3072_PICNIC3_L1;
 					break;
 				case KEY_P256_PICNIC3_L1:
 					get_keytypes |= KT_P256_PICNIC3_L1;
 					break;
-				case KEY_RSA3072_QTESLA_P_I:
-					get_keytypes |= KT_RSA3072_QTESLA_P_I;
+				case KEY_P384_PICNIC3_L3:
+					get_keytypes |= KT_P384_PICNIC3_L3;
 					break;
-				case KEY_P256_QTESLA_P_I:
-					get_keytypes |= KT_P256_QTESLA_P_I;
+				case KEY_P521_PICNIC3_L5:
+					get_keytypes |= KT_P521_PICNIC3_L5;
 					break;
 				case KEY_RSA3072_RAINBOW_IA_CLASSIC:
 					get_keytypes |= KT_RSA3072_RAINBOW_IA_CLASSIC;
@@ -894,30 +1304,180 @@ main(int argc, char **argv)
 				case KEY_P256_RAINBOW_IA_CLASSIC:
 					get_keytypes |= KT_P256_RAINBOW_IA_CLASSIC;
 					break;
+				case KEY_RSA3072_RAINBOW_IA_CYCLIC:
+					get_keytypes |= KT_RSA3072_RAINBOW_IA_CYCLIC;
+					break;
+				case KEY_P256_RAINBOW_IA_CYCLIC:
+					get_keytypes |= KT_P256_RAINBOW_IA_CYCLIC;
+					break;
+				case KEY_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED:
+					get_keytypes |= KT_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED;
+					break;
+				case KEY_P256_RAINBOW_IA_CYCLIC_COMPRESSED:
+					get_keytypes |= KT_P256_RAINBOW_IA_CYCLIC_COMPRESSED;
+					break;
 				case KEY_P384_RAINBOW_IIIC_CLASSIC:
 					get_keytypes |= KT_P384_RAINBOW_IIIC_CLASSIC;
 					break;
+				case KEY_P384_RAINBOW_IIIC_CYCLIC:
+					get_keytypes |= KT_P384_RAINBOW_IIIC_CYCLIC;
+					break;
+				case KEY_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED:
+					get_keytypes |= KT_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED;
+					break;
 				case KEY_P521_RAINBOW_VC_CLASSIC:
 					get_keytypes |= KT_P521_RAINBOW_VC_CLASSIC;
 					break;
+				case KEY_P521_RAINBOW_VC_CYCLIC:
+					get_keytypes |= KT_P521_RAINBOW_VC_CYCLIC;
+					break;
+				case KEY_P521_RAINBOW_VC_CYCLIC_COMPRESSED:
+					get_keytypes |= KT_P521_RAINBOW_VC_CYCLIC_COMPRESSED;
+					break;
 				case KEY_RSA3072_SPHINCS_HARAKA_128F_ROBUST:
 					get_keytypes |= KT_RSA3072_SPHINCS_HARAKA_128F_ROBUST;
 					break;
 				case KEY_P256_SPHINCS_HARAKA_128F_ROBUST:
 					get_keytypes |= KT_P256_SPHINCS_HARAKA_128F_ROBUST;
 					break;
+				case KEY_RSA3072_SPHINCS_HARAKA_128F_SIMPLE:
+					get_keytypes |= KT_RSA3072_SPHINCS_HARAKA_128F_SIMPLE;
+					break;
+				case KEY_P256_SPHINCS_HARAKA_128F_SIMPLE:
+					get_keytypes |= KT_P256_SPHINCS_HARAKA_128F_SIMPLE;
+					break;
+				case KEY_RSA3072_SPHINCS_HARAKA_128S_ROBUST:
+					get_keytypes |= KT_RSA3072_SPHINCS_HARAKA_128S_ROBUST;
+					break;
+				case KEY_P256_SPHINCS_HARAKA_128S_ROBUST:
+					get_keytypes |= KT_P256_SPHINCS_HARAKA_128S_ROBUST;
+					break;
+				case KEY_RSA3072_SPHINCS_HARAKA_128S_SIMPLE:
+					get_keytypes |= KT_RSA3072_SPHINCS_HARAKA_128S_SIMPLE;
+					break;
+				case KEY_P256_SPHINCS_HARAKA_128S_SIMPLE:
+					get_keytypes |= KT_P256_SPHINCS_HARAKA_128S_SIMPLE;
+					break;
+				case KEY_P384_SPHINCS_HARAKA_192F_ROBUST:
+					get_keytypes |= KT_P384_SPHINCS_HARAKA_192F_ROBUST;
+					break;
+				case KEY_P384_SPHINCS_HARAKA_192F_SIMPLE:
+					get_keytypes |= KT_P384_SPHINCS_HARAKA_192F_SIMPLE;
+					break;
+				case KEY_P384_SPHINCS_HARAKA_192S_ROBUST:
+					get_keytypes |= KT_P384_SPHINCS_HARAKA_192S_ROBUST;
+					break;
+				case KEY_P384_SPHINCS_HARAKA_192S_SIMPLE:
+					get_keytypes |= KT_P384_SPHINCS_HARAKA_192S_SIMPLE;
+					break;
+				case KEY_P521_SPHINCS_HARAKA_256F_ROBUST:
+					get_keytypes |= KT_P521_SPHINCS_HARAKA_256F_ROBUST;
+					break;
+				case KEY_P521_SPHINCS_HARAKA_256F_SIMPLE:
+					get_keytypes |= KT_P521_SPHINCS_HARAKA_256F_SIMPLE;
+					break;
+				case KEY_P521_SPHINCS_HARAKA_256S_ROBUST:
+					get_keytypes |= KT_P521_SPHINCS_HARAKA_256S_ROBUST;
+					break;
+				case KEY_P521_SPHINCS_HARAKA_256S_SIMPLE:
+					get_keytypes |= KT_P521_SPHINCS_HARAKA_256S_SIMPLE;
+					break;
 				case KEY_RSA3072_SPHINCS_SHA256_128F_ROBUST:
 					get_keytypes |= KT_RSA3072_SPHINCS_SHA256_128F_ROBUST;
 					break;
 				case KEY_P256_SPHINCS_SHA256_128F_ROBUST:
 					get_keytypes |= KT_P256_SPHINCS_SHA256_128F_ROBUST;
 					break;
+				case KEY_RSA3072_SPHINCS_SHA256_128F_SIMPLE:
+					get_keytypes |= KT_RSA3072_SPHINCS_SHA256_128F_SIMPLE;
+					break;
+				case KEY_P256_SPHINCS_SHA256_128F_SIMPLE:
+					get_keytypes |= KT_P256_SPHINCS_SHA256_128F_SIMPLE;
+					break;
+				case KEY_RSA3072_SPHINCS_SHA256_128S_ROBUST:
+					get_keytypes |= KT_RSA3072_SPHINCS_SHA256_128S_ROBUST;
+					break;
+				case KEY_P256_SPHINCS_SHA256_128S_ROBUST:
+					get_keytypes |= KT_P256_SPHINCS_SHA256_128S_ROBUST;
+					break;
+				case KEY_RSA3072_SPHINCS_SHA256_128S_SIMPLE:
+					get_keytypes |= KT_RSA3072_SPHINCS_SHA256_128S_SIMPLE;
+					break;
+				case KEY_P256_SPHINCS_SHA256_128S_SIMPLE:
+					get_keytypes |= KT_P256_SPHINCS_SHA256_128S_SIMPLE;
+					break;
+				case KEY_P384_SPHINCS_SHA256_192F_ROBUST:
+					get_keytypes |= KT_P384_SPHINCS_SHA256_192F_ROBUST;
+					break;
+				case KEY_P384_SPHINCS_SHA256_192F_SIMPLE:
+					get_keytypes |= KT_P384_SPHINCS_SHA256_192F_SIMPLE;
+					break;
+				case KEY_P384_SPHINCS_SHA256_192S_ROBUST:
+					get_keytypes |= KT_P384_SPHINCS_SHA256_192S_ROBUST;
+					break;
+				case KEY_P384_SPHINCS_SHA256_192S_SIMPLE:
+					get_keytypes |= KT_P384_SPHINCS_SHA256_192S_SIMPLE;
+					break;
+				case KEY_P521_SPHINCS_SHA256_256F_ROBUST:
+					get_keytypes |= KT_P521_SPHINCS_SHA256_256F_ROBUST;
+					break;
+				case KEY_P521_SPHINCS_SHA256_256F_SIMPLE:
+					get_keytypes |= KT_P521_SPHINCS_SHA256_256F_SIMPLE;
+					break;
+				case KEY_P521_SPHINCS_SHA256_256S_ROBUST:
+					get_keytypes |= KT_P521_SPHINCS_SHA256_256S_ROBUST;
+					break;
+				case KEY_P521_SPHINCS_SHA256_256S_SIMPLE:
+					get_keytypes |= KT_P521_SPHINCS_SHA256_256S_SIMPLE;
+					break;
 				case KEY_RSA3072_SPHINCS_SHAKE256_128F_ROBUST:
 					get_keytypes |= KT_RSA3072_SPHINCS_SHAKE256_128F_ROBUST;
 					break;
 				case KEY_P256_SPHINCS_SHAKE256_128F_ROBUST:
 					get_keytypes |= KT_P256_SPHINCS_SHAKE256_128F_ROBUST;
 					break;
+				case KEY_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE:
+					get_keytypes |= KT_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE;
+					break;
+				case KEY_P256_SPHINCS_SHAKE256_128F_SIMPLE:
+					get_keytypes |= KT_P256_SPHINCS_SHAKE256_128F_SIMPLE;
+					break;
+				case KEY_RSA3072_SPHINCS_SHAKE256_128S_ROBUST:
+					get_keytypes |= KT_RSA3072_SPHINCS_SHAKE256_128S_ROBUST;
+					break;
+				case KEY_P256_SPHINCS_SHAKE256_128S_ROBUST:
+					get_keytypes |= KT_P256_SPHINCS_SHAKE256_128S_ROBUST;
+					break;
+				case KEY_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE:
+					get_keytypes |= KT_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE;
+					break;
+				case KEY_P256_SPHINCS_SHAKE256_128S_SIMPLE:
+					get_keytypes |= KT_P256_SPHINCS_SHAKE256_128S_SIMPLE;
+					break;
+				case KEY_P384_SPHINCS_SHAKE256_192F_ROBUST:
+					get_keytypes |= KT_P384_SPHINCS_SHAKE256_192F_ROBUST;
+					break;
+				case KEY_P384_SPHINCS_SHAKE256_192F_SIMPLE:
+					get_keytypes |= KT_P384_SPHINCS_SHAKE256_192F_SIMPLE;
+					break;
+				case KEY_P384_SPHINCS_SHAKE256_192S_ROBUST:
+					get_keytypes |= KT_P384_SPHINCS_SHAKE256_192S_ROBUST;
+					break;
+				case KEY_P384_SPHINCS_SHAKE256_192S_SIMPLE:
+					get_keytypes |= KT_P384_SPHINCS_SHAKE256_192S_SIMPLE;
+					break;
+				case KEY_P521_SPHINCS_SHAKE256_256F_ROBUST:
+					get_keytypes |= KT_P521_SPHINCS_SHAKE256_256F_ROBUST;
+					break;
+				case KEY_P521_SPHINCS_SHAKE256_256F_SIMPLE:
+					get_keytypes |= KT_P521_SPHINCS_SHAKE256_256F_SIMPLE;
+					break;
+				case KEY_P521_SPHINCS_SHAKE256_256S_ROBUST:
+					get_keytypes |= KT_P521_SPHINCS_SHAKE256_256S_ROBUST;
+					break;
+				case KEY_P521_SPHINCS_SHAKE256_256S_SIMPLE:
+					get_keytypes |= KT_P521_SPHINCS_SHAKE256_256S_SIMPLE;
+					break;
 ///// OQS_TEMPLATE_FRAGMENT_SWITCH_KT_END
 				case KEY_UNSPEC:
 				default:
diff --git a/ssh-keysign.c b/ssh-keysign.c
index 004d044d..95edfe5d 100644
--- a/ssh-keysign.c
+++ b/ssh-keysign.c
@@ -167,7 +167,7 @@ main(int argc, char **argv)
 	struct sshbuf *b;
 	Options options;
 ///// OQS_TEMPLATE_FRAGMENT_COUNT_KT_START
-#define NUM_KEYTYPES 42
+#define NUM_KEYTYPES 154
 ///// OQS_TEMPLATE_FRAGMENT_COUNT_KT_END
 	struct sshkey *keys[NUM_KEYTYPES], *key = NULL;
 	struct passwd *pw;
@@ -195,41 +195,153 @@ main(int argc, char **argv)
 ///// OQS_TEMPLATE_FRAGMENT_OPEN_KEYFILES_START
 	key_fd[i++] = open(_PATH_HOST_OQSDEFAULT_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_DILITHIUM_2_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_DILITHIUM_3_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_DILITHIUM_4_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_FALCON_512_KEY_FILE, O_RDONLY);
-	key_fd[i++] = open(_PATH_HOST_MQDSS_31_48_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_FALCON_1024_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_PICNIC_L1FS_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_PICNIC_L1UR_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_PICNIC_L1FULL_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_PICNIC_L3FS_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_PICNIC_L3UR_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_PICNIC_L3FULL_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_PICNIC_L5FS_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_PICNIC_L5UR_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_PICNIC_L5FULL_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_PICNIC3_L1_KEY_FILE, O_RDONLY);
-	key_fd[i++] = open(_PATH_HOST_QTESLA_P_I_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_PICNIC3_L3_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_PICNIC3_L5_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RAINBOW_IA_CLASSIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RAINBOW_IA_CYCLIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RAINBOW_IIIC_CLASSIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RAINBOW_IIIC_CYCLIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RAINBOW_IIIC_CYCLIC_COMPRESSED_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RAINBOW_VC_CLASSIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RAINBOW_VC_CYCLIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RAINBOW_VC_CYCLIC_COMPRESSED_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_192F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_192F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_192S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_192S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_256F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_256F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_256S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_HARAKA_256S_SIMPLE_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_128F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_128S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_192F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_192F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_192S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_192S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_256F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_256F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_256S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHA256_256S_SIMPLE_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_192F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_192F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_192S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_192S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_256F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_256F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_256S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_SPHINCS_SHAKE256_256S_SIMPLE_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RSA3072_OQSDEFAULT_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_P256_OQSDEFAULT_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RSA3072_DILITHIUM_2_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_P256_DILITHIUM_2_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_DILITHIUM_3_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_DILITHIUM_3_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_DILITHIUM_4_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RSA3072_FALCON_512_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_P256_FALCON_512_KEY_FILE, O_RDONLY);
-	key_fd[i++] = open(_PATH_HOST_RSA3072_MQDSS_31_48_KEY_FILE, O_RDONLY);
-	key_fd[i++] = open(_PATH_HOST_P256_MQDSS_31_48_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_FALCON_1024_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RSA3072_PICNIC_L1FS_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_P256_PICNIC_L1FS_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_PICNIC_L1UR_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_PICNIC_L1UR_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_PICNIC_L1FULL_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_PICNIC_L1FULL_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_PICNIC_L3FS_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_PICNIC_L3UR_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_PICNIC_L3FULL_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_PICNIC_L5FS_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_PICNIC_L5UR_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_PICNIC_L5FULL_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RSA3072_PICNIC3_L1_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_P256_PICNIC3_L1_KEY_FILE, O_RDONLY);
-	key_fd[i++] = open(_PATH_HOST_RSA3072_QTESLA_P_I_KEY_FILE, O_RDONLY);
-	key_fd[i++] = open(_PATH_HOST_P256_QTESLA_P_I_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_PICNIC3_L3_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_PICNIC3_L5_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RSA3072_RAINBOW_IA_CLASSIC_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_P256_RAINBOW_IA_CLASSIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_RAINBOW_IA_CYCLIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_RAINBOW_IA_CYCLIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_P384_RAINBOW_IIIC_CLASSIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_RAINBOW_IIIC_CYCLIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_P521_RAINBOW_VC_CLASSIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_RAINBOW_VC_CYCLIC_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_RAINBOW_VC_CYCLIC_COMPRESSED_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_HARAKA_192F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_HARAKA_192F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_HARAKA_192S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_HARAKA_192S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_HARAKA_256F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_HARAKA_256F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_HARAKA_256S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_HARAKA_256S_SIMPLE_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_SHA256_128F_ROBUST_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_SHA256_128F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_SHA256_128S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_SHA256_128S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_SHA256_192F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_SHA256_192F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_SHA256_192S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_SHA256_192S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_SHA256_256F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_SHA256_256F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_SHA256_256S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_SHA256_256S_SIMPLE_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE, O_RDONLY);
 	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P256_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_SHAKE256_192F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_SHAKE256_192F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_SHAKE256_192S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P384_SPHINCS_SHAKE256_192S_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_SHAKE256_256F_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_SHAKE256_256F_SIMPLE_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_SHAKE256_256S_ROBUST_KEY_FILE, O_RDONLY);
+	key_fd[i++] = open(_PATH_HOST_P521_SPHINCS_SHAKE256_256S_SIMPLE_KEY_FILE, O_RDONLY);
 ///// OQS_TEMPLATE_FRAGMENT_OPEN_KEYFILES_END
 
 	if ((pw = getpwuid(getuid())) == NULL)
diff --git a/ssh-oqs.c b/ssh-oqs.c
index ff7e6dc2..2368449e 100644
--- a/ssh-oqs.c
+++ b/ssh-oqs.c
@@ -27,48 +27,210 @@ const char* get_oqs_alg_name(int openssh_type)
 		case KEY_RSA3072_DILITHIUM_2:
 		case KEY_P256_DILITHIUM_2:
 			return OQS_SIG_alg_dilithium_2;
+		case KEY_DILITHIUM_3:
+		case KEY_RSA3072_DILITHIUM_3:
+		case KEY_P256_DILITHIUM_3:
+			return OQS_SIG_alg_dilithium_3;
+		case KEY_DILITHIUM_4:
+		case KEY_P384_DILITHIUM_4:
+			return OQS_SIG_alg_dilithium_4;
 		case KEY_FALCON_512:
 		case KEY_RSA3072_FALCON_512:
 		case KEY_P256_FALCON_512:
 			return OQS_SIG_alg_falcon_512;
-		case KEY_MQDSS_31_48:
-		case KEY_RSA3072_MQDSS_31_48:
-		case KEY_P256_MQDSS_31_48:
-			return OQS_SIG_alg_mqdss_31_48;
+		case KEY_FALCON_1024:
+		case KEY_P521_FALCON_1024:
+			return OQS_SIG_alg_falcon_1024;
 		case KEY_PICNIC_L1FS:
 		case KEY_RSA3072_PICNIC_L1FS:
 		case KEY_P256_PICNIC_L1FS:
 			return OQS_SIG_alg_picnic_L1_FS;
+		case KEY_PICNIC_L1UR:
+		case KEY_RSA3072_PICNIC_L1UR:
+		case KEY_P256_PICNIC_L1UR:
+			return OQS_SIG_alg_picnic_L1_UR;
+		case KEY_PICNIC_L1FULL:
+		case KEY_RSA3072_PICNIC_L1FULL:
+		case KEY_P256_PICNIC_L1FULL:
+			return OQS_SIG_alg_picnic_L1_full;
+		case KEY_PICNIC_L3FS:
+		case KEY_P384_PICNIC_L3FS:
+			return OQS_SIG_alg_picnic_L3_FS;
+		case KEY_PICNIC_L3UR:
+		case KEY_P384_PICNIC_L3UR:
+			return OQS_SIG_alg_picnic_L3_UR;
+		case KEY_PICNIC_L3FULL:
+		case KEY_P384_PICNIC_L3FULL:
+			return OQS_SIG_alg_picnic_L3_full;
+		case KEY_PICNIC_L5FS:
+		case KEY_P521_PICNIC_L5FS:
+			return OQS_SIG_alg_picnic_L5_FS;
+		case KEY_PICNIC_L5UR:
+		case KEY_P521_PICNIC_L5UR:
+			return OQS_SIG_alg_picnic_L5_UR;
+		case KEY_PICNIC_L5FULL:
+		case KEY_P521_PICNIC_L5FULL:
+			return OQS_SIG_alg_picnic_L5_full;
 		case KEY_PICNIC3_L1:
 		case KEY_RSA3072_PICNIC3_L1:
 		case KEY_P256_PICNIC3_L1:
 			return OQS_SIG_alg_picnic3_L1;
-		case KEY_QTESLA_P_I:
-		case KEY_RSA3072_QTESLA_P_I:
-		case KEY_P256_QTESLA_P_I:
-			return OQS_SIG_alg_qTesla_p_I;
+		case KEY_PICNIC3_L3:
+		case KEY_P384_PICNIC3_L3:
+			return OQS_SIG_alg_picnic3_L3;
+		case KEY_PICNIC3_L5:
+		case KEY_P521_PICNIC3_L5:
+			return OQS_SIG_alg_picnic3_L5;
 		case KEY_RAINBOW_IA_CLASSIC:
 		case KEY_RSA3072_RAINBOW_IA_CLASSIC:
 		case KEY_P256_RAINBOW_IA_CLASSIC:
 			return OQS_SIG_alg_rainbow_Ia_classic;
+		case KEY_RAINBOW_IA_CYCLIC:
+		case KEY_RSA3072_RAINBOW_IA_CYCLIC:
+		case KEY_P256_RAINBOW_IA_CYCLIC:
+			return OQS_SIG_alg_rainbow_Ia_cyclic;
+		case KEY_RAINBOW_IA_CYCLIC_COMPRESSED:
+		case KEY_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED:
+		case KEY_P256_RAINBOW_IA_CYCLIC_COMPRESSED:
+			return OQS_SIG_alg_rainbow_Ia_cyclic_compressed;
 		case KEY_RAINBOW_IIIC_CLASSIC:
 		case KEY_P384_RAINBOW_IIIC_CLASSIC:
 			return OQS_SIG_alg_rainbow_IIIc_classic;
+		case KEY_RAINBOW_IIIC_CYCLIC:
+		case KEY_P384_RAINBOW_IIIC_CYCLIC:
+			return OQS_SIG_alg_rainbow_IIIc_cyclic;
+		case KEY_RAINBOW_IIIC_CYCLIC_COMPRESSED:
+		case KEY_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED:
+			return OQS_SIG_alg_rainbow_IIIc_cyclic_compressed;
 		case KEY_RAINBOW_VC_CLASSIC:
 		case KEY_P521_RAINBOW_VC_CLASSIC:
 			return OQS_SIG_alg_rainbow_Vc_classic;
+		case KEY_RAINBOW_VC_CYCLIC:
+		case KEY_P521_RAINBOW_VC_CYCLIC:
+			return OQS_SIG_alg_rainbow_Vc_cyclic;
+		case KEY_RAINBOW_VC_CYCLIC_COMPRESSED:
+		case KEY_P521_RAINBOW_VC_CYCLIC_COMPRESSED:
+			return OQS_SIG_alg_rainbow_Vc_cyclic_compressed;
 		case KEY_SPHINCS_HARAKA_128F_ROBUST:
 		case KEY_RSA3072_SPHINCS_HARAKA_128F_ROBUST:
 		case KEY_P256_SPHINCS_HARAKA_128F_ROBUST:
 			return OQS_SIG_alg_sphincs_haraka_128f_robust;
+		case KEY_SPHINCS_HARAKA_128F_SIMPLE:
+		case KEY_RSA3072_SPHINCS_HARAKA_128F_SIMPLE:
+		case KEY_P256_SPHINCS_HARAKA_128F_SIMPLE:
+			return OQS_SIG_alg_sphincs_haraka_128f_simple;
+		case KEY_SPHINCS_HARAKA_128S_ROBUST:
+		case KEY_RSA3072_SPHINCS_HARAKA_128S_ROBUST:
+		case KEY_P256_SPHINCS_HARAKA_128S_ROBUST:
+			return OQS_SIG_alg_sphincs_haraka_128s_robust;
+		case KEY_SPHINCS_HARAKA_128S_SIMPLE:
+		case KEY_RSA3072_SPHINCS_HARAKA_128S_SIMPLE:
+		case KEY_P256_SPHINCS_HARAKA_128S_SIMPLE:
+			return OQS_SIG_alg_sphincs_haraka_128s_simple;
+		case KEY_SPHINCS_HARAKA_192F_ROBUST:
+		case KEY_P384_SPHINCS_HARAKA_192F_ROBUST:
+			return OQS_SIG_alg_sphincs_haraka_192f_robust;
+		case KEY_SPHINCS_HARAKA_192F_SIMPLE:
+		case KEY_P384_SPHINCS_HARAKA_192F_SIMPLE:
+			return OQS_SIG_alg_sphincs_haraka_192f_simple;
+		case KEY_SPHINCS_HARAKA_192S_ROBUST:
+		case KEY_P384_SPHINCS_HARAKA_192S_ROBUST:
+			return OQS_SIG_alg_sphincs_haraka_192s_robust;
+		case KEY_SPHINCS_HARAKA_192S_SIMPLE:
+		case KEY_P384_SPHINCS_HARAKA_192S_SIMPLE:
+			return OQS_SIG_alg_sphincs_haraka_192s_simple;
+		case KEY_SPHINCS_HARAKA_256F_ROBUST:
+		case KEY_P521_SPHINCS_HARAKA_256F_ROBUST:
+			return OQS_SIG_alg_sphincs_haraka_256f_robust;
+		case KEY_SPHINCS_HARAKA_256F_SIMPLE:
+		case KEY_P521_SPHINCS_HARAKA_256F_SIMPLE:
+			return OQS_SIG_alg_sphincs_haraka_256f_simple;
+		case KEY_SPHINCS_HARAKA_256S_ROBUST:
+		case KEY_P521_SPHINCS_HARAKA_256S_ROBUST:
+			return OQS_SIG_alg_sphincs_haraka_256s_robust;
+		case KEY_SPHINCS_HARAKA_256S_SIMPLE:
+		case KEY_P521_SPHINCS_HARAKA_256S_SIMPLE:
+			return OQS_SIG_alg_sphincs_haraka_256s_simple;
 		case KEY_SPHINCS_SHA256_128F_ROBUST:
 		case KEY_RSA3072_SPHINCS_SHA256_128F_ROBUST:
 		case KEY_P256_SPHINCS_SHA256_128F_ROBUST:
 			return OQS_SIG_alg_sphincs_sha256_128f_robust;
+		case KEY_SPHINCS_SHA256_128F_SIMPLE:
+		case KEY_RSA3072_SPHINCS_SHA256_128F_SIMPLE:
+		case KEY_P256_SPHINCS_SHA256_128F_SIMPLE:
+			return OQS_SIG_alg_sphincs_sha256_128f_simple;
+		case KEY_SPHINCS_SHA256_128S_ROBUST:
+		case KEY_RSA3072_SPHINCS_SHA256_128S_ROBUST:
+		case KEY_P256_SPHINCS_SHA256_128S_ROBUST:
+			return OQS_SIG_alg_sphincs_sha256_128s_robust;
+		case KEY_SPHINCS_SHA256_128S_SIMPLE:
+		case KEY_RSA3072_SPHINCS_SHA256_128S_SIMPLE:
+		case KEY_P256_SPHINCS_SHA256_128S_SIMPLE:
+			return OQS_SIG_alg_sphincs_sha256_128s_simple;
+		case KEY_SPHINCS_SHA256_192F_ROBUST:
+		case KEY_P384_SPHINCS_SHA256_192F_ROBUST:
+			return OQS_SIG_alg_sphincs_sha256_192f_robust;
+		case KEY_SPHINCS_SHA256_192F_SIMPLE:
+		case KEY_P384_SPHINCS_SHA256_192F_SIMPLE:
+			return OQS_SIG_alg_sphincs_sha256_192f_simple;
+		case KEY_SPHINCS_SHA256_192S_ROBUST:
+		case KEY_P384_SPHINCS_SHA256_192S_ROBUST:
+			return OQS_SIG_alg_sphincs_sha256_192s_robust;
+		case KEY_SPHINCS_SHA256_192S_SIMPLE:
+		case KEY_P384_SPHINCS_SHA256_192S_SIMPLE:
+			return OQS_SIG_alg_sphincs_sha256_192s_simple;
+		case KEY_SPHINCS_SHA256_256F_ROBUST:
+		case KEY_P521_SPHINCS_SHA256_256F_ROBUST:
+			return OQS_SIG_alg_sphincs_sha256_256f_robust;
+		case KEY_SPHINCS_SHA256_256F_SIMPLE:
+		case KEY_P521_SPHINCS_SHA256_256F_SIMPLE:
+			return OQS_SIG_alg_sphincs_sha256_256f_simple;
+		case KEY_SPHINCS_SHA256_256S_ROBUST:
+		case KEY_P521_SPHINCS_SHA256_256S_ROBUST:
+			return OQS_SIG_alg_sphincs_sha256_256s_robust;
+		case KEY_SPHINCS_SHA256_256S_SIMPLE:
+		case KEY_P521_SPHINCS_SHA256_256S_SIMPLE:
+			return OQS_SIG_alg_sphincs_sha256_256s_simple;
 		case KEY_SPHINCS_SHAKE256_128F_ROBUST:
 		case KEY_RSA3072_SPHINCS_SHAKE256_128F_ROBUST:
 		case KEY_P256_SPHINCS_SHAKE256_128F_ROBUST:
 			return OQS_SIG_alg_sphincs_shake256_128f_robust;
+		case KEY_SPHINCS_SHAKE256_128F_SIMPLE:
+		case KEY_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE:
+		case KEY_P256_SPHINCS_SHAKE256_128F_SIMPLE:
+			return OQS_SIG_alg_sphincs_shake256_128f_simple;
+		case KEY_SPHINCS_SHAKE256_128S_ROBUST:
+		case KEY_RSA3072_SPHINCS_SHAKE256_128S_ROBUST:
+		case KEY_P256_SPHINCS_SHAKE256_128S_ROBUST:
+			return OQS_SIG_alg_sphincs_shake256_128s_robust;
+		case KEY_SPHINCS_SHAKE256_128S_SIMPLE:
+		case KEY_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE:
+		case KEY_P256_SPHINCS_SHAKE256_128S_SIMPLE:
+			return OQS_SIG_alg_sphincs_shake256_128s_simple;
+		case KEY_SPHINCS_SHAKE256_192F_ROBUST:
+		case KEY_P384_SPHINCS_SHAKE256_192F_ROBUST:
+			return OQS_SIG_alg_sphincs_shake256_192f_robust;
+		case KEY_SPHINCS_SHAKE256_192F_SIMPLE:
+		case KEY_P384_SPHINCS_SHAKE256_192F_SIMPLE:
+			return OQS_SIG_alg_sphincs_shake256_192f_simple;
+		case KEY_SPHINCS_SHAKE256_192S_ROBUST:
+		case KEY_P384_SPHINCS_SHAKE256_192S_ROBUST:
+			return OQS_SIG_alg_sphincs_shake256_192s_robust;
+		case KEY_SPHINCS_SHAKE256_192S_SIMPLE:
+		case KEY_P384_SPHINCS_SHAKE256_192S_SIMPLE:
+			return OQS_SIG_alg_sphincs_shake256_192s_simple;
+		case KEY_SPHINCS_SHAKE256_256F_ROBUST:
+		case KEY_P521_SPHINCS_SHAKE256_256F_ROBUST:
+			return OQS_SIG_alg_sphincs_shake256_256f_robust;
+		case KEY_SPHINCS_SHAKE256_256F_SIMPLE:
+		case KEY_P521_SPHINCS_SHAKE256_256F_SIMPLE:
+			return OQS_SIG_alg_sphincs_shake256_256f_simple;
+		case KEY_SPHINCS_SHAKE256_256S_ROBUST:
+		case KEY_P521_SPHINCS_SHAKE256_256S_ROBUST:
+			return OQS_SIG_alg_sphincs_shake256_256s_robust;
+		case KEY_SPHINCS_SHAKE256_256S_SIMPLE:
+		case KEY_P521_SPHINCS_SHAKE256_256S_SIMPLE:
+			return OQS_SIG_alg_sphincs_shake256_256s_simple;
 ///// OQS_TEMPLATE_FRAGMENT_OSSH_KT_TO_OQS_METH_END
 		default:
 			return NULL;
diff --git a/ssh.c b/ssh.c
index b4aba9af..8e926a7c 100644
--- a/ssh.c
+++ b/ssh.c
@@ -1388,7 +1388,7 @@ main(int ac, char **av)
 	sensitive_data.keys = NULL;
 	if (options.hostbased_authentication) {
 ///// OQS_TEMPLATE_FRAGMENT_COUNT_KEYS_START
-		sensitive_data.nkeys = 47;
+		sensitive_data.nkeys = 159;
 ///// OQS_TEMPLATE_FRAGMENT_COUNT_KEYS_END
 		sensitive_data.keys = xcalloc(sensitive_data.nkeys,
 		    sizeof(struct sshkey));
@@ -1420,41 +1420,153 @@ main(int ac, char **av)
 ///// OQS_TEMPLATE_FRAGMENT_LOAD_PUBKEYS_START
 			L_PUBKEY(_PATH_HOST_OQSDEFAULT_KEY_FILE, 10);
 			L_PUBKEY(_PATH_HOST_DILITHIUM_2_KEY_FILE, 11);
-			L_PUBKEY(_PATH_HOST_FALCON_512_KEY_FILE, 12);
-			L_PUBKEY(_PATH_HOST_MQDSS_31_48_KEY_FILE, 13);
-			L_PUBKEY(_PATH_HOST_PICNIC_L1FS_KEY_FILE, 14);
-			L_PUBKEY(_PATH_HOST_PICNIC3_L1_KEY_FILE, 15);
-			L_PUBKEY(_PATH_HOST_QTESLA_P_I_KEY_FILE, 16);
-			L_PUBKEY(_PATH_HOST_RAINBOW_IA_CLASSIC_KEY_FILE, 17);
-			L_PUBKEY(_PATH_HOST_RAINBOW_IIIC_CLASSIC_KEY_FILE, 18);
-			L_PUBKEY(_PATH_HOST_RAINBOW_VC_CLASSIC_KEY_FILE, 19);
-			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE, 20);
-			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_128F_ROBUST_KEY_FILE, 21);
-			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE, 22);
-			L_PUBKEY(_PATH_HOST_RSA3072_OQSDEFAULT_KEY_FILE, 23);
-			L_PUBKEY(_PATH_HOST_P256_OQSDEFAULT_KEY_FILE, 24);
-			L_PUBKEY(_PATH_HOST_RSA3072_DILITHIUM_2_KEY_FILE, 25);
-			L_PUBKEY(_PATH_HOST_P256_DILITHIUM_2_KEY_FILE, 26);
-			L_PUBKEY(_PATH_HOST_RSA3072_FALCON_512_KEY_FILE, 27);
-			L_PUBKEY(_PATH_HOST_P256_FALCON_512_KEY_FILE, 28);
-			L_PUBKEY(_PATH_HOST_RSA3072_MQDSS_31_48_KEY_FILE, 29);
-			L_PUBKEY(_PATH_HOST_P256_MQDSS_31_48_KEY_FILE, 30);
-			L_PUBKEY(_PATH_HOST_RSA3072_PICNIC_L1FS_KEY_FILE, 31);
-			L_PUBKEY(_PATH_HOST_P256_PICNIC_L1FS_KEY_FILE, 32);
-			L_PUBKEY(_PATH_HOST_RSA3072_PICNIC3_L1_KEY_FILE, 33);
-			L_PUBKEY(_PATH_HOST_P256_PICNIC3_L1_KEY_FILE, 34);
-			L_PUBKEY(_PATH_HOST_RSA3072_QTESLA_P_I_KEY_FILE, 35);
-			L_PUBKEY(_PATH_HOST_P256_QTESLA_P_I_KEY_FILE, 36);
-			L_PUBKEY(_PATH_HOST_RSA3072_RAINBOW_IA_CLASSIC_KEY_FILE, 37);
-			L_PUBKEY(_PATH_HOST_P256_RAINBOW_IA_CLASSIC_KEY_FILE, 38);
-			L_PUBKEY(_PATH_HOST_P384_RAINBOW_IIIC_CLASSIC_KEY_FILE, 39);
-			L_PUBKEY(_PATH_HOST_P521_RAINBOW_VC_CLASSIC_KEY_FILE, 40);
-			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE, 41);
-			L_PUBKEY(_PATH_HOST_P256_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE, 42);
-			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_SHA256_128F_ROBUST_KEY_FILE, 43);
-			L_PUBKEY(_PATH_HOST_P256_SPHINCS_SHA256_128F_ROBUST_KEY_FILE, 44);
-			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE, 45);
-			L_PUBKEY(_PATH_HOST_P256_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE, 46);
+			L_PUBKEY(_PATH_HOST_DILITHIUM_3_KEY_FILE, 12);
+			L_PUBKEY(_PATH_HOST_DILITHIUM_4_KEY_FILE, 13);
+			L_PUBKEY(_PATH_HOST_FALCON_512_KEY_FILE, 14);
+			L_PUBKEY(_PATH_HOST_FALCON_1024_KEY_FILE, 15);
+			L_PUBKEY(_PATH_HOST_PICNIC_L1FS_KEY_FILE, 16);
+			L_PUBKEY(_PATH_HOST_PICNIC_L1UR_KEY_FILE, 17);
+			L_PUBKEY(_PATH_HOST_PICNIC_L1FULL_KEY_FILE, 18);
+			L_PUBKEY(_PATH_HOST_PICNIC_L3FS_KEY_FILE, 19);
+			L_PUBKEY(_PATH_HOST_PICNIC_L3UR_KEY_FILE, 20);
+			L_PUBKEY(_PATH_HOST_PICNIC_L3FULL_KEY_FILE, 21);
+			L_PUBKEY(_PATH_HOST_PICNIC_L5FS_KEY_FILE, 22);
+			L_PUBKEY(_PATH_HOST_PICNIC_L5UR_KEY_FILE, 23);
+			L_PUBKEY(_PATH_HOST_PICNIC_L5FULL_KEY_FILE, 24);
+			L_PUBKEY(_PATH_HOST_PICNIC3_L1_KEY_FILE, 25);
+			L_PUBKEY(_PATH_HOST_PICNIC3_L3_KEY_FILE, 26);
+			L_PUBKEY(_PATH_HOST_PICNIC3_L5_KEY_FILE, 27);
+			L_PUBKEY(_PATH_HOST_RAINBOW_IA_CLASSIC_KEY_FILE, 28);
+			L_PUBKEY(_PATH_HOST_RAINBOW_IA_CYCLIC_KEY_FILE, 29);
+			L_PUBKEY(_PATH_HOST_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE, 30);
+			L_PUBKEY(_PATH_HOST_RAINBOW_IIIC_CLASSIC_KEY_FILE, 31);
+			L_PUBKEY(_PATH_HOST_RAINBOW_IIIC_CYCLIC_KEY_FILE, 32);
+			L_PUBKEY(_PATH_HOST_RAINBOW_IIIC_CYCLIC_COMPRESSED_KEY_FILE, 33);
+			L_PUBKEY(_PATH_HOST_RAINBOW_VC_CLASSIC_KEY_FILE, 34);
+			L_PUBKEY(_PATH_HOST_RAINBOW_VC_CYCLIC_KEY_FILE, 35);
+			L_PUBKEY(_PATH_HOST_RAINBOW_VC_CYCLIC_COMPRESSED_KEY_FILE, 36);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE, 37);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE, 38);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE, 39);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE, 40);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_192F_ROBUST_KEY_FILE, 41);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_192F_SIMPLE_KEY_FILE, 42);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_192S_ROBUST_KEY_FILE, 43);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_192S_SIMPLE_KEY_FILE, 44);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_256F_ROBUST_KEY_FILE, 45);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_256F_SIMPLE_KEY_FILE, 46);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_256S_ROBUST_KEY_FILE, 47);
+			L_PUBKEY(_PATH_HOST_SPHINCS_HARAKA_256S_SIMPLE_KEY_FILE, 48);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_128F_ROBUST_KEY_FILE, 49);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE, 50);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_128S_ROBUST_KEY_FILE, 51);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE, 52);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_192F_ROBUST_KEY_FILE, 53);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_192F_SIMPLE_KEY_FILE, 54);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_192S_ROBUST_KEY_FILE, 55);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_192S_SIMPLE_KEY_FILE, 56);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_256F_ROBUST_KEY_FILE, 57);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_256F_SIMPLE_KEY_FILE, 58);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_256S_ROBUST_KEY_FILE, 59);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHA256_256S_SIMPLE_KEY_FILE, 60);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE, 61);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE, 62);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE, 63);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE, 64);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_192F_ROBUST_KEY_FILE, 65);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_192F_SIMPLE_KEY_FILE, 66);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_192S_ROBUST_KEY_FILE, 67);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_192S_SIMPLE_KEY_FILE, 68);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_256F_ROBUST_KEY_FILE, 69);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_256F_SIMPLE_KEY_FILE, 70);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_256S_ROBUST_KEY_FILE, 71);
+			L_PUBKEY(_PATH_HOST_SPHINCS_SHAKE256_256S_SIMPLE_KEY_FILE, 72);
+			L_PUBKEY(_PATH_HOST_RSA3072_OQSDEFAULT_KEY_FILE, 73);
+			L_PUBKEY(_PATH_HOST_P256_OQSDEFAULT_KEY_FILE, 74);
+			L_PUBKEY(_PATH_HOST_RSA3072_DILITHIUM_2_KEY_FILE, 75);
+			L_PUBKEY(_PATH_HOST_P256_DILITHIUM_2_KEY_FILE, 76);
+			L_PUBKEY(_PATH_HOST_RSA3072_DILITHIUM_3_KEY_FILE, 77);
+			L_PUBKEY(_PATH_HOST_P256_DILITHIUM_3_KEY_FILE, 78);
+			L_PUBKEY(_PATH_HOST_P384_DILITHIUM_4_KEY_FILE, 79);
+			L_PUBKEY(_PATH_HOST_RSA3072_FALCON_512_KEY_FILE, 80);
+			L_PUBKEY(_PATH_HOST_P256_FALCON_512_KEY_FILE, 81);
+			L_PUBKEY(_PATH_HOST_P521_FALCON_1024_KEY_FILE, 82);
+			L_PUBKEY(_PATH_HOST_RSA3072_PICNIC_L1FS_KEY_FILE, 83);
+			L_PUBKEY(_PATH_HOST_P256_PICNIC_L1FS_KEY_FILE, 84);
+			L_PUBKEY(_PATH_HOST_RSA3072_PICNIC_L1UR_KEY_FILE, 85);
+			L_PUBKEY(_PATH_HOST_P256_PICNIC_L1UR_KEY_FILE, 86);
+			L_PUBKEY(_PATH_HOST_RSA3072_PICNIC_L1FULL_KEY_FILE, 87);
+			L_PUBKEY(_PATH_HOST_P256_PICNIC_L1FULL_KEY_FILE, 88);
+			L_PUBKEY(_PATH_HOST_P384_PICNIC_L3FS_KEY_FILE, 89);
+			L_PUBKEY(_PATH_HOST_P384_PICNIC_L3UR_KEY_FILE, 90);
+			L_PUBKEY(_PATH_HOST_P384_PICNIC_L3FULL_KEY_FILE, 91);
+			L_PUBKEY(_PATH_HOST_P521_PICNIC_L5FS_KEY_FILE, 92);
+			L_PUBKEY(_PATH_HOST_P521_PICNIC_L5UR_KEY_FILE, 93);
+			L_PUBKEY(_PATH_HOST_P521_PICNIC_L5FULL_KEY_FILE, 94);
+			L_PUBKEY(_PATH_HOST_RSA3072_PICNIC3_L1_KEY_FILE, 95);
+			L_PUBKEY(_PATH_HOST_P256_PICNIC3_L1_KEY_FILE, 96);
+			L_PUBKEY(_PATH_HOST_P384_PICNIC3_L3_KEY_FILE, 97);
+			L_PUBKEY(_PATH_HOST_P521_PICNIC3_L5_KEY_FILE, 98);
+			L_PUBKEY(_PATH_HOST_RSA3072_RAINBOW_IA_CLASSIC_KEY_FILE, 99);
+			L_PUBKEY(_PATH_HOST_P256_RAINBOW_IA_CLASSIC_KEY_FILE, 100);
+			L_PUBKEY(_PATH_HOST_RSA3072_RAINBOW_IA_CYCLIC_KEY_FILE, 101);
+			L_PUBKEY(_PATH_HOST_P256_RAINBOW_IA_CYCLIC_KEY_FILE, 102);
+			L_PUBKEY(_PATH_HOST_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE, 103);
+			L_PUBKEY(_PATH_HOST_P256_RAINBOW_IA_CYCLIC_COMPRESSED_KEY_FILE, 104);
+			L_PUBKEY(_PATH_HOST_P384_RAINBOW_IIIC_CLASSIC_KEY_FILE, 105);
+			L_PUBKEY(_PATH_HOST_P384_RAINBOW_IIIC_CYCLIC_KEY_FILE, 106);
+			L_PUBKEY(_PATH_HOST_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED_KEY_FILE, 107);
+			L_PUBKEY(_PATH_HOST_P521_RAINBOW_VC_CLASSIC_KEY_FILE, 108);
+			L_PUBKEY(_PATH_HOST_P521_RAINBOW_VC_CYCLIC_KEY_FILE, 109);
+			L_PUBKEY(_PATH_HOST_P521_RAINBOW_VC_CYCLIC_COMPRESSED_KEY_FILE, 110);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE, 111);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_HARAKA_128F_ROBUST_KEY_FILE, 112);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE, 113);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_HARAKA_128F_SIMPLE_KEY_FILE, 114);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE, 115);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_HARAKA_128S_ROBUST_KEY_FILE, 116);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE, 117);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_HARAKA_128S_SIMPLE_KEY_FILE, 118);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_HARAKA_192F_ROBUST_KEY_FILE, 119);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_HARAKA_192F_SIMPLE_KEY_FILE, 120);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_HARAKA_192S_ROBUST_KEY_FILE, 121);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_HARAKA_192S_SIMPLE_KEY_FILE, 122);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_HARAKA_256F_ROBUST_KEY_FILE, 123);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_HARAKA_256F_SIMPLE_KEY_FILE, 124);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_HARAKA_256S_ROBUST_KEY_FILE, 125);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_HARAKA_256S_SIMPLE_KEY_FILE, 126);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_SHA256_128F_ROBUST_KEY_FILE, 127);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_SHA256_128F_ROBUST_KEY_FILE, 128);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE, 129);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_SHA256_128F_SIMPLE_KEY_FILE, 130);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_SHA256_128S_ROBUST_KEY_FILE, 131);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_SHA256_128S_ROBUST_KEY_FILE, 132);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE, 133);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_SHA256_128S_SIMPLE_KEY_FILE, 134);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_SHA256_192F_ROBUST_KEY_FILE, 135);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_SHA256_192F_SIMPLE_KEY_FILE, 136);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_SHA256_192S_ROBUST_KEY_FILE, 137);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_SHA256_192S_SIMPLE_KEY_FILE, 138);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_SHA256_256F_ROBUST_KEY_FILE, 139);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_SHA256_256F_SIMPLE_KEY_FILE, 140);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_SHA256_256S_ROBUST_KEY_FILE, 141);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_SHA256_256S_SIMPLE_KEY_FILE, 142);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE, 143);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_SHAKE256_128F_ROBUST_KEY_FILE, 144);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE, 145);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_SHAKE256_128F_SIMPLE_KEY_FILE, 146);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE, 147);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_SHAKE256_128S_ROBUST_KEY_FILE, 148);
+			L_PUBKEY(_PATH_HOST_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE, 149);
+			L_PUBKEY(_PATH_HOST_P256_SPHINCS_SHAKE256_128S_SIMPLE_KEY_FILE, 150);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_SHAKE256_192F_ROBUST_KEY_FILE, 151);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_SHAKE256_192F_SIMPLE_KEY_FILE, 152);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_SHAKE256_192S_ROBUST_KEY_FILE, 153);
+			L_PUBKEY(_PATH_HOST_P384_SPHINCS_SHAKE256_192S_SIMPLE_KEY_FILE, 154);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_SHAKE256_256F_ROBUST_KEY_FILE, 155);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_SHAKE256_256F_SIMPLE_KEY_FILE, 156);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_SHAKE256_256S_ROBUST_KEY_FILE, 157);
+			L_PUBKEY(_PATH_HOST_P521_SPHINCS_SHAKE256_256S_SIMPLE_KEY_FILE, 158);
 ///// OQS_TEMPLATE_FRAGMENT_LOAD_PUBKEYS_END
 		}
 	}
diff --git a/sshconnect.c b/sshconnect.c
index b75e02a0..726ce606 100644
--- a/sshconnect.c
+++ b/sshconnect.c
@@ -1459,41 +1459,153 @@ show_other_keys(struct hostkeys *hostkeys, struct sshkey *key)
 ///// OQS_TEMPLATE_FRAGMENT_LIST_KT_START
 		KEY_OQSDEFAULT,
 		KEY_DILITHIUM_2,
+		KEY_DILITHIUM_3,
+		KEY_DILITHIUM_4,
 		KEY_FALCON_512,
-		KEY_MQDSS_31_48,
+		KEY_FALCON_1024,
 		KEY_PICNIC_L1FS,
+		KEY_PICNIC_L1UR,
+		KEY_PICNIC_L1FULL,
+		KEY_PICNIC_L3FS,
+		KEY_PICNIC_L3UR,
+		KEY_PICNIC_L3FULL,
+		KEY_PICNIC_L5FS,
+		KEY_PICNIC_L5UR,
+		KEY_PICNIC_L5FULL,
 		KEY_PICNIC3_L1,
-		KEY_QTESLA_P_I,
+		KEY_PICNIC3_L3,
+		KEY_PICNIC3_L5,
 		KEY_RAINBOW_IA_CLASSIC,
+		KEY_RAINBOW_IA_CYCLIC,
+		KEY_RAINBOW_IA_CYCLIC_COMPRESSED,
 		KEY_RAINBOW_IIIC_CLASSIC,
+		KEY_RAINBOW_IIIC_CYCLIC,
+		KEY_RAINBOW_IIIC_CYCLIC_COMPRESSED,
 		KEY_RAINBOW_VC_CLASSIC,
+		KEY_RAINBOW_VC_CYCLIC,
+		KEY_RAINBOW_VC_CYCLIC_COMPRESSED,
 		KEY_SPHINCS_HARAKA_128F_ROBUST,
+		KEY_SPHINCS_HARAKA_128F_SIMPLE,
+		KEY_SPHINCS_HARAKA_128S_ROBUST,
+		KEY_SPHINCS_HARAKA_128S_SIMPLE,
+		KEY_SPHINCS_HARAKA_192F_ROBUST,
+		KEY_SPHINCS_HARAKA_192F_SIMPLE,
+		KEY_SPHINCS_HARAKA_192S_ROBUST,
+		KEY_SPHINCS_HARAKA_192S_SIMPLE,
+		KEY_SPHINCS_HARAKA_256F_ROBUST,
+		KEY_SPHINCS_HARAKA_256F_SIMPLE,
+		KEY_SPHINCS_HARAKA_256S_ROBUST,
+		KEY_SPHINCS_HARAKA_256S_SIMPLE,
 		KEY_SPHINCS_SHA256_128F_ROBUST,
+		KEY_SPHINCS_SHA256_128F_SIMPLE,
+		KEY_SPHINCS_SHA256_128S_ROBUST,
+		KEY_SPHINCS_SHA256_128S_SIMPLE,
+		KEY_SPHINCS_SHA256_192F_ROBUST,
+		KEY_SPHINCS_SHA256_192F_SIMPLE,
+		KEY_SPHINCS_SHA256_192S_ROBUST,
+		KEY_SPHINCS_SHA256_192S_SIMPLE,
+		KEY_SPHINCS_SHA256_256F_ROBUST,
+		KEY_SPHINCS_SHA256_256F_SIMPLE,
+		KEY_SPHINCS_SHA256_256S_ROBUST,
+		KEY_SPHINCS_SHA256_256S_SIMPLE,
 		KEY_SPHINCS_SHAKE256_128F_ROBUST,
+		KEY_SPHINCS_SHAKE256_128F_SIMPLE,
+		KEY_SPHINCS_SHAKE256_128S_ROBUST,
+		KEY_SPHINCS_SHAKE256_128S_SIMPLE,
+		KEY_SPHINCS_SHAKE256_192F_ROBUST,
+		KEY_SPHINCS_SHAKE256_192F_SIMPLE,
+		KEY_SPHINCS_SHAKE256_192S_ROBUST,
+		KEY_SPHINCS_SHAKE256_192S_SIMPLE,
+		KEY_SPHINCS_SHAKE256_256F_ROBUST,
+		KEY_SPHINCS_SHAKE256_256F_SIMPLE,
+		KEY_SPHINCS_SHAKE256_256S_ROBUST,
+		KEY_SPHINCS_SHAKE256_256S_SIMPLE,
 		KEY_RSA3072_OQSDEFAULT,
 		KEY_P256_OQSDEFAULT,
 		KEY_RSA3072_DILITHIUM_2,
 		KEY_P256_DILITHIUM_2,
+		KEY_RSA3072_DILITHIUM_3,
+		KEY_P256_DILITHIUM_3,
+		KEY_P384_DILITHIUM_4,
 		KEY_RSA3072_FALCON_512,
 		KEY_P256_FALCON_512,
-		KEY_RSA3072_MQDSS_31_48,
-		KEY_P256_MQDSS_31_48,
+		KEY_P521_FALCON_1024,
 		KEY_RSA3072_PICNIC_L1FS,
 		KEY_P256_PICNIC_L1FS,
+		KEY_RSA3072_PICNIC_L1UR,
+		KEY_P256_PICNIC_L1UR,
+		KEY_RSA3072_PICNIC_L1FULL,
+		KEY_P256_PICNIC_L1FULL,
+		KEY_P384_PICNIC_L3FS,
+		KEY_P384_PICNIC_L3UR,
+		KEY_P384_PICNIC_L3FULL,
+		KEY_P521_PICNIC_L5FS,
+		KEY_P521_PICNIC_L5UR,
+		KEY_P521_PICNIC_L5FULL,
 		KEY_RSA3072_PICNIC3_L1,
 		KEY_P256_PICNIC3_L1,
-		KEY_RSA3072_QTESLA_P_I,
-		KEY_P256_QTESLA_P_I,
+		KEY_P384_PICNIC3_L3,
+		KEY_P521_PICNIC3_L5,
 		KEY_RSA3072_RAINBOW_IA_CLASSIC,
 		KEY_P256_RAINBOW_IA_CLASSIC,
+		KEY_RSA3072_RAINBOW_IA_CYCLIC,
+		KEY_P256_RAINBOW_IA_CYCLIC,
+		KEY_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED,
+		KEY_P256_RAINBOW_IA_CYCLIC_COMPRESSED,
 		KEY_P384_RAINBOW_IIIC_CLASSIC,
+		KEY_P384_RAINBOW_IIIC_CYCLIC,
+		KEY_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED,
 		KEY_P521_RAINBOW_VC_CLASSIC,
+		KEY_P521_RAINBOW_VC_CYCLIC,
+		KEY_P521_RAINBOW_VC_CYCLIC_COMPRESSED,
 		KEY_RSA3072_SPHINCS_HARAKA_128F_ROBUST,
 		KEY_P256_SPHINCS_HARAKA_128F_ROBUST,
+		KEY_RSA3072_SPHINCS_HARAKA_128F_SIMPLE,
+		KEY_P256_SPHINCS_HARAKA_128F_SIMPLE,
+		KEY_RSA3072_SPHINCS_HARAKA_128S_ROBUST,
+		KEY_P256_SPHINCS_HARAKA_128S_ROBUST,
+		KEY_RSA3072_SPHINCS_HARAKA_128S_SIMPLE,
+		KEY_P256_SPHINCS_HARAKA_128S_SIMPLE,
+		KEY_P384_SPHINCS_HARAKA_192F_ROBUST,
+		KEY_P384_SPHINCS_HARAKA_192F_SIMPLE,
+		KEY_P384_SPHINCS_HARAKA_192S_ROBUST,
+		KEY_P384_SPHINCS_HARAKA_192S_SIMPLE,
+		KEY_P521_SPHINCS_HARAKA_256F_ROBUST,
+		KEY_P521_SPHINCS_HARAKA_256F_SIMPLE,
+		KEY_P521_SPHINCS_HARAKA_256S_ROBUST,
+		KEY_P521_SPHINCS_HARAKA_256S_SIMPLE,
 		KEY_RSA3072_SPHINCS_SHA256_128F_ROBUST,
 		KEY_P256_SPHINCS_SHA256_128F_ROBUST,
+		KEY_RSA3072_SPHINCS_SHA256_128F_SIMPLE,
+		KEY_P256_SPHINCS_SHA256_128F_SIMPLE,
+		KEY_RSA3072_SPHINCS_SHA256_128S_ROBUST,
+		KEY_P256_SPHINCS_SHA256_128S_ROBUST,
+		KEY_RSA3072_SPHINCS_SHA256_128S_SIMPLE,
+		KEY_P256_SPHINCS_SHA256_128S_SIMPLE,
+		KEY_P384_SPHINCS_SHA256_192F_ROBUST,
+		KEY_P384_SPHINCS_SHA256_192F_SIMPLE,
+		KEY_P384_SPHINCS_SHA256_192S_ROBUST,
+		KEY_P384_SPHINCS_SHA256_192S_SIMPLE,
+		KEY_P521_SPHINCS_SHA256_256F_ROBUST,
+		KEY_P521_SPHINCS_SHA256_256F_SIMPLE,
+		KEY_P521_SPHINCS_SHA256_256S_ROBUST,
+		KEY_P521_SPHINCS_SHA256_256S_SIMPLE,
 		KEY_RSA3072_SPHINCS_SHAKE256_128F_ROBUST,
 		KEY_P256_SPHINCS_SHAKE256_128F_ROBUST,
+		KEY_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE,
+		KEY_P256_SPHINCS_SHAKE256_128F_SIMPLE,
+		KEY_RSA3072_SPHINCS_SHAKE256_128S_ROBUST,
+		KEY_P256_SPHINCS_SHAKE256_128S_ROBUST,
+		KEY_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE,
+		KEY_P256_SPHINCS_SHAKE256_128S_SIMPLE,
+		KEY_P384_SPHINCS_SHAKE256_192F_ROBUST,
+		KEY_P384_SPHINCS_SHAKE256_192F_SIMPLE,
+		KEY_P384_SPHINCS_SHAKE256_192S_ROBUST,
+		KEY_P384_SPHINCS_SHAKE256_192S_SIMPLE,
+		KEY_P521_SPHINCS_SHAKE256_256F_ROBUST,
+		KEY_P521_SPHINCS_SHAKE256_256F_SIMPLE,
+		KEY_P521_SPHINCS_SHAKE256_256S_ROBUST,
+		KEY_P521_SPHINCS_SHAKE256_256S_SIMPLE,
 ///// OQS_TEMPLATE_FRAGMENT_LIST_KT_END
 		-1
 	};
diff --git a/sshkey.c b/sshkey.c
index 02ecac6e..4427ba25 100644
--- a/sshkey.c
+++ b/sshkey.c
@@ -129,17 +129,67 @@ static const struct keytype keytypes[] = {
 ///// OQS_TEMPLATE_FRAGMENT_ADD_PQ_KT_START
 	{ "ssh-oqsdefault", "OQSDEFAULT", NULL, KEY_OQSDEFAULT, 0, 0, 0 },
 	{ "ssh-dilithium2", "DILITHIUM2", NULL, KEY_DILITHIUM_2, 0, 0, 0 },
+	{ "ssh-dilithium3", "DILITHIUM3", NULL, KEY_DILITHIUM_3, 0, 0, 0 },
+	{ "ssh-dilithium4", "DILITHIUM4", NULL, KEY_DILITHIUM_4, 0, 0, 0 },
 	{ "ssh-falcon512", "FALCON512", NULL, KEY_FALCON_512, 0, 0, 0 },
-	{ "ssh-mqdss3148", "MQDSS3148", NULL, KEY_MQDSS_31_48, 0, 0, 0 },
+	{ "ssh-falcon1024", "FALCON1024", NULL, KEY_FALCON_1024, 0, 0, 0 },
 	{ "ssh-picnicl1fs", "PICNICL1FS", NULL, KEY_PICNIC_L1FS, 0, 0, 0 },
+	{ "ssh-picnicl1ur", "PICNICL1UR", NULL, KEY_PICNIC_L1UR, 0, 0, 0 },
+	{ "ssh-picnicl1full", "PICNICL1FULL", NULL, KEY_PICNIC_L1FULL, 0, 0, 0 },
+	{ "ssh-picnicl3fs", "PICNICL3FS", NULL, KEY_PICNIC_L3FS, 0, 0, 0 },
+	{ "ssh-picnicl3ur", "PICNICL3UR", NULL, KEY_PICNIC_L3UR, 0, 0, 0 },
+	{ "ssh-picnicl3full", "PICNICL3FULL", NULL, KEY_PICNIC_L3FULL, 0, 0, 0 },
+	{ "ssh-picnicl5fs", "PICNICL5FS", NULL, KEY_PICNIC_L5FS, 0, 0, 0 },
+	{ "ssh-picnicl5ur", "PICNICL5UR", NULL, KEY_PICNIC_L5UR, 0, 0, 0 },
+	{ "ssh-picnicl5full", "PICNICL5FULL", NULL, KEY_PICNIC_L5FULL, 0, 0, 0 },
 	{ "ssh-picnic3l1", "PICNIC3L1", NULL, KEY_PICNIC3_L1, 0, 0, 0 },
-	{ "ssh-qteslapi", "QTESLAPI", NULL, KEY_QTESLA_P_I, 0, 0, 0 },
+	{ "ssh-picnic3l3", "PICNIC3L3", NULL, KEY_PICNIC3_L3, 0, 0, 0 },
+	{ "ssh-picnic3l5", "PICNIC3L5", NULL, KEY_PICNIC3_L5, 0, 0, 0 },
 	{ "ssh-rainbowiaclassic", "RAINBOWIACLASSIC", NULL, KEY_RAINBOW_IA_CLASSIC, 0, 0, 0 },
+	{ "ssh-rainbowiacyclic", "RAINBOWIACYCLIC", NULL, KEY_RAINBOW_IA_CYCLIC, 0, 0, 0 },
+	{ "ssh-rainbowiacycliccompressed", "RAINBOWIACYCLICCOMPRESSED", NULL, KEY_RAINBOW_IA_CYCLIC_COMPRESSED, 0, 0, 0 },
 	{ "ssh-rainbowiiicclassic", "RAINBOWIIICCLASSIC", NULL, KEY_RAINBOW_IIIC_CLASSIC, 0, 0, 0 },
+	{ "ssh-rainbowiiiccyclic", "RAINBOWIIICCYCLIC", NULL, KEY_RAINBOW_IIIC_CYCLIC, 0, 0, 0 },
+	{ "ssh-rainbowiiiccycliccompressed", "RAINBOWIIICCYCLICCOMPRESSED", NULL, KEY_RAINBOW_IIIC_CYCLIC_COMPRESSED, 0, 0, 0 },
 	{ "ssh-rainbowvcclassic", "RAINBOWVCCLASSIC", NULL, KEY_RAINBOW_VC_CLASSIC, 0, 0, 0 },
+	{ "ssh-rainbowvccyclic", "RAINBOWVCCYCLIC", NULL, KEY_RAINBOW_VC_CYCLIC, 0, 0, 0 },
+	{ "ssh-rainbowvccycliccompressed", "RAINBOWVCCYCLICCOMPRESSED", NULL, KEY_RAINBOW_VC_CYCLIC_COMPRESSED, 0, 0, 0 },
 	{ "ssh-sphincsharaka128frobust", "SPHINCSHARAKA128FROBUST", NULL, KEY_SPHINCS_HARAKA_128F_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsharaka128fsimple", "SPHINCSHARAKA128FSIMPLE", NULL, KEY_SPHINCS_HARAKA_128F_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincsharaka128srobust", "SPHINCSHARAKA128SROBUST", NULL, KEY_SPHINCS_HARAKA_128S_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsharaka128ssimple", "SPHINCSHARAKA128SSIMPLE", NULL, KEY_SPHINCS_HARAKA_128S_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincsharaka192frobust", "SPHINCSHARAKA192FROBUST", NULL, KEY_SPHINCS_HARAKA_192F_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsharaka192fsimple", "SPHINCSHARAKA192FSIMPLE", NULL, KEY_SPHINCS_HARAKA_192F_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincsharaka192srobust", "SPHINCSHARAKA192SROBUST", NULL, KEY_SPHINCS_HARAKA_192S_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsharaka192ssimple", "SPHINCSHARAKA192SSIMPLE", NULL, KEY_SPHINCS_HARAKA_192S_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincsharaka256frobust", "SPHINCSHARAKA256FROBUST", NULL, KEY_SPHINCS_HARAKA_256F_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsharaka256fsimple", "SPHINCSHARAKA256FSIMPLE", NULL, KEY_SPHINCS_HARAKA_256F_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincsharaka256srobust", "SPHINCSHARAKA256SROBUST", NULL, KEY_SPHINCS_HARAKA_256S_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsharaka256ssimple", "SPHINCSHARAKA256SSIMPLE", NULL, KEY_SPHINCS_HARAKA_256S_SIMPLE, 0, 0, 0 },
 	{ "ssh-sphincssha256128frobust", "SPHINCSSHA256128FROBUST", NULL, KEY_SPHINCS_SHA256_128F_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincssha256128fsimple", "SPHINCSSHA256128FSIMPLE", NULL, KEY_SPHINCS_SHA256_128F_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincssha256128srobust", "SPHINCSSHA256128SROBUST", NULL, KEY_SPHINCS_SHA256_128S_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincssha256128ssimple", "SPHINCSSHA256128SSIMPLE", NULL, KEY_SPHINCS_SHA256_128S_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincssha256192frobust", "SPHINCSSHA256192FROBUST", NULL, KEY_SPHINCS_SHA256_192F_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincssha256192fsimple", "SPHINCSSHA256192FSIMPLE", NULL, KEY_SPHINCS_SHA256_192F_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincssha256192srobust", "SPHINCSSHA256192SROBUST", NULL, KEY_SPHINCS_SHA256_192S_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincssha256192ssimple", "SPHINCSSHA256192SSIMPLE", NULL, KEY_SPHINCS_SHA256_192S_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincssha256256frobust", "SPHINCSSHA256256FROBUST", NULL, KEY_SPHINCS_SHA256_256F_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincssha256256fsimple", "SPHINCSSHA256256FSIMPLE", NULL, KEY_SPHINCS_SHA256_256F_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincssha256256srobust", "SPHINCSSHA256256SROBUST", NULL, KEY_SPHINCS_SHA256_256S_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincssha256256ssimple", "SPHINCSSHA256256SSIMPLE", NULL, KEY_SPHINCS_SHA256_256S_SIMPLE, 0, 0, 0 },
 	{ "ssh-sphincsshake256128frobust", "SPHINCSSHAKE256128FROBUST", NULL, KEY_SPHINCS_SHAKE256_128F_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsshake256128fsimple", "SPHINCSSHAKE256128FSIMPLE", NULL, KEY_SPHINCS_SHAKE256_128F_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincsshake256128srobust", "SPHINCSSHAKE256128SROBUST", NULL, KEY_SPHINCS_SHAKE256_128S_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsshake256128ssimple", "SPHINCSSHAKE256128SSIMPLE", NULL, KEY_SPHINCS_SHAKE256_128S_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincsshake256192frobust", "SPHINCSSHAKE256192FROBUST", NULL, KEY_SPHINCS_SHAKE256_192F_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsshake256192fsimple", "SPHINCSSHAKE256192FSIMPLE", NULL, KEY_SPHINCS_SHAKE256_192F_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincsshake256192srobust", "SPHINCSSHAKE256192SROBUST", NULL, KEY_SPHINCS_SHAKE256_192S_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsshake256192ssimple", "SPHINCSSHAKE256192SSIMPLE", NULL, KEY_SPHINCS_SHAKE256_192S_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincsshake256256frobust", "SPHINCSSHAKE256256FROBUST", NULL, KEY_SPHINCS_SHAKE256_256F_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsshake256256fsimple", "SPHINCSSHAKE256256FSIMPLE", NULL, KEY_SPHINCS_SHAKE256_256F_SIMPLE, 0, 0, 0 },
+	{ "ssh-sphincsshake256256srobust", "SPHINCSSHAKE256256SROBUST", NULL, KEY_SPHINCS_SHAKE256_256S_ROBUST, 0, 0, 0 },
+	{ "ssh-sphincsshake256256ssimple", "SPHINCSSHAKE256256SSIMPLE", NULL, KEY_SPHINCS_SHAKE256_256S_SIMPLE, 0, 0, 0 },
 ///// OQS_TEMPLATE_FRAGMENT_ADD_PQ_KT_END
 #endif /* WITH_PQ_AUTH */
 #ifdef WITH_HYBRID_AUTH
@@ -148,26 +198,88 @@ static const struct keytype keytypes[] = {
 	{ "ssh-p256-oqsdefault", "P256_OQSDEFAULT", NULL, KEY_P256_OQSDEFAULT, NID_X9_62_prime256v1, 0, 0 },
 	{ "ssh-rsa3072-dilithium2", "RSA3072_DILITHIUM2", NULL, KEY_RSA3072_DILITHIUM_2, 0, 0, 0 },
 	{ "ssh-p256-dilithium2", "P256_DILITHIUM2", NULL, KEY_P256_DILITHIUM_2, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-dilithium3", "RSA3072_DILITHIUM3", NULL, KEY_RSA3072_DILITHIUM_3, 0, 0, 0 },
+	{ "ssh-p256-dilithium3", "P256_DILITHIUM3", NULL, KEY_P256_DILITHIUM_3, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-p384-dilithium4", "P384_DILITHIUM4", NULL, KEY_P384_DILITHIUM_4, NID_secp384r1, 0, 0 },
 	{ "ssh-rsa3072-falcon512", "RSA3072_FALCON512", NULL, KEY_RSA3072_FALCON_512, 0, 0, 0 },
 	{ "ssh-p256-falcon512", "P256_FALCON512", NULL, KEY_P256_FALCON_512, NID_X9_62_prime256v1, 0, 0 },
-	{ "ssh-rsa3072-mqdss3148", "RSA3072_MQDSS3148", NULL, KEY_RSA3072_MQDSS_31_48, 0, 0, 0 },
-	{ "ssh-p256-mqdss3148", "P256_MQDSS3148", NULL, KEY_P256_MQDSS_31_48, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-p521-falcon1024", "P521_FALCON1024", NULL, KEY_P521_FALCON_1024, NID_secp521r1, 0, 0 },
 	{ "ssh-rsa3072-picnicl1fs", "RSA3072_PICNICL1FS", NULL, KEY_RSA3072_PICNIC_L1FS, 0, 0, 0 },
 	{ "ssh-p256-picnicl1fs", "P256_PICNICL1FS", NULL, KEY_P256_PICNIC_L1FS, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-picnicl1ur", "RSA3072_PICNICL1UR", NULL, KEY_RSA3072_PICNIC_L1UR, 0, 0, 0 },
+	{ "ssh-p256-picnicl1ur", "P256_PICNICL1UR", NULL, KEY_P256_PICNIC_L1UR, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-picnicl1full", "RSA3072_PICNICL1FULL", NULL, KEY_RSA3072_PICNIC_L1FULL, 0, 0, 0 },
+	{ "ssh-p256-picnicl1full", "P256_PICNICL1FULL", NULL, KEY_P256_PICNIC_L1FULL, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-p384-picnicl3fs", "P384_PICNICL3FS", NULL, KEY_P384_PICNIC_L3FS, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-picnicl3ur", "P384_PICNICL3UR", NULL, KEY_P384_PICNIC_L3UR, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-picnicl3full", "P384_PICNICL3FULL", NULL, KEY_P384_PICNIC_L3FULL, NID_secp384r1, 0, 0 },
+	{ "ssh-p521-picnicl5fs", "P521_PICNICL5FS", NULL, KEY_P521_PICNIC_L5FS, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-picnicl5ur", "P521_PICNICL5UR", NULL, KEY_P521_PICNIC_L5UR, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-picnicl5full", "P521_PICNICL5FULL", NULL, KEY_P521_PICNIC_L5FULL, NID_secp521r1, 0, 0 },
 	{ "ssh-rsa3072-picnic3l1", "RSA3072_PICNIC3L1", NULL, KEY_RSA3072_PICNIC3_L1, 0, 0, 0 },
 	{ "ssh-p256-picnic3l1", "P256_PICNIC3L1", NULL, KEY_P256_PICNIC3_L1, NID_X9_62_prime256v1, 0, 0 },
-	{ "ssh-rsa3072-qteslapi", "RSA3072_QTESLAPI", NULL, KEY_RSA3072_QTESLA_P_I, 0, 0, 0 },
-	{ "ssh-p256-qteslapi", "P256_QTESLAPI", NULL, KEY_P256_QTESLA_P_I, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-p384-picnic3l3", "P384_PICNIC3L3", NULL, KEY_P384_PICNIC3_L3, NID_secp384r1, 0, 0 },
+	{ "ssh-p521-picnic3l5", "P521_PICNIC3L5", NULL, KEY_P521_PICNIC3_L5, NID_secp521r1, 0, 0 },
 	{ "ssh-rsa3072-rainbowiaclassic", "RSA3072_RAINBOWIACLASSIC", NULL, KEY_RSA3072_RAINBOW_IA_CLASSIC, 0, 0, 0 },
 	{ "ssh-p256-rainbowiaclassic", "P256_RAINBOWIACLASSIC", NULL, KEY_P256_RAINBOW_IA_CLASSIC, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-rainbowiacyclic", "RSA3072_RAINBOWIACYCLIC", NULL, KEY_RSA3072_RAINBOW_IA_CYCLIC, 0, 0, 0 },
+	{ "ssh-p256-rainbowiacyclic", "P256_RAINBOWIACYCLIC", NULL, KEY_P256_RAINBOW_IA_CYCLIC, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-rainbowiacycliccompressed", "RSA3072_RAINBOWIACYCLICCOMPRESSED", NULL, KEY_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED, 0, 0, 0 },
+	{ "ssh-p256-rainbowiacycliccompressed", "P256_RAINBOWIACYCLICCOMPRESSED", NULL, KEY_P256_RAINBOW_IA_CYCLIC_COMPRESSED, NID_X9_62_prime256v1, 0, 0 },
 	{ "ssh-p384-rainbowiiicclassic", "P384_RAINBOWIIICCLASSIC", NULL, KEY_P384_RAINBOW_IIIC_CLASSIC, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-rainbowiiiccyclic", "P384_RAINBOWIIICCYCLIC", NULL, KEY_P384_RAINBOW_IIIC_CYCLIC, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-rainbowiiiccycliccompressed", "P384_RAINBOWIIICCYCLICCOMPRESSED", NULL, KEY_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED, NID_secp384r1, 0, 0 },
 	{ "ssh-p521-rainbowvcclassic", "P521_RAINBOWVCCLASSIC", NULL, KEY_P521_RAINBOW_VC_CLASSIC, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-rainbowvccyclic", "P521_RAINBOWVCCYCLIC", NULL, KEY_P521_RAINBOW_VC_CYCLIC, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-rainbowvccycliccompressed", "P521_RAINBOWVCCYCLICCOMPRESSED", NULL, KEY_P521_RAINBOW_VC_CYCLIC_COMPRESSED, NID_secp521r1, 0, 0 },
 	{ "ssh-rsa3072-sphincsharaka128frobust", "RSA3072_SPHINCSHARAKA128FROBUST", NULL, KEY_RSA3072_SPHINCS_HARAKA_128F_ROBUST, 0, 0, 0 },
 	{ "ssh-p256-sphincsharaka128frobust", "P256_SPHINCSHARAKA128FROBUST", NULL, KEY_P256_SPHINCS_HARAKA_128F_ROBUST, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-sphincsharaka128fsimple", "RSA3072_SPHINCSHARAKA128FSIMPLE", NULL, KEY_RSA3072_SPHINCS_HARAKA_128F_SIMPLE, 0, 0, 0 },
+	{ "ssh-p256-sphincsharaka128fsimple", "P256_SPHINCSHARAKA128FSIMPLE", NULL, KEY_P256_SPHINCS_HARAKA_128F_SIMPLE, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-sphincsharaka128srobust", "RSA3072_SPHINCSHARAKA128SROBUST", NULL, KEY_RSA3072_SPHINCS_HARAKA_128S_ROBUST, 0, 0, 0 },
+	{ "ssh-p256-sphincsharaka128srobust", "P256_SPHINCSHARAKA128SROBUST", NULL, KEY_P256_SPHINCS_HARAKA_128S_ROBUST, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-sphincsharaka128ssimple", "RSA3072_SPHINCSHARAKA128SSIMPLE", NULL, KEY_RSA3072_SPHINCS_HARAKA_128S_SIMPLE, 0, 0, 0 },
+	{ "ssh-p256-sphincsharaka128ssimple", "P256_SPHINCSHARAKA128SSIMPLE", NULL, KEY_P256_SPHINCS_HARAKA_128S_SIMPLE, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-p384-sphincsharaka192frobust", "P384_SPHINCSHARAKA192FROBUST", NULL, KEY_P384_SPHINCS_HARAKA_192F_ROBUST, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-sphincsharaka192fsimple", "P384_SPHINCSHARAKA192FSIMPLE", NULL, KEY_P384_SPHINCS_HARAKA_192F_SIMPLE, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-sphincsharaka192srobust", "P384_SPHINCSHARAKA192SROBUST", NULL, KEY_P384_SPHINCS_HARAKA_192S_ROBUST, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-sphincsharaka192ssimple", "P384_SPHINCSHARAKA192SSIMPLE", NULL, KEY_P384_SPHINCS_HARAKA_192S_SIMPLE, NID_secp384r1, 0, 0 },
+	{ "ssh-p521-sphincsharaka256frobust", "P521_SPHINCSHARAKA256FROBUST", NULL, KEY_P521_SPHINCS_HARAKA_256F_ROBUST, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-sphincsharaka256fsimple", "P521_SPHINCSHARAKA256FSIMPLE", NULL, KEY_P521_SPHINCS_HARAKA_256F_SIMPLE, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-sphincsharaka256srobust", "P521_SPHINCSHARAKA256SROBUST", NULL, KEY_P521_SPHINCS_HARAKA_256S_ROBUST, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-sphincsharaka256ssimple", "P521_SPHINCSHARAKA256SSIMPLE", NULL, KEY_P521_SPHINCS_HARAKA_256S_SIMPLE, NID_secp521r1, 0, 0 },
 	{ "ssh-rsa3072-sphincssha256128frobust", "RSA3072_SPHINCSSHA256128FROBUST", NULL, KEY_RSA3072_SPHINCS_SHA256_128F_ROBUST, 0, 0, 0 },
 	{ "ssh-p256-sphincssha256128frobust", "P256_SPHINCSSHA256128FROBUST", NULL, KEY_P256_SPHINCS_SHA256_128F_ROBUST, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-sphincssha256128fsimple", "RSA3072_SPHINCSSHA256128FSIMPLE", NULL, KEY_RSA3072_SPHINCS_SHA256_128F_SIMPLE, 0, 0, 0 },
+	{ "ssh-p256-sphincssha256128fsimple", "P256_SPHINCSSHA256128FSIMPLE", NULL, KEY_P256_SPHINCS_SHA256_128F_SIMPLE, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-sphincssha256128srobust", "RSA3072_SPHINCSSHA256128SROBUST", NULL, KEY_RSA3072_SPHINCS_SHA256_128S_ROBUST, 0, 0, 0 },
+	{ "ssh-p256-sphincssha256128srobust", "P256_SPHINCSSHA256128SROBUST", NULL, KEY_P256_SPHINCS_SHA256_128S_ROBUST, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-sphincssha256128ssimple", "RSA3072_SPHINCSSHA256128SSIMPLE", NULL, KEY_RSA3072_SPHINCS_SHA256_128S_SIMPLE, 0, 0, 0 },
+	{ "ssh-p256-sphincssha256128ssimple", "P256_SPHINCSSHA256128SSIMPLE", NULL, KEY_P256_SPHINCS_SHA256_128S_SIMPLE, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-p384-sphincssha256192frobust", "P384_SPHINCSSHA256192FROBUST", NULL, KEY_P384_SPHINCS_SHA256_192F_ROBUST, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-sphincssha256192fsimple", "P384_SPHINCSSHA256192FSIMPLE", NULL, KEY_P384_SPHINCS_SHA256_192F_SIMPLE, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-sphincssha256192srobust", "P384_SPHINCSSHA256192SROBUST", NULL, KEY_P384_SPHINCS_SHA256_192S_ROBUST, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-sphincssha256192ssimple", "P384_SPHINCSSHA256192SSIMPLE", NULL, KEY_P384_SPHINCS_SHA256_192S_SIMPLE, NID_secp384r1, 0, 0 },
+	{ "ssh-p521-sphincssha256256frobust", "P521_SPHINCSSHA256256FROBUST", NULL, KEY_P521_SPHINCS_SHA256_256F_ROBUST, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-sphincssha256256fsimple", "P521_SPHINCSSHA256256FSIMPLE", NULL, KEY_P521_SPHINCS_SHA256_256F_SIMPLE, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-sphincssha256256srobust", "P521_SPHINCSSHA256256SROBUST", NULL, KEY_P521_SPHINCS_SHA256_256S_ROBUST, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-sphincssha256256ssimple", "P521_SPHINCSSHA256256SSIMPLE", NULL, KEY_P521_SPHINCS_SHA256_256S_SIMPLE, NID_secp521r1, 0, 0 },
 	{ "ssh-rsa3072-sphincsshake256128frobust", "RSA3072_SPHINCSSHAKE256128FROBUST", NULL, KEY_RSA3072_SPHINCS_SHAKE256_128F_ROBUST, 0, 0, 0 },
 	{ "ssh-p256-sphincsshake256128frobust", "P256_SPHINCSSHAKE256128FROBUST", NULL, KEY_P256_SPHINCS_SHAKE256_128F_ROBUST, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-sphincsshake256128fsimple", "RSA3072_SPHINCSSHAKE256128FSIMPLE", NULL, KEY_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE, 0, 0, 0 },
+	{ "ssh-p256-sphincsshake256128fsimple", "P256_SPHINCSSHAKE256128FSIMPLE", NULL, KEY_P256_SPHINCS_SHAKE256_128F_SIMPLE, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-sphincsshake256128srobust", "RSA3072_SPHINCSSHAKE256128SROBUST", NULL, KEY_RSA3072_SPHINCS_SHAKE256_128S_ROBUST, 0, 0, 0 },
+	{ "ssh-p256-sphincsshake256128srobust", "P256_SPHINCSSHAKE256128SROBUST", NULL, KEY_P256_SPHINCS_SHAKE256_128S_ROBUST, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-rsa3072-sphincsshake256128ssimple", "RSA3072_SPHINCSSHAKE256128SSIMPLE", NULL, KEY_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE, 0, 0, 0 },
+	{ "ssh-p256-sphincsshake256128ssimple", "P256_SPHINCSSHAKE256128SSIMPLE", NULL, KEY_P256_SPHINCS_SHAKE256_128S_SIMPLE, NID_X9_62_prime256v1, 0, 0 },
+	{ "ssh-p384-sphincsshake256192frobust", "P384_SPHINCSSHAKE256192FROBUST", NULL, KEY_P384_SPHINCS_SHAKE256_192F_ROBUST, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-sphincsshake256192fsimple", "P384_SPHINCSSHAKE256192FSIMPLE", NULL, KEY_P384_SPHINCS_SHAKE256_192F_SIMPLE, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-sphincsshake256192srobust", "P384_SPHINCSSHAKE256192SROBUST", NULL, KEY_P384_SPHINCS_SHAKE256_192S_ROBUST, NID_secp384r1, 0, 0 },
+	{ "ssh-p384-sphincsshake256192ssimple", "P384_SPHINCSSHAKE256192SSIMPLE", NULL, KEY_P384_SPHINCS_SHAKE256_192S_SIMPLE, NID_secp384r1, 0, 0 },
+	{ "ssh-p521-sphincsshake256256frobust", "P521_SPHINCSSHAKE256256FROBUST", NULL, KEY_P521_SPHINCS_SHAKE256_256F_ROBUST, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-sphincsshake256256fsimple", "P521_SPHINCSSHAKE256256FSIMPLE", NULL, KEY_P521_SPHINCS_SHAKE256_256F_SIMPLE, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-sphincsshake256256srobust", "P521_SPHINCSSHAKE256256SROBUST", NULL, KEY_P521_SPHINCS_SHAKE256_256S_ROBUST, NID_secp521r1, 0, 0 },
+	{ "ssh-p521-sphincsshake256256ssimple", "P521_SPHINCSSHAKE256256SSIMPLE", NULL, KEY_P521_SPHINCS_SHAKE256_256S_SIMPLE, NID_secp521r1, 0, 0 },
 ///// OQS_TEMPLATE_FRAGMENT_ADD_HYBRID_KT_END
 #endif /* WITH_HYBRID_AUTH */
 #ifdef WITH_OPENSSL
diff --git a/sshkey.h b/sshkey.h
index e6c97e69..1ff1cfc9 100644
--- a/sshkey.h
+++ b/sshkey.h
@@ -73,41 +73,153 @@ enum sshkey_types {
 ///// OQS_TEMPLATE_FRAGMENT_ENUM_KT_START
 	KEY_OQSDEFAULT,
 	KEY_DILITHIUM_2,
+	KEY_DILITHIUM_3,
+	KEY_DILITHIUM_4,
 	KEY_FALCON_512,
-	KEY_MQDSS_31_48,
+	KEY_FALCON_1024,
 	KEY_PICNIC_L1FS,
+	KEY_PICNIC_L1UR,
+	KEY_PICNIC_L1FULL,
+	KEY_PICNIC_L3FS,
+	KEY_PICNIC_L3UR,
+	KEY_PICNIC_L3FULL,
+	KEY_PICNIC_L5FS,
+	KEY_PICNIC_L5UR,
+	KEY_PICNIC_L5FULL,
 	KEY_PICNIC3_L1,
-	KEY_QTESLA_P_I,
+	KEY_PICNIC3_L3,
+	KEY_PICNIC3_L5,
 	KEY_RAINBOW_IA_CLASSIC,
+	KEY_RAINBOW_IA_CYCLIC,
+	KEY_RAINBOW_IA_CYCLIC_COMPRESSED,
 	KEY_RAINBOW_IIIC_CLASSIC,
+	KEY_RAINBOW_IIIC_CYCLIC,
+	KEY_RAINBOW_IIIC_CYCLIC_COMPRESSED,
 	KEY_RAINBOW_VC_CLASSIC,
+	KEY_RAINBOW_VC_CYCLIC,
+	KEY_RAINBOW_VC_CYCLIC_COMPRESSED,
 	KEY_SPHINCS_HARAKA_128F_ROBUST,
+	KEY_SPHINCS_HARAKA_128F_SIMPLE,
+	KEY_SPHINCS_HARAKA_128S_ROBUST,
+	KEY_SPHINCS_HARAKA_128S_SIMPLE,
+	KEY_SPHINCS_HARAKA_192F_ROBUST,
+	KEY_SPHINCS_HARAKA_192F_SIMPLE,
+	KEY_SPHINCS_HARAKA_192S_ROBUST,
+	KEY_SPHINCS_HARAKA_192S_SIMPLE,
+	KEY_SPHINCS_HARAKA_256F_ROBUST,
+	KEY_SPHINCS_HARAKA_256F_SIMPLE,
+	KEY_SPHINCS_HARAKA_256S_ROBUST,
+	KEY_SPHINCS_HARAKA_256S_SIMPLE,
 	KEY_SPHINCS_SHA256_128F_ROBUST,
+	KEY_SPHINCS_SHA256_128F_SIMPLE,
+	KEY_SPHINCS_SHA256_128S_ROBUST,
+	KEY_SPHINCS_SHA256_128S_SIMPLE,
+	KEY_SPHINCS_SHA256_192F_ROBUST,
+	KEY_SPHINCS_SHA256_192F_SIMPLE,
+	KEY_SPHINCS_SHA256_192S_ROBUST,
+	KEY_SPHINCS_SHA256_192S_SIMPLE,
+	KEY_SPHINCS_SHA256_256F_ROBUST,
+	KEY_SPHINCS_SHA256_256F_SIMPLE,
+	KEY_SPHINCS_SHA256_256S_ROBUST,
+	KEY_SPHINCS_SHA256_256S_SIMPLE,
 	KEY_SPHINCS_SHAKE256_128F_ROBUST,
+	KEY_SPHINCS_SHAKE256_128F_SIMPLE,
+	KEY_SPHINCS_SHAKE256_128S_ROBUST,
+	KEY_SPHINCS_SHAKE256_128S_SIMPLE,
+	KEY_SPHINCS_SHAKE256_192F_ROBUST,
+	KEY_SPHINCS_SHAKE256_192F_SIMPLE,
+	KEY_SPHINCS_SHAKE256_192S_ROBUST,
+	KEY_SPHINCS_SHAKE256_192S_SIMPLE,
+	KEY_SPHINCS_SHAKE256_256F_ROBUST,
+	KEY_SPHINCS_SHAKE256_256F_SIMPLE,
+	KEY_SPHINCS_SHAKE256_256S_ROBUST,
+	KEY_SPHINCS_SHAKE256_256S_SIMPLE,
 	KEY_RSA3072_OQSDEFAULT,
 	KEY_P256_OQSDEFAULT,
 	KEY_RSA3072_DILITHIUM_2,
 	KEY_P256_DILITHIUM_2,
+	KEY_RSA3072_DILITHIUM_3,
+	KEY_P256_DILITHIUM_3,
+	KEY_P384_DILITHIUM_4,
 	KEY_RSA3072_FALCON_512,
 	KEY_P256_FALCON_512,
-	KEY_RSA3072_MQDSS_31_48,
-	KEY_P256_MQDSS_31_48,
+	KEY_P521_FALCON_1024,
 	KEY_RSA3072_PICNIC_L1FS,
 	KEY_P256_PICNIC_L1FS,
+	KEY_RSA3072_PICNIC_L1UR,
+	KEY_P256_PICNIC_L1UR,
+	KEY_RSA3072_PICNIC_L1FULL,
+	KEY_P256_PICNIC_L1FULL,
+	KEY_P384_PICNIC_L3FS,
+	KEY_P384_PICNIC_L3UR,
+	KEY_P384_PICNIC_L3FULL,
+	KEY_P521_PICNIC_L5FS,
+	KEY_P521_PICNIC_L5UR,
+	KEY_P521_PICNIC_L5FULL,
 	KEY_RSA3072_PICNIC3_L1,
 	KEY_P256_PICNIC3_L1,
-	KEY_RSA3072_QTESLA_P_I,
-	KEY_P256_QTESLA_P_I,
+	KEY_P384_PICNIC3_L3,
+	KEY_P521_PICNIC3_L5,
 	KEY_RSA3072_RAINBOW_IA_CLASSIC,
 	KEY_P256_RAINBOW_IA_CLASSIC,
+	KEY_RSA3072_RAINBOW_IA_CYCLIC,
+	KEY_P256_RAINBOW_IA_CYCLIC,
+	KEY_RSA3072_RAINBOW_IA_CYCLIC_COMPRESSED,
+	KEY_P256_RAINBOW_IA_CYCLIC_COMPRESSED,
 	KEY_P384_RAINBOW_IIIC_CLASSIC,
+	KEY_P384_RAINBOW_IIIC_CYCLIC,
+	KEY_P384_RAINBOW_IIIC_CYCLIC_COMPRESSED,
 	KEY_P521_RAINBOW_VC_CLASSIC,
+	KEY_P521_RAINBOW_VC_CYCLIC,
+	KEY_P521_RAINBOW_VC_CYCLIC_COMPRESSED,
 	KEY_RSA3072_SPHINCS_HARAKA_128F_ROBUST,
 	KEY_P256_SPHINCS_HARAKA_128F_ROBUST,
+	KEY_RSA3072_SPHINCS_HARAKA_128F_SIMPLE,
+	KEY_P256_SPHINCS_HARAKA_128F_SIMPLE,
+	KEY_RSA3072_SPHINCS_HARAKA_128S_ROBUST,
+	KEY_P256_SPHINCS_HARAKA_128S_ROBUST,
+	KEY_RSA3072_SPHINCS_HARAKA_128S_SIMPLE,
+	KEY_P256_SPHINCS_HARAKA_128S_SIMPLE,
+	KEY_P384_SPHINCS_HARAKA_192F_ROBUST,
+	KEY_P384_SPHINCS_HARAKA_192F_SIMPLE,
+	KEY_P384_SPHINCS_HARAKA_192S_ROBUST,
+	KEY_P384_SPHINCS_HARAKA_192S_SIMPLE,
+	KEY_P521_SPHINCS_HARAKA_256F_ROBUST,
+	KEY_P521_SPHINCS_HARAKA_256F_SIMPLE,
+	KEY_P521_SPHINCS_HARAKA_256S_ROBUST,
+	KEY_P521_SPHINCS_HARAKA_256S_SIMPLE,
 	KEY_RSA3072_SPHINCS_SHA256_128F_ROBUST,
 	KEY_P256_SPHINCS_SHA256_128F_ROBUST,
+	KEY_RSA3072_SPHINCS_SHA256_128F_SIMPLE,
+	KEY_P256_SPHINCS_SHA256_128F_SIMPLE,
+	KEY_RSA3072_SPHINCS_SHA256_128S_ROBUST,
+	KEY_P256_SPHINCS_SHA256_128S_ROBUST,
+	KEY_RSA3072_SPHINCS_SHA256_128S_SIMPLE,
+	KEY_P256_SPHINCS_SHA256_128S_SIMPLE,
+	KEY_P384_SPHINCS_SHA256_192F_ROBUST,
+	KEY_P384_SPHINCS_SHA256_192F_SIMPLE,
+	KEY_P384_SPHINCS_SHA256_192S_ROBUST,
+	KEY_P384_SPHINCS_SHA256_192S_SIMPLE,
+	KEY_P521_SPHINCS_SHA256_256F_ROBUST,
+	KEY_P521_SPHINCS_SHA256_256F_SIMPLE,
+	KEY_P521_SPHINCS_SHA256_256S_ROBUST,
+	KEY_P521_SPHINCS_SHA256_256S_SIMPLE,
 	KEY_RSA3072_SPHINCS_SHAKE256_128F_ROBUST,
 	KEY_P256_SPHINCS_SHAKE256_128F_ROBUST,
+	KEY_RSA3072_SPHINCS_SHAKE256_128F_SIMPLE,
+	KEY_P256_SPHINCS_SHAKE256_128F_SIMPLE,
+	KEY_RSA3072_SPHINCS_SHAKE256_128S_ROBUST,
+	KEY_P256_SPHINCS_SHAKE256_128S_ROBUST,
+	KEY_RSA3072_SPHINCS_SHAKE256_128S_SIMPLE,
+	KEY_P256_SPHINCS_SHAKE256_128S_SIMPLE,
+	KEY_P384_SPHINCS_SHAKE256_192F_ROBUST,
+	KEY_P384_SPHINCS_SHAKE256_192F_SIMPLE,
+	KEY_P384_SPHINCS_SHAKE256_192S_ROBUST,
+	KEY_P384_SPHINCS_SHAKE256_192S_SIMPLE,
+	KEY_P521_SPHINCS_SHAKE256_256F_ROBUST,
+	KEY_P521_SPHINCS_SHAKE256_256F_SIMPLE,
+	KEY_P521_SPHINCS_SHAKE256_256S_ROBUST,
+	KEY_P521_SPHINCS_SHAKE256_256S_SIMPLE,
 ///// OQS_TEMPLATE_FRAGMENT_ENUM_KT_END
 	KEY_UNSPEC
 };
-- 
2.27.0

